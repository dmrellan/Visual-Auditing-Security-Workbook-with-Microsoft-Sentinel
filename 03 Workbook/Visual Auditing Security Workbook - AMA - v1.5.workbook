{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## Visual Auditing Security Workbook with AMA (v1.5)"
      },
      "name": "text - 0"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "222c6ed0-239e-4e9d-ba42-b9b68953a710",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "query": "summarize by subscriptionId\r\n| project value = strcat(\"/subscriptions/\",subscriptionId), label = subscriptionId\r\n| order by value asc",
            "crossComponentResources": [
              "value::all"
            ],
            "value": "",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "f063a605-7d75-441d-9fb8-4e93a585a884",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "isRequired": true,
            "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| project id\r\n| order by id asc",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "value": "",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "fef90254-12b7-4bb3-86cc-3bc8d21e6fcf",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 2592000000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "ecaf4b03-9fba-4a9b-be84-2092e2fc264a",
            "version": "KqlParameterItem/1.0",
            "name": "Help",
            "label": "Show Help",
            "type": 10,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n { \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }\r\n]\r\n"
          },
          {
            "id": "80ed9ec0-c0ca-45d3-b12f-51bb0927f546",
            "version": "KqlParameterItem/1.0",
            "name": "LAPSPasswordGUID",
            "type": 1,
            "description": "ms-Msc-AdmPwd GUID",
            "isRequired": true,
            "value": "",
            "isHiddenWhenLocked": true
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 1"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "4896b2a2-5459-4bc5-8801-928bcdebea5f",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "User Hygiene",
            "subTarget": "UserHygieneTab",
            "style": "link"
          },
          {
            "id": "f574f874-a5bf-4e9e-9585-5cf91f8dec26",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Computer Hygiene",
            "subTarget": "ComputerHygieneTab",
            "style": "link"
          },
          {
            "id": "f8d43d05-4fc1-4d95-b6b2-320d3a64e4b5",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "LAPS Deploy",
            "subTarget": "LAPSDeployTab",
            "style": "link"
          },
          {
            "id": "8f4799f7-8ee9-4c11-ab4a-eb3f06b23921",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "LAPS Audit",
            "subTarget": "LAPSAuditTab",
            "style": "link"
          },
          {
            "id": "c01e8f05-f11e-4e98-868b-fb75c8c0d320",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "NonExistent Users",
            "subTarget": "NonExistentUsersTab",
            "style": "link"
          },
          {
            "id": "31f6fbe7-1b6a-417c-b515-376b3c655eeb",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Group Changes",
            "subTarget": "GroupChangesTab",
            "style": "link"
          },
          {
            "id": "96be383d-cf75-4581-8aad-0c3427e69aea",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "User Auth",
            "subTarget": "UserAuthTab",
            "style": "link"
          },
          {
            "id": "c09a864b-8d9c-4eb5-8810-4cac96565cd9",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "SChannel",
            "subTarget": "SChannelTab",
            "style": "link"
          },
          {
            "id": "ecfa49c6-97a7-46ee-b3a4-5f9713bafdc7",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Security Log Clear",
            "subTarget": "SecurityLogClearTab",
            "style": "link"
          },
          {
            "id": "0bf56df8-9f78-456d-9266-e49b0932e571",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Audit Policy Change",
            "subTarget": "AuditPolicyChangeTab",
            "style": "link"
          },
          {
            "id": "b6a45fdf-a978-4381-893c-821957c2a9b4",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "User Management",
            "subTarget": "UserManagementTab",
            "style": "link"
          },
          {
            "id": "37476d56-a5a1-4bb8-8de2-fc5097a636c6",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "About",
            "subTarget": "AboutTab",
            "style": "link"
          }
        ]
      },
      "name": "links - 2"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Group: User Hygiene",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### User Hygiene Help\r\n#### Scenario\r\nThis tab shows the overal state of the user population based on:\r\n- Users that are high-priviledge users.\r\n- Users that have not logged in for an extended period of time (100 days).\r\n- Users that have not changed password for an extended period of time (100 days).\r\n- User with Password Never Expired set.\r\n\r\n#### Requirements\r\n\t- Custom Logs PowerShell Script configured.\r\n\t- Parser functions configured.\r\n\r\n#### Data types\r\n\t- Custom Logs\r\n#### KPIs\r\n\t- Accounts with high number of days without Password Change (isAdmin=True and isDisabled)\r\n\t- Accounts with high number of days without Login (isAdmin=True and isDisabled)",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 6"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "af016daf-41b5-453f-8176-e08dbb260f62",
                  "version": "KqlParameterItem/1.0",
                  "name": "isAdmin",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\"}\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "73283fb2-b14c-49ab-8c12-4303d50666a8",
                  "version": "KqlParameterItem/1.0",
                  "name": "isStalePassword",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "d760fe9c-2a67-4361-932c-ab26cab2aacc",
                  "version": "KqlParameterItem/1.0",
                  "name": "isStaleLogon",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "7196b92c-fe79-4b79-a35e-dddb86a3ac39",
                  "version": "KqlParameterItem/1.0",
                  "name": "isPasswordNeverExpires",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "febabe5c-7de5-4123-b787-4d8087ddc8b8",
                  "version": "KqlParameterItem/1.0",
                  "name": "isAccountExpired",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "e7895b48-643e-4b31-b59b-35892b511dcd",
                  "version": "KqlParameterItem/1.0",
                  "name": "isDisabled",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "False"
                },
                {
                  "id": "46dacff9-1473-4458-b72f-1cd6c9edf634",
                  "version": "KqlParameterItem/1.0",
                  "name": "FilterByAccount",
                  "label": "Filter by account",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "f1bf7ff8-4865-48a6-8dfc-de45160c2c49",
                  "version": "KqlParameterItem/1.0",
                  "name": "StaleThreshold",
                  "type": 1,
                  "value": "100",
                  "isHiddenWhenLocked": true
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "isGMSA",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "id": "99b4bb5f-7136-412a-9733-fbeb82613fd9"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let basedata = materialize(VASWUsersParser\r\n| where msDSPrincipalName contains '{FilterByAccount}' \r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isAdmin}\"==\"\" or isAdmin == \"{isAdmin:value}\"\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isPasswordNeverExpires}\"==\"\" or isPasswordNeverExpires == \"{isPasswordNeverExpires:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| where \"{isGMSA}\"==\"\" or isGMSA == \"{isGMSA:value}\"\r\n| where \"{isAccountExpired}\"==\"\" or isAccountExpired == \"{isAccountExpired:value}\");\r\n//\r\nlet totalAccountsSelected = basedata\r\n                    | summarize Count=count()\r\n                    | project Metric=\"Total accounts selected\",Count;\r\nlet admins = basedata\r\n                    | where isAdmin==\"True\"\r\n                    | summarize Count=count()\r\n                    | project Metric=\"admins\",Count;\r\nlet users = basedata\r\n                    | where isAdmin==\"False\"\r\n                    | summarize Count=count()\r\n                    | project Metric=\"users\",Count;\r\nunion totalAccountsSelected, admins,users",
              "size": 3,
              "showAnalytics": true,
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Metric",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal"
                    }
                  }
                },
                "showBorder": false,
                "size": "auto"
              }
            },
            "name": "query - 5",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "VASWUsersParser\r\n| where msDSPrincipalName contains '{FilterByAccount}' \r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isAdmin}\"==\"\" or isAdmin == \"{isAdmin:value}\"\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isPasswordNeverExpires}\"==\"\" or isPasswordNeverExpires == \"{isPasswordNeverExpires:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| where \"{isGMSA}\"==\"\" or isGMSA == \"{isGMSA:value}\"\r\n| where \"{isAccountExpired}\"==\"\" or isAccountExpired == \"{isAccountExpired:value}\"\r\n| summarize Count=count() by isAdmin\r\n| project AdminState=isAdmin,Count\r\n| order by AdminState asc",
                    "size": 3,
                    "title": "Users by Admin State",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "AdminState",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "colors",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "False",
                              "representation": "green",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "True",
                              "representation": "redBright",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "gray",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Count",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      "showBorder": true,
                      "size": "auto"
                    }
                  },
                  "name": "query - 2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let isStaleFalse = (VASWUsersParser\r\n| where msDSPrincipalName contains '{FilterByAccount}' \r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isAdmin}\"==\"\" or isAdmin == \"{isAdmin:value}\"\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isPasswordNeverExpires}\"==\"\" or isPasswordNeverExpires == \"{isPasswordNeverExpires:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| where \"{isGMSA}\"==\"\" or isGMSA == \"{isGMSA:value}\"\r\n| where \"{isAccountExpired}\"==\"\" or isAccountExpired == \"{isAccountExpired:value}\"\r\n                    | summarize State=\"False\", Count=countif(DaysSinceLastLogon<=toint('{StaleThreshold}'))\r\n                    );\r\nlet isStaleTrue = (VASWUsersParser\r\n| where msDSPrincipalName contains '{FilterByAccount}' \r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isAdmin}\"==\"\" or isAdmin == \"{isAdmin:value}\"\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isPasswordNeverExpires}\"==\"\" or isPasswordNeverExpires == \"{isPasswordNeverExpires:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| where \"{isGMSA}\"==\"\" or isGMSA == \"{isGMSA:value}\"\r\n| where \"{isAccountExpired}\"==\"\" or isAccountExpired == \"{isAccountExpired:value}\"\r\n                    | summarize State=\"True\", Count=countif(DaysSinceLastLogon>toint('{StaleThreshold}'))\r\n                    );\r\nunion isStaleTrue, isStaleFalse\r\n| order by State asc\r\n\r\n",
                    "size": 3,
                    "title": "Users by Stale Logon",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "State",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "colors",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "False",
                              "representation": "green",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "True",
                              "representation": "redBright",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "gray",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Count",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      "showBorder": true,
                      "size": "auto"
                    }
                  },
                  "name": "query - 2 - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let isStaleFalse = (VASWUsersParser\r\n| where msDSPrincipalName contains '{FilterByAccount}' \r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isAdmin}\"==\"\" or isAdmin == \"{isAdmin:value}\"\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isPasswordNeverExpires}\"==\"\" or isPasswordNeverExpires == \"{isPasswordNeverExpires:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| where \"{isGMSA}\"==\"\" or isGMSA == \"{isGMSA:value}\"\r\n| where \"{isAccountExpired}\"==\"\" or isAccountExpired == \"{isAccountExpired:value}\"\r\n    | summarize State=\"False\", Count=countif(DaysSincePasswordChanged <= toint('{StaleThreshold}'))\r\n    );\r\nlet isStaleTrue = (VASWUsersParser\r\n| where msDSPrincipalName contains '{FilterByAccount}' \r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isAdmin}\"==\"\" or isAdmin == \"{isAdmin:value}\"\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isPasswordNeverExpires}\"==\"\" or isPasswordNeverExpires == \"{isPasswordNeverExpires:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| where \"{isGMSA}\"==\"\" or isGMSA == \"{isGMSA:value}\"\r\n| where \"{isAccountExpired}\"==\"\" or isAccountExpired == \"{isAccountExpired:value}\"\r\n    | summarize State=\"True\", Count=countif(DaysSincePasswordChanged > toint('{StaleThreshold}'))\r\n    );\r\nunion isStaleTrue, isStaleFalse\r\n| order by State asc\r\n",
                    "size": 3,
                    "title": "Users by Stale Password",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "State",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "colors",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "False",
                              "representation": "green",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "True",
                              "representation": "redBright",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "gray",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Count",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      "showBorder": true,
                      "size": "auto"
                    }
                  },
                  "name": "query - 2 - Copy - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let isStaleFalse = (VASWUsersParser\r\n| where msDSPrincipalName contains '{FilterByAccount}' \r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isAdmin}\"==\"\" or isAdmin == \"{isAdmin:value}\"\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isPasswordNeverExpires}\"==\"\" or isPasswordNeverExpires == \"{isPasswordNeverExpires:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| where \"{isGMSA}\"==\"\" or isGMSA == \"{isGMSA:value}\"\r\n| where \"{isAccountExpired}\"==\"\" or isAccountExpired == \"{isAccountExpired:value}\"\r\n    | summarize State=\"False\", Count=countif(not(tobool(isPasswordNeverExpires)))\r\n    );\r\nlet isStaleTrue = (VASWUsersParser\r\n| where msDSPrincipalName contains '{FilterByAccount}' \r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isAdmin}\"==\"\" or isAdmin == \"{isAdmin:value}\"\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isPasswordNeverExpires}\"==\"\" or isPasswordNeverExpires == \"{isPasswordNeverExpires:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| where \"{isGMSA}\"==\"\" or isGMSA == \"{isGMSA:value}\"\r\n| where \"{isAccountExpired}\"==\"\" or isAccountExpired == \"{isAccountExpired:value}\"\r\n    | summarize State=\"True\", Count=countif(tobool(isPasswordNeverExpires))\r\n    );\r\nunion isStaleTrue, isStaleFalse\r\n| order by State asc\r\n",
                    "size": 3,
                    "title": "Users by Password Never Expires",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "State",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "colors",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "False",
                              "representation": "green",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "True",
                              "representation": "redBright",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "gray",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Count",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      "showBorder": true,
                      "size": "auto"
                    }
                  },
                  "name": "query - 2 - Copy - Copy - Copy"
                }
              ]
            },
            "customWidth": "30",
            "name": "UHG1",
            "styleSettings": {
              "margin": "25"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "VASWUsersParser\r\n| where msDSPrincipalName contains '{FilterByAccount}' \r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isAdmin}\"==\"\" or isAdmin == \"{isAdmin:value}\"\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isPasswordNeverExpires}\"==\"\" or isPasswordNeverExpires == \"{isPasswordNeverExpires:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| where \"{isGMSA}\"==\"\" or isGMSA == \"{isGMSA:value}\"\r\n| where \"{isAccountExpired}\"==\"\" or isAccountExpired == \"{isAccountExpired:value}\"\r\n| project [\"Principal Name\"]=msDSPrincipalName\r\n| order by [\"Principal Name\"] asc",
              "size": 0,
              "showAnalytics": true,
              "title": "Filter by selected account",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "exportFieldName": "Principal Name",
              "exportParameterName": "msDSPrincipalNameP",
              "exportDefaultValue": "All",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Principal Name",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "50ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "20",
            "name": "query - 1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "VASWUsersParser\r\n| where @\"{msDSPrincipalNameP:lable}\"==\"All\" or msDSPrincipalName == @\"{msDSPrincipalNameP}\"\r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isAdmin}\"==\"\" or isAdmin == \"{isAdmin:value}\"\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isPasswordNeverExpires}\"==\"\" or isPasswordNeverExpires == \"{isPasswordNeverExpires:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| where \"{isGMSA}\"==\"\" or isGMSA == \"{isGMSA:value}\"\r\n| where \"{isAccountExpired}\"==\"\" or isAccountExpired == \"{isAccountExpired:value}\"\r\n| project msDSPrincipalName, [\"Days Since Last Logon\"]=DaysSinceLastLogon, [\"Days Since Password Change\"]=DaysSincePasswordChanged\r\n| order by msDSPrincipalName asc\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "User Distribution by Logon and Password Age",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Logon",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "<=",
                          "thresholdValue": "{StaleThreshold}",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "36000",
                          "representation": "redDark",
                          "text": "Never"
                        },
                        {
                          "operator": ">",
                          "thresholdValue": "{StaleThreshold}",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Days Since Password Change",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "<=",
                          "thresholdValue": "{StaleThreshold}",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "36000",
                          "representation": "redDark",
                          "text": "Never"
                        },
                        {
                          "operator": ">",
                          "thresholdValue": "{StaleThreshold}",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "ghgh",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "VASWUsersParser\r\n| where @\"{msDSPrincipalNameP:lable}\"==\"All\" or msDSPrincipalName == @\"{msDSPrincipalNameP}\"\r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isAdmin}\"==\"\" or isAdmin == \"{isAdmin:value}\"\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isPasswordNeverExpires}\"==\"\" or isPasswordNeverExpires == \"{isPasswordNeverExpires:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| where \"{isGMSA}\"==\"\" or isGMSA == \"{isGMSA:value}\"\r\n| where \"{isAccountExpired}\"==\"\" or isAccountExpired == \"{isAccountExpired:value}\"\r\n| project msDSPrincipalName\r\n    , isDisabled = iif(Enabled==\"True\",\"False\",\"True\")\r\n    , isLockedOut\r\n    , isPasswordNeverExpires\r\n    , isNoPasswordRequired\r\n    , DaysSinceLastLogon = DaysSinceLastLogon\r\n    , DaysSincePasswordChanged = DaysSincePasswordChanged\r\n    , isAdmin\r\n    , whenChanged\r\n    , whenCreated\r\n    , DistinguishedName\r\n    //\r\n    , SID\r\n    , Enabled\r\n    , pwdLastSet\r\n    , SamAccountName\r\n    , accountExpires\r\n    , ObjectClass\r\n    , adminCount\r\n    , lastLogonTimestamp\r\n    , userAccountControl\r\n    , Name\r\n    , ObjectGUID\r\n    , isTrustAccount\r\n    , DaysSinceAccountExpired\r\n    , isAccountExpired\r\n    , PrincipalsAllowedToRetrieveManagedPassword\r\n    , PasswordInterval\r\n    , isGMSA\r\n| order by msDSPrincipalName asc",
              "size": 0,
              "showAnalytics": true,
              "title": "Details",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "msDSPrincipalName",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "GenericDetails",
                      "linkIsContextBlade": true
                    }
                  },
                  {
                    "columnMatch": "isDisabled",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "True",
                          "representation": "Disconnect",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "False",
                          "representation": "Connect",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "14ch"
                    }
                  },
                  {
                    "columnMatch": "isLockedOut",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "False",
                          "representation": "Unlock",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "True",
                          "representation": "Lock",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isPasswordNeverExpires",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "True",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "False",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "26ch"
                    }
                  },
                  {
                    "columnMatch": "isNoPasswordRequired",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "False",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "True",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "DaysSinceLastLogon",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "23ch"
                    }
                  },
                  {
                    "columnMatch": "DaysSincePasswordChanged",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "29ch"
                    }
                  },
                  {
                    "columnMatch": "isAdmin",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "True",
                          "representation": "turquoise",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "False",
                          "representation": "gray",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": null,
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SID",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Enabled",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "pwdLastSet",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SamAccountName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "accountExpires",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ObjectClass",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "adminCount",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "lastLogonTimestamp",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "userAccountControl",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ObjectGUID",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isTrustAccount",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "DaysSinceAccountExpired",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isAccountExpired",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "PrincipalsAllowedToRetrieveManagedPassword",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "PasswordInterval",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isGMSA",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "True",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "False",
                          "representation": "blue",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              },
              "sortBy": []
            },
            "name": "query - 4",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "UserHygieneTab"
      },
      "name": "UserHygieneGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Group: Computer Hygiene",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### Computer Hygiene Help\r\n#### Scenario\r\nThis tab shows which computers within the domain that are active with logins. It will present:\r\n- Computers based on the Operating System version.\r\n- Computers with Stale Logons (45 days by default).\r\n- Computers with Stale Passwords (45 days by default).\r\n\r\n#### Requirements\r\n\t- Custom Logs PowerShell Script configured.\r\n\t- Parser functions configured.\r\n#### Data types\r\n\t- Custom Logs\r\n#### KPIs\r\n\t- Computer accounts with high number of days without Password Change (isAdmin=True and isDisabled) \r\n\t- Computer accounts with high number of days without Login (isAdmin=True and isDisabled)",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 6"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "73283fb2-b14c-49ab-8c12-4303d50666a8",
                  "version": "KqlParameterItem/1.0",
                  "name": "isStalePassword",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "d760fe9c-2a67-4361-932c-ab26cab2aacc",
                  "version": "KqlParameterItem/1.0",
                  "name": "isStaleLogon",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "e7895b48-643e-4b31-b59b-35892b511dcd",
                  "version": "KqlParameterItem/1.0",
                  "name": "isDisabled",
                  "type": 10,
                  "value": "False",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "46dacff9-1473-4458-b72f-1cd6c9edf634",
                  "version": "KqlParameterItem/1.0",
                  "name": "FilterByComputer",
                  "label": "Filter by computer",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "f1bf7ff8-4865-48a6-8dfc-de45160c2c49",
                  "version": "KqlParameterItem/1.0",
                  "name": "StaleThreshold",
                  "type": 1,
                  "value": "45",
                  "isHiddenWhenLocked": true
                },
                {
                  "id": "6a124081-93e4-4426-8e65-daae694fdfa2",
                  "version": "KqlParameterItem/1.0",
                  "name": "FilterByOS",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "VASWComputersParser\r\n| distinct OperatingSystem\r\n| order by OperatingSystem asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let basedata = materialize(VASWComputersParser\r\n| where msDSPrincipalName contains '{FilterByComputer}' \r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ({FilterByOS}))\r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\");\r\n//\r\nlet totalComputersSelected = basedata\r\n                    | summarize Count=count()\r\n                    | project Metric=\"Computers selected\",Count;\r\nlet computersWithLAPSDeployed = basedata\r\n                    | where isLAPSDeployed == \"True\"\r\n                    | summarize Count=count()\r\n                    | project Metric=\"Computers with LAPS Deployed\",Count;\r\nunion totalComputersSelected,computersWithLAPSDeployed",
              "size": 3,
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Metric",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal"
                    }
                  }
                },
                "showBorder": false,
                "size": "auto"
              }
            },
            "name": "query - 5",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let isStaleFalse = (VASWComputersParser\r\n| where msDSPrincipalName contains '{FilterByComputer}' \r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ('{FilterByOS:lable}'))\r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n                    | summarize State=\"False\", Count=countif(DaysSinceLastLogon<=toint('{StaleThreshold}'))\r\n                    );\r\nlet isStaleTrue = (VASWComputersParser\r\n| where msDSPrincipalName contains '{FilterByComputer}' \r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ('{FilterByOS:lable}'))\r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n                    | summarize State=\"True\", Count=countif(DaysSinceLastLogon>toint('{StaleThreshold}'))\r\n                    );\r\nunion isStaleTrue, isStaleFalse\r\n| order by State asc\r\n\r\n",
                    "size": 3,
                    "title": "Computers by Stale Logon",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "State",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "colors",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "False",
                              "representation": "green",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "True",
                              "representation": "redBright",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "gray",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Count",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      "showBorder": true,
                      "size": "auto"
                    }
                  },
                  "name": "query - 2 - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let isStaleFalse = (VASWComputersParser\r\n| where msDSPrincipalName contains '{FilterByComputer}' \r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ({FilterByOS}))\r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n    | summarize State=\"False\", Count=countif(DaysSincePasswordChanged <= toint('{StaleThreshold}'))\r\n    );\r\nlet isStaleTrue = (VASWComputersParser\r\n| where msDSPrincipalName contains '{FilterByComputer}' \r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ('{FilterByOS:lable}'))\r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n    | summarize State=\"True\", Count=countif(DaysSincePasswordChanged > toint('{StaleThreshold}'))\r\n    );\r\nunion isStaleTrue, isStaleFalse\r\n| order by State asc\r\n",
                    "size": 3,
                    "title": "Computers by Stale Password",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "State",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "colors",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "False",
                              "representation": "green",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "True",
                              "representation": "redBright",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "gray",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Count",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      "showBorder": true,
                      "size": "auto"
                    }
                  },
                  "name": "query - 2 - Copy - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "VASWComputersParser\r\n| where msDSPrincipalName contains '{FilterByComputer}' \r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ({FilterByOS}))\r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| summarize ['Number of servers']=count() by OperatingSystem\r\n| project ['Operating System']=OperatingSystem, ['Number of servers']\r\n| order by ['Number of servers'] desc",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Computer by OS",
                    "timeContext": {
                      "durationMs": 604800000
                    },
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Operating System",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "32ch"
                          }
                        },
                        {
                          "columnMatch": "Number of servers",
                          "formatter": 8,
                          "formatOptions": {
                            "min": -1,
                            "palette": "blueDark",
                            "customColumnWidthSetting": "21ch"
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "OperatingSystem",
                        "formatter": 1
                      },
                      "rightContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      "showBorder": true,
                      "size": "auto"
                    }
                  },
                  "name": "query - 2"
                }
              ]
            },
            "customWidth": "30",
            "name": "UHG1",
            "styleSettings": {
              "margin": "25"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "VASWComputersParser\r\n| where msDSPrincipalName contains '{FilterByComputer}' \r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ({FilterByOS}))\r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| project [\"Principal Name\"]=Name\r\n| order by [\"Principal Name\"] asc",
              "size": 0,
              "title": "Filter by selected account",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "exportFieldName": "Principal Name",
              "exportParameterName": "msDSPrincipalNameP",
              "exportDefaultValue": "All",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Principal Name",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "20",
            "name": "query - 1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "VASWComputersParser\r\n| where @\"{msDSPrincipalNameP:lable}\"==\"All\" or msDSPrincipalName contains @\"{msDSPrincipalNameP}\"\r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ({FilterByOS}))\r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| project msDSPrincipalName, [\"Days Since Last Logon\"]=DaysSinceLastLogon, [\"Days Since Password Change\"]=DaysSincePasswordChanged\r\n| order by msDSPrincipalName asc\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "User Distribution by Logon and Password Age",
              "timeContext": {
                "durationMs": 604800000
              },
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Logon",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "<=",
                          "thresholdValue": "{StaleThreshold}",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "36000",
                          "representation": "redDark",
                          "text": "Never"
                        },
                        {
                          "operator": ">",
                          "thresholdValue": "{StaleThreshold}",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Days Since Password Change",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "<=",
                          "thresholdValue": "{StaleThreshold}",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "36000",
                          "representation": "redDark",
                          "text": "Never"
                        },
                        {
                          "operator": ">",
                          "thresholdValue": "{StaleThreshold}",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "ghgh",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "VASWComputersParser\r\n| where @\"{msDSPrincipalNameP:lable}\"==\"All\" or msDSPrincipalName contains @\"{msDSPrincipalNameP}\"\r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ({FilterByOS}))\r\n| extend isStaleLogon = tostring(iif(DaysSinceLastLogon>toint('{StaleThreshold}'),\"True\",\"False\"))\r\n| extend isStalePassword = iif(DaysSincePasswordChanged>toint('{StaleThreshold}'),\"True\",\"False\")\r\n| where \"{isStalePassword}\"==\"\" or isStalePassword == \"{isStalePassword:value}\"\r\n| where \"{isStaleLogon}\"==\"\" or isStaleLogon == \"{isStaleLogon:value}\"\r\n| where \"{isDisabled}\"==\"\" or isDisabled == \"{isDisabled:value}\"\r\n| project Name\r\n    , OperatingSystem\r\n    , DaysSinceLastLogon\r\n    , DaysSincePasswordChanged \r\n    //, isPAW\r\n    //, LAPSDeployed\r\n    , whenChanged\r\n    , whenCreated\r\n    , DistinguishedName\r\n    //\r\n        , SID \r\n    , Enabled \r\n    , pwdLastSet \r\n    , DNSHostName_s\r\n    , SamAccountName \r\n    , accountExpires\r\n    , ObjectClass\r\n    , lastLogonTimestamp\r\n    , userAccountControl\r\n    , msDSPrincipalName\r\n    , ObjectGUID\r\n    , primaryGroupID\r\n    , isDisabled\r\n    , isServerOS\r\n    , isDC\r\n    , isPasswordNeverExpires\r\n| order by Name asc",
              "size": 0,
              "showAnalytics": true,
              "title": "Details",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Name",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "GenericDetails",
                      "linkIsContextBlade": true
                    }
                  },
                  {
                    "columnMatch": "DaysSinceLastLogon",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "23ch"
                    }
                  },
                  {
                    "columnMatch": "DaysSincePasswordChanged",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "29ch"
                    }
                  },
                  {
                    "columnMatch": "SID",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Enabled",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "pwdLastSet",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "DNSHostName_s",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SamAccountName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "accountExpires",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ObjectClass",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "lastLogonTimestamp",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "userAccountControl",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "msDSPrincipalName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ObjectGUID",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "primaryGroupID",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isDisabled",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "14ch"
                    }
                  },
                  {
                    "columnMatch": "isServerOS",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isDC",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isPasswordNeverExpires",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "26ch"
                    }
                  }
                ]
              },
              "sortBy": []
            },
            "name": "query - 4",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "ComputerHygieneTab"
      },
      "name": "ComputerHygieneGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Group: LAPS Deploy",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### LAPS Deploy Help\r\n#### Scenario\r\nLocal Administrative Password Solution (LAPS) tab shows how many computers that have been configured by LAPS solution. It will show which Operating System that have LAPS deployed and the up-to-dateness vector on the LAPS Password:\r\n\r\n#### Requirements\r\n\t- Custom Logs PowerShell Script configured.\r\n\t- Parser functions configured.\r\n#### Data types\r\n\t- Custom Logs\r\n#### KPIs\r\n\t- Risk of the Lateral Account Movement are defined by the number of machines that have not implemented LAPS.\r\n\t- Overall LAPS deployment should be as close to 100% as possible as.\r\n\t- Password refreshes: Days until LAPS update should never be a negative value. The local admin password should be regularly changed.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 6"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "6a124081-93e4-4426-8e65-daae694fdfa2",
                  "version": "KqlParameterItem/1.0",
                  "name": "FilterByOS",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "VASWComputersParser\r\n| distinct OperatingSystem\r\n| order by OperatingSystem asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "46dacff9-1473-4458-b72f-1cd6c9edf634",
                  "version": "KqlParameterItem/1.0",
                  "name": "FilterByComputer",
                  "label": "Filter by computer",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "VASWComputersParser\r\n| where msDSPrincipalName contains '{FilterByComputer}' \r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ({FilterByOS}))\r\n| summarize Count=count() by isLAPSDeployed\r\n",
              "size": 3,
              "title": "Overall LAPS Deployment",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "piechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "True",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "green",
                          "text": "{0}{1} %"
                        }
                      ],
                      "compositeBarSettings": {
                        "labelText": "LAPSDeployed",
                        "columnSettings": [
                          {
                            "columnName": "True",
                            "color": "green"
                          },
                          {
                            "columnName": "False",
                            "color": "redBright"
                          }
                        ],
                        "noRowsScaling": true
                      },
                      "customColumnWidthSetting": "10ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "False",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "redBright",
                          "text": "{0}{1} %"
                        }
                      ],
                      "customColumnWidthSetting": "10ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ]
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "False",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "True",
                    "color": "green"
                  }
                ]
              }
            },
            "customWidth": "33",
            "name": "query - 1 - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "VASWComputersParser\r\n| where msDSPrincipalName contains '{FilterByComputer}' \r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ({FilterByOS}))\r\n| where isServerOS == \"True\"\r\n| summarize Count=count() by isLAPSDeployed\r\n",
              "size": 3,
              "title": "LAPS Server Deployment",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "piechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "True",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "green",
                          "text": "{0}{1} %"
                        }
                      ],
                      "compositeBarSettings": {
                        "labelText": "LAPSDeployed",
                        "columnSettings": [
                          {
                            "columnName": "True",
                            "color": "green"
                          },
                          {
                            "columnName": "False",
                            "color": "redBright"
                          }
                        ],
                        "noRowsScaling": true
                      },
                      "customColumnWidthSetting": "10ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "False",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "redBright",
                          "text": "{0}{1} %"
                        }
                      ],
                      "customColumnWidthSetting": "10ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ]
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "False",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "True",
                    "color": "green"
                  }
                ]
              }
            },
            "customWidth": "33",
            "name": "query - 1 - Copy - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "VASWComputersParser\r\n| where msDSPrincipalName contains '{FilterByComputer}' \r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ({FilterByOS}))\r\n| where isServerOS == \"False\"\r\n| summarize Count=count() by isLAPSDeployed\r\n",
              "size": 3,
              "title": "LAPS Workstation Deployment",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "piechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "True",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "green",
                          "text": "{0}{1} %"
                        }
                      ],
                      "compositeBarSettings": {
                        "labelText": "LAPSDeployed",
                        "columnSettings": [
                          {
                            "columnName": "True",
                            "color": "green"
                          },
                          {
                            "columnName": "False",
                            "color": "redBright"
                          }
                        ],
                        "noRowsScaling": true
                      },
                      "customColumnWidthSetting": "10ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "False",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "redBright",
                          "text": "{0}{1} %"
                        }
                      ],
                      "customColumnWidthSetting": "10ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ]
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "True",
                    "color": "green"
                  },
                  {
                    "seriesName": "False",
                    "color": "redBright"
                  }
                ]
              }
            },
            "customWidth": "34",
            "name": "query - 1 - Copy - Copy - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = materialize(VASWComputersParser);\r\nlet totalComputers = data\r\n| summarize TotalCount=count() by OperatingSystem;\r\n//\r\ntotalComputers\r\n| join kind=leftouter data on OperatingSystem\r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ({FilterByOS}))\r\n| project-away OperatingSystem1\r\n| summarize Count=count() by isLAPSDeployed, OperatingSystem,TotalCount\r\n| extend Pct = round(toreal(Count) / toreal(TotalCount),4)*100\r\n| project-away Count//TotalCount//, Count\r\n| evaluate pivot(isLAPSDeployed, avg(Pct))\r\n| extend [\"True\"] = iff(isnull(tobool([\"True\"])),toreal(0),toreal([\"True\"]))\r\n| extend [\"False\"] = iff(isnull(tobool([\"False\"])),toreal(0),toreal([\"False\"]))\r\n| order by TotalCount desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Total Computers by Operating System and LAPS Deployed",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "True",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "green",
                          "text": "{0}{1} %"
                        }
                      ],
                      "compositeBarSettings": {
                        "labelText": "LAPSDeployed",
                        "columnSettings": [
                          {
                            "columnName": "True",
                            "color": "green"
                          },
                          {
                            "columnName": "False",
                            "color": "redBright"
                          }
                        ],
                        "noRowsScaling": true
                      },
                      "customColumnWidthSetting": "10ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "False",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "redBright",
                          "text": "{0}{1} %"
                        }
                      ],
                      "customColumnWidthSetting": "10ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ]
              }
            },
            "customWidth": "35",
            "name": "query - 1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "VASWComputersParser\r\n| where msDSPrincipalName contains '{FilterByComputer}' \r\n| where '{FilterByOS:lable}' == \"All\" or (OperatingSystem in ({FilterByOS}))\r\n| project Name, OperatingSystem, LAPSPWDExpiration,isLAPSDeployed, DaysUntilLAPSUpdate\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Details",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Name",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "OperatingSystem",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "34ch"
                    }
                  },
                  {
                    "columnMatch": "LAPSPWDExpiration",
                    "formatter": 6,
                    "formatOptions": {
                      "customColumnWidthSetting": "23ch"
                    },
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "isLAPSDeployed",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "True",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "False",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "more",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "19ch"
                    }
                  },
                  {
                    "columnMatch": "DaysUntilLAPSUpdate",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "<",
                          "thresholdValue": "0",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "24ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "65",
            "name": "query - 1 - Copy",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "LAPSDeployTab"
      },
      "name": "LAPSDeployGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Group: LAPS Audit",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### LAPS Audit Help\r\n#### Scenario\r\nThis tab shows which users that are retrieving the passwords for the local systems to use locally.\r\nLAPS Auditing helps unveil which user account has accessed the local administrator’s password of a given computer. \r\n\r\n#### Requirements\r\n\t- Custom Logs PowerShell Script configured.\r\n\t- Parser functions configured.\r\n#### Active Directory Advanced Audit policy requirements.\r\n*Configuration\\Windows Settings\\Security Setting\\Advanced Audit Policy Configuration\\Audit Policies\\DS Access* to **Success**\r\n\r\n#### Events audited in this tab:\r\n\t- 4662 - An operation was performed on an object\r\n#### Data types\r\n\t- Custom Logs\r\n\t- SecurityEvents\r\n#### KPIs\r\n\t- Total Password Retrievals by Password Retriever.: A high number of retrievals might indicate that the user is trying to extract the Local Admin Password on the majority of the machines.\r\n\t- Total retrieved password by day generated: It should be as low as possible as this would show that there is no need for logging in locally to solve issues.\r\n\t- High number of checkups for a specific computer in Unique computer lookup by password retriever might indicate repeated problems with the comptuer or a dedicated attack for that machine.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 6"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "8c552470-a61a-4195-8c0e-8a972f28c12c",
                  "version": "KqlParameterItem/1.0",
                  "name": "ComputerName",
                  "label": "Computer name",
                  "type": 1,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": ""
                },
                {
                  "id": "2a352f62-a10a-4df8-a5ea-f731eab995d8",
                  "version": "KqlParameterItem/1.0",
                  "name": "PasswordRetriever",
                  "label": "Password retriever",
                  "type": 1,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": ""
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4662\r\n//| where Level == 8\r\n| where AccessMask == \"0x100\"\r\n| where SubjectUserName !endswith \"$\"\r\n| where Properties contains \"{LAPSPasswordGUID}\"\r\n| summarize Count=count() \r\n| project Metric=\"LAPS Password Retrievals\", Count",
              "size": 3,
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Metric"
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  }
                },
                "showBorder": true,
                "size": "full"
              }
            },
            "name": "query - 3"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\nlet retrievers = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4662\r\n//| where Level == 8\r\n| where AccessMask == \"0x100\"\r\n| where SubjectUserName !endswith \"$\"\r\n| where Properties contains \"{LAPSPasswordGUID}\"\r\n| summarize Count=count() by Retriever=Account\r\n| order by Count desc, Retriever asc\r\n| serialize Id = row_number();\r\n//\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4662\r\n| where Level == 8\r\n| where AccessMask == \"0x100\"\r\n| where SubjectUserName !endswith \"$\"\r\n| where Properties contains \"{LAPSPasswordGUID}\"\r\n| summarize Count=count() by Retriever=Account, ObjectName, ComputerGUID=substring(ObjectName,2,36)\r\n| join kind=inner \r\n    (VASWComputersParser) on $left.ComputerGUID==$right.ObjectGUID\r\n| order by Count desc, Retriever asc\r\n| project Retriever, ComputerGUID, DNSHostName_s, Count\r\n| where DNSHostName_s contains '{ComputerName}'\r\n| where Retriever contains '{PasswordRetriever}' \r\n| serialize Id = row_number(1000000)\r\n| join kind=inner \r\n    (retrievers) on Retriever\r\n| project Id, ComputerGUID, Computer=DNSHostName_s, [\"Password Retrievals\"]=Count, ParentId = Id1, Type=\"Computer\"\r\n| union (retrievers\r\n    | where Retriever contains '{PasswordRetriever}'\r\n\t| project Id, Type = \"Retriever\", Retriever, [\"Password Retrievals\"]=Count\r\n\t)\r\n| order by [\"Password Retrievals\"]",
              "size": 0,
              "showAnalytics": true,
              "title": "Total Password Retrievals by Password Retriever",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ComputerGUID",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Computer",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "GenericDetails",
                      "linkIsContextBlade": true
                    }
                  },
                  {
                    "columnMatch": "Password Retrievals",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "redBright"
                    }
                  },
                  {
                    "columnMatch": "ParentId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "GenericDetails",
                      "linkIsContextBlade": true
                    }
                  },
                  {
                    "columnMatch": "DistinguishedName",
                    "formatter": 5
                  }
                ],
                "hierarchySettings": {
                  "idColumn": "Id",
                  "parentColumn": "ParentId",
                  "treeType": 0,
                  "expanderColumn": "Retriever",
                  "expandTopLevel": false
                }
              }
            },
            "customWidth": "50",
            "name": "query - 1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4662\r\n//| where Level == 8\r\n| where AccessMask == \"0x100\"\r\n| where SubjectUserName !endswith \"$\"\r\n| where Properties contains \"{LAPSPasswordGUID}\"\r\n| summarize [\"Total Password Retrievals\"]=count() by bin(TimeGenerated, 1d)",
              "size": 0,
              "showAnalytics": true,
              "title": "Total Password Retrievals by DayGenerated",
              "color": "redBright",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "barchart",
              "chartSettings": {
                "xAxis": "TimeGenerated",
                "yAxis": [
                  "Total Password Retrievals"
                ]
              }
            },
            "customWidth": "50",
            "name": "query - 2",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4662\r\n//| where Level == 8\r\n| where AccessMask == \"0x100\"\r\n| where SubjectUserName !endswith \"$\"\r\n| where Properties contains \"{LAPSPasswordGUID}\"\r\n| project\r\n    TimeGenerated,\r\n    ComputerGUID=substring(ObjectName, 2, 36),\r\n    DC=Computer,\r\n    PasswordRetriever=Account\r\n| join kind=inner \r\n    (VASWComputersParser\r\n    | where isLAPSDeployed == \"True\")\r\n    on $left.ComputerGUID == $right.ObjectGUID\r\n| project TimeGenerated,DNSHostName_s, DaysUntilLAPSUpdate, LAPSUpdateCurrent,isLAPSDeployed\r\n| summarize arg_max(TimeGenerated,*) by DNSHostName_s\r\n| summarize\r\n    [\"LAPS Outdated\"]=countif(LAPSUpdateCurrent == 0),\r\n    [\"LAPS Updated\"]=countif(LAPSUpdateCurrent >0) \r\n| extend Temp = pack(\"LAPS Outdated\", [\"LAPS Outdated\"], \"LAPS Updated\", [\"LAPS Updated\"])\r\n| mv-expand kind=array Temp\r\n| project Status=tostring(Temp[0]), Count=toint(Temp[1])",
              "size": 3,
              "title": "Computers with LAPS deployed and updated/outdated",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {},
                "leftContent": {
                  "columnMatch": "Status",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "colors",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "LAPS Updated",
                        "representation": "green",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "LAPS Outdated",
                        "representation": "redBright",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "gray",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                "rightContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "none"
                  }
                },
                "showBorder": true,
                "sortCriteriaField": "Status",
                "sortOrderField": 2,
                "size": "auto"
              }
            },
            "name": "query - 7"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4662\r\n//| where Level == 8\r\n| where AccessMask == \"0x100\"\r\n| where SubjectUserName !endswith \"$\"\r\n| where Properties contains \"{LAPSPasswordGUID}\"\r\n| project TimeGenerated, ComputerGUID=substring(ObjectName,2,36), DC=Computer,PasswordRetriever=Account\r\n| join kind=inner \r\n    (VASWComputersParser) on $left.ComputerGUID==$right.ObjectGUID\r\n| where DNSHostName_s contains '{ComputerName}'\r\n| where PasswordRetriever contains '{PasswordRetriever}' \r\n| project TimeGenerated\r\n    , Computer=DNSHostName_s\r\n    , [\"Domain Controller\"]=DC\r\n    , [\"Password Retriever\"]=PasswordRetriever\r\n    , [\"LAPS Pwd Expiration\"]=LAPSPWDExpiration\r\n    , [\"LAPS Update Current\"]=LAPSUpdateCurrent\r\n    , [\"Days until LAPS update\"]=DaysUntilLAPSUpdate\r\n| order by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Details",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    },
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "Domain Controller",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "LAPS Pwd Expiration",
                    "formatter": 6,
                    "formatOptions": {
                      "customColumnWidthSetting": "24ch"
                    },
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "LAPS Update Current",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "23ch"
                    }
                  },
                  {
                    "columnMatch": "Days until LAPS update",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": ">=",
                          "thresholdValue": "0",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "<",
                          "thresholdValue": "0",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "25ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "67",
            "name": "query - 4",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//password retriever, unique computer\r\nlet computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4662\r\n//| where Level == 8\r\n| where AccessMask == \"0x100\"\r\n| where SubjectUserName !endswith \"$\"\r\n| where Properties contains \"{LAPSPasswordGUID}\"\r\n| extend ComputerGUID=substring(ObjectName,2,36)\r\n| summarize [\"Unique Computer\"]=dcount(ComputerGUID) by [\"Password Retriever\"]=Account\r\n| top 10 by [\"Unique Computer\"] desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Unique Computer Lookups by Password Retriever (Top 10)",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Unique Computer",
                    "formatter": 3,
                    "formatOptions": {
                      "palette": "coldHot"
                    }
                  }
                ]
              },
              "chartSettings": {
                "group": "Password Retriever",
                "createOtherGroup": 11,
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                }
              }
            },
            "customWidth": "33",
            "name": "query - 4 - Copy",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "LAPSAuditTab"
      },
      "name": "LAPSAuditGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Group: NonExistent Users",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "a66904d3-cbdd-4203-baf4-dcdeee7f3a2e",
                  "version": "KqlParameterItem/1.0",
                  "name": "Source",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "196ff28f-9867-41b3-aa92-8f8631f50c2a",
                  "version": "KqlParameterItem/1.0",
                  "name": "DC",
                  "label": "Domain Controller (AuthServer)",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "ee092c14-4c78-4819-bdca-d4225fdd7075",
                  "version": "KqlParameterItem/1.0",
                  "name": "isComputer",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "### NonExistent Users Help\r\n#### Scenario\r\nThis tab tracks the non-existent and potentially “sprayed” accounts in your environment. These are accounts generating failed logons (4625s) in which the sub-status code references a non-existent account. (Note: these failed logons are distinct from existent accounts with incorrect passwords.)\r\nYou should look especially for machines hosting – or accounts exhibiting – a pattern of non-existent user type of failed logons. These can be early indicators of attack or attempted attack.\r\n\r\n#### Active Directory Advanced Audit Policy requirements\r\n*Group policy configuration - Computer Configuration\\Policies\\Security Settings\\Advanced Audit Policy Configuration\\Account Logon*\r\n\t- Audit Credential Validation - Success, Failure\r\n\t- Audit Kerberos Authentication Service - Success, Failure\r\n\t- Audit Kerberos Service Ticket Operations - Success, Failure\r\n#### Events audited\r\n\t- 4776 - The computer attempted to validate the credentials for an account\r\n\t- 4768 - A Kerberos authentication ticket (TGT) was requested\r\n#### Data types\r\n\t- SecurityEvents\r\n#### KPIs\r\n\t- Top 10 sources of non-existent User Logon Attemps. It should be as close to zero as possible.\r\n\t- Non-existent user logon attempts by day. An increasing trend might show that there is a wrongly configured solution or that there is an ongoing user reconnaissance attack that is ongoing.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 8"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let computers = materialize(VASWComputersParser \r\n| where isDC == \"True\" \r\n| project Computer=DNSHostName_s);\r\n//\r\nSecurityEvent\r\n| where Computer in (computers) and Computer contains '{DC}'\r\n| where EventID == 4776 or EventID == 4768\r\n//| parse EventData with * '\"Status\">' AccessMask '/<Data' *\r\n| where Status == \"0xc0000064\" or Status == \"0x6\"\r\n| extend IpAddress = split(IpAddress,\":\")[3]\r\n| extend Source = iif(Workstation==\"\", IpAddress, Workstation)\r\n| extend isComputer = iif(TargetAccount endswith \"$\",\"True\",\"False\")\r\n| where isComputer contains '{isComputer}'\r\n| where Source contains '{Source}'\r\n| count\r\n| extend Metric=\"Total of logon attemps by non-existant users detected.\"\r\n\r\n",
              "size": 3,
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Metric",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  }
                },
                "showBorder": false,
                "size": "auto"
              }
            },
            "name": "query - 2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let computers = materialize(VASWComputersParser \r\n| where isDC == \"True\" \r\n| project Computer=DNSHostName_s);\r\n//\r\n//Agrupación 1 (Id). Count y serialize -- Sources\r\nlet Sources = SecurityEvent\r\n| where Computer in (computers) and Computer contains '{DC}'\r\n| where EventID == 4776 or EventID == 4768\r\n| where Status == \"0xc0000064\" or Status == \"0x6\" \r\n| extend IpAddress = split(IpAddress,\":\")[3]\r\n| extend Source = iif(Workstation==\"\", IpAddress, Workstation)\r\n| where Source contains '{Source}'\r\n| extend isComputer = iif(TargetAccount endswith \"$\",\"True\",\"False\")\r\n| where isComputer contains '{isComputer}'\r\n| summarize Count=count() by Source \r\n| top 15 by Count desc\r\n| order by Count desc, Source asc\r\n| serialize Id = row_number();\r\n//\r\n//Agrupación 2 (ParentId). Count, serialize, join y union -- Source, NonExistentUser\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where Computer contains '{DC}'\r\n| where EventID == 4776 or EventID == 4768\r\n| where Status == \"0xc0000064\" or Status == \"0x6\"\r\n| extend IpAddress = split(IpAddress,\":\")[3] \r\n| extend Source = iif(Workstation==\"\", IpAddress, Workstation) \r\n| extend AuthMethod = iif(ServiceName==\"\",PackageName,\"Kerberos\")\r\n| where Source contains '{Source}'\r\n| extend isComputer = iif(TargetAccount endswith \"$\",\"True\",\"False\")\r\n| where isComputer contains '{isComputer}'\r\n| top-nested 15 of Source by count(), top-nested 10 of NonExistentUser=tolower(TargetAccount) by Count=count()\r\n| project-away aggregated_Source\r\n| order by Count asc, Source asc \r\n| project Source, Count, NonExistentUser\r\n| serialize Id = row_number(1000000)\r\n| join kind=inner \r\n    (Sources) on Source\r\n| project Id, NonExistentUser,Count,ParentId=Id1\r\n| union (Sources | project Id, Source, Count)",
              "size": 0,
              "showAnalytics": true,
              "title": "Non-Existent User Logon Attempts Flow (Top 15 Sources by Top 10 NonExistentUsers)",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "NonExistentUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blueDark"
                    }
                  },
                  {
                    "columnMatch": "ParentId",
                    "formatter": 5
                  }
                ],
                "hierarchySettings": {
                  "idColumn": "Id",
                  "parentColumn": "ParentId",
                  "treeType": 0,
                  "expanderColumn": "Source",
                  "expandTopLevel": false
                }
              }
            },
            "customWidth": "35",
            "name": "query - 1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\n//\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4776 or EventID == 4768\r\n| where Status == \"0xc0000064\" or Status == \"0x6\"\r\n| extend isComputer = iif(TargetAccount endswith \"$\",\"True\",\"False\")\r\n| where isComputer contains '{isComputer}'\r\n| summarize [\"Total Logon attemps by non-existant users\"]=count() by bin(TimeGenerated, 1d)\r\n\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Non-Existent User Logon Attempts by Day",
              "color": "blueDark",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "barchart",
              "chartSettings": {
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false
                    }
                  }
                }
              }
            },
            "customWidth": "65",
            "name": "query - 3"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let computers = materialize(VASWComputersParser \r\n| where isDC == \"True\" \r\n| project Computer=DNSHostName_s);\r\n//\r\nSecurityEvent\r\n| where Computer in (computers) and Computer contains '{DC}'\r\n| where EventID == 4776 or EventID == 4768\r\n| where Status == \"0xc0000064\" or Status == \"0x6\"\r\n| extend Source = iif(Workstation==\"\", split(IpAddress,\":\")[3], Workstation)\r\n| where Source contains '{Source}'\r\n| extend isComputer = iif(TargetAccount endswith \"$\",\"True\",\"False\")\r\n| where isComputer contains '{isComputer}'\r\n| summarize [\"Total distinct users\"]=dcount(tolower(TargetAccount)) by Source\r\n| top 10 by [\"Total distinct users\"] desc\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Top 10 Sources by Distinct Non-Existent User",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Source",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Total distinct users",
                    "formatter": 3,
                    "formatOptions": {
                      "palette": "lightBlue",
                      "customColumnWidthSetting": "25ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "query - 6",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let computers = materialize(VASWComputersParser \r\n| where isDC == \"True\" \r\n| project Computer=DNSHostName_s);\r\n//\r\nSecurityEvent\r\n| where Computer in (computers) and Computer contains '{DC}'\r\n| where EventID == 4776 or EventID == 4768\r\n| where Status == \"0xc0000064\" or Status == \"0x6\"\r\n| extend Source = iif(Workstation==\"\", split(IpAddress,\":\")[3], Workstation)\r\n| where Source contains '{Source}'\r\n| extend isComputer = iif(TargetAccount endswith \"$\",\"True\",\"False\")\r\n| where isComputer contains '{isComputer}'\r\n| summarize [\"Count\"]=count() by TargetAccount=tolower(TargetAccount)\r\n| top 10 by [\"Count\"] desc\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Top 10 Non-Existent Users",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Count",
                    "formatter": 3,
                    "formatOptions": {
                      "palette": "blue"
                    }
                  }
                ]
              },
              "chartSettings": {
                "createOtherGroup": 10
              }
            },
            "customWidth": "50",
            "name": "query - 6 - Copy",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "8316d73b-816f-4bc5-8ca2-f66511972515",
                  "version": "KqlParameterItem/1.0",
                  "name": "NonExistentUser",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let computers = materialize(VASWComputersParser \r\n| where isDC == \"True\" \r\n| project Computer=DNSHostName_s);\r\n//\r\nSecurityEvent\r\n| where Computer in (computers) and Computer contains '{DC}'\r\n| where EventID == 4776 or EventID == 4768\r\n| parse EventData with * '\"Status\">' AccessMask '/<Data' *\r\n| where Status == \"0xc0000064\" or Status == \"0x6\"\r\n| extend IpAddress = split(IpAddress,\":\")[3]\r\n| extend Source = iif(Workstation==\"\", IpAddress, Workstation)\r\n| extend AuthMethod = iif(ServiceName==\"\",PackageName,\"Kerberos\")\r\n| where Source contains '{Source}'\r\n| where TargetAccount contains '{NonExistentUser}'\r\n| extend isComputer = iif(TargetAccount endswith \"$\",\"True\",\"False\")\r\n| where isComputer contains '{isComputer}'\r\n| summarize Count=count() by bin(TimeGenerated, 1d), Source, [\"DC (AuthServer)\"]=Computer,NonExistentUser=tolower(TargetAccount), AuthMethod\r\n| order by TimeGenerated\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Details",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    },
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "AuthMethod",
                    "formatter": 1
                  }
                ],
                "rowLimit": 1000
              },
              "sortBy": []
            },
            "name": "query - 4",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "NonExistentUsersTab"
      },
      "name": "NonExistentUsersGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Group: Group Changes",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### Group Changes Help\r\n#### Scenario\r\nThis tab will show which groups have been changed. It will also show which users are making the most number of changes.\r\n\r\n#### Active Directory Advanced Audit Policy requirements\r\n*Group policy configuration - Computer Configuration\\Policies\\Security Settings\\Advanced Audit Policy Configuration\\Account Management*\r\n\t- Audit Security Group Management - Success, Failure.\r\n#### Events audited\r\n\t4728 - A member was added to a security-enabled global group.\r\n\t4729 - A member was removed from a security-enabled global group\r\n\t4732 - A member was added to a security-enabled local group.\r\n\t4733 - A member was removed from a security-enabled local group.\r\n\t4756 - A member was added to a security-enabled universal group.\r\n\t4757 - A member was removed from a security-enabled universal group.\r\n#### Data types\r\n\t- SecurityEvents\r\n#### KPIs\r\n\t- Group Changes by Change Type (adds). Pay attention to the number of additions of users to High-privileged groups.\r\n\t- Group Changes by Day (adds). It shows trends of the number of accounts that is added to groups.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 5"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "24a6ecff-3206-40c2-9726-c860b96cdfa6",
                  "version": "KqlParameterItem/1.0",
                  "name": "ChangeType",
                  "label": "Change Type",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "jsonData": "[\r\n {\"value\": \"Add\", \"label\": \"Add\"},\r\n {\"value\": \"Remove\", \"label\": \"Remove\" }\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "a9046241-41da-476b-98a6-954777686b03",
                  "version": "KqlParameterItem/1.0",
                  "name": "isSelfChange",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "e6b363b6-dcb5-49d3-a423-d8209cb9094f",
                  "version": "KqlParameterItem/1.0",
                  "name": "TargetGroup",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "label": "TargetGroup (Impacted group)"
                },
                {
                  "id": "48b81e47-378b-4f7d-a7a3-657ae10e32f3",
                  "version": "KqlParameterItem/1.0",
                  "name": "MemberName",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "let computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where EventID in (4728, 4729, 4732, 4733, 4756, 4757)\r\n| distinct MemberName\r\n| order by MemberName asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "3de57584-ebbf-4aec-a345-c20933fee56a",
                  "version": "KqlParameterItem/1.0",
                  "name": "ChangeMaker",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all"
                },
                {
                  "id": "cbc5acf8-b307-4525-a985-7f381b155b2c",
                  "version": "KqlParameterItem/1.0",
                  "name": "isProtectedGroup",
                  "type": 10,
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//ChangeMaker=SubjectAccount\r\n//ChangeMakerSid=SubjectUserSid\r\n//TargetGroup=TargetAccount\r\nlet computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where EventID in (4728, 4729, 4732, 4733, 4756, 4757)\r\n| extend ChangeType = case(\r\n                        EventID == 4728, \"Add\", \r\n                        EventID == 4732, \"Add\", \r\n                        EventID == 4756, \"Add\",\r\n                        EventID == 4729, \"Remove\",\r\n                        EventID == 4733, \"Remove\",\r\n                        EventID == 4757, \"Remove\",\r\n                       \"Unknown\")\r\n| where (iif(SubjectUserSid==MemberSid,\"True\",\"False\")) contains '{isSelfChange}'\r\n| where ChangeType contains '{ChangeType}' \r\n| where TargetAccount contains '{TargetGroup}' \r\n| where SubjectAccount contains '{ChangeMaker}'\r\n| where  '{MemberName:lable}' == \"All\" or MemberName in ({MemberName})\r\n//| where adminCount contains '{isProtectedGroup}'\r\n| summarize Count=count() by [\"Impacted group\"]=TargetAccount, ChangeType\r\n| order by Count desc, [\"Impacted group\"] asc",
              "size": 0,
              "showAnalytics": true,
              "title": "Group Changes by Change Type and Impacted Group",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "ChangeType",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Add",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Remove",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "gray",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blueDark"
                    }
                  }
                ]
              }
            },
            "customWidth": "35",
            "name": "query - 1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//ChangeMaker=SubjectAccount\r\n//ChangeMakerSid=SubjectUserSid\r\n//TargetGroup=TargetAccount\r\nlet computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\n//\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where EventID in (4728, 4729, 4732, 4733, 4756, 4757)\r\n| extend ChangeType = case(\r\n                        EventID == 4728, \"Add\", \r\n                        EventID == 4732, \"Add\", \r\n                        EventID == 4756, \"Add\",\r\n                        EventID == 4729, \"Remove\",\r\n                        EventID == 4733, \"Remove\",\r\n                        EventID == 4757, \"Remove\",\r\n                       \"Unknown\")\r\n| where (iif(SubjectUserSid==MemberSid,\"True\",\"False\")) contains '{isSelfChange}'\r\n| where ChangeType contains '{ChangeType}' \r\n| where TargetAccount contains '{TargetGroup}' \r\n| where SubjectAccount contains '{ChangeMaker}'\r\n| where  '{MemberName:lable}' == \"All\" or MemberName in ({MemberName}) \r\n| summarize [\"Group changes by date\"]=count() by bin(TimeGenerated, 1d), ChangeType\r\n\r\n\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Group Changes by Date",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "categoricalbar",
              "chartSettings": {
                "xAxis": "TimeGenerated",
                "yAxis": [
                  "Group changes by date"
                ],
                "group": "ChangeType",
                "createOtherGroup": null,
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Add",
                    "color": "redBright"
                  },
                  {
                    "seriesName": "Remove",
                    "color": "green"
                  }
                ]
              }
            },
            "customWidth": "65",
            "name": "query - 2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//ChangeMaker=SubjectAccount\r\n//ChangeMakerSid=SubjectUserSid\r\n//TargetGroup=TargetAccount\r\nlet computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where EventID in (4728, 4729, 4732, 4733, 4756, 4757)\r\n| extend ChangeType = case(\r\n                        EventID == 4728, \"Add\", \r\n                        EventID == 4732, \"Add\", \r\n                        EventID == 4756, \"Add\",\r\n                        EventID == 4729, \"Remove\",\r\n                        EventID == 4733, \"Remove\",\r\n                        EventID == 4757, \"Remove\",\r\n                       \"Unknown\")\r\n| where (iif(SubjectUserSid==MemberSid,\"True\",\"False\")) contains '{isSelfChange}'\r\n| where ChangeType contains '{ChangeType}' \r\n| where TargetAccount contains '{TargetGroup}' \r\n| where SubjectAccount contains '{ChangeMaker}'\r\n| where  '{MemberName:lable}' == \"All\" or MemberName in ({MemberName}) \r\n| summarize Count=count() by [\"ChangeMaker\"]=SubjectAccount, ChangeType\r\n| evaluate pivot(ChangeType,sum(Count))\r\n| extend [\"Group changes\"]=\"\"\r\n| extend [\"Total changes\"]=toint(Add)+toint(Remove)\r\n| order by [\"Total changes\"] desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Group Changes by Change Maker",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "ChangeMaker",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "GenericDetails",
                      "linkIsContextBlade": true,
                      "customColumnWidthSetting": "26ch"
                    }
                  },
                  {
                    "columnMatch": "Add",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Remove",
                    "formatter": 5,
                    "formatOptions": {
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": [],
                        "noRowsScaling": true
                      }
                    }
                  },
                  {
                    "columnMatch": "Group changes",
                    "formatter": 22,
                    "formatOptions": {
                      "compositeBarSettings": {
                        "labelText": "Add | Remove",
                        "columnSettings": [
                          {
                            "columnName": "Add",
                            "color": "redBright"
                          },
                          {
                            "columnName": "Remove",
                            "color": "green"
                          }
                        ]
                      },
                      "customColumnWidthSetting": "28ch"
                    }
                  },
                  {
                    "columnMatch": "Total changes",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blueDark",
                      "customColumnWidthSetting": "17ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "30",
            "name": "query - 3",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//ChangeMaker=SubjectAccount\r\n//ChangeMakerSid=SubjectUserSid\r\n//TargetGroup=TargetAccount\r\nlet computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\nSecurityEvent\r\n| where Computer in (computers)\r\n| where EventID in (4728, 4729, 4732, 4733, 4756, 4757)\r\n| extend ChangeType = case(\r\n                        EventID == 4728, \"Add\", \r\n                        EventID == 4732, \"Add\", \r\n                        EventID == 4756, \"Add\",\r\n                        EventID == 4729, \"Remove\",\r\n                        EventID == 4733, \"Remove\",\r\n                        EventID == 4757, \"Remove\",\r\n                       \"Unknown\")\r\n| where (iif(SubjectUserSid==MemberSid,\"True\",\"False\")) contains '{isSelfChange}'\r\n| where ChangeType contains '{ChangeType}' \r\n| where TargetAccount contains '{TargetGroup}' \r\n| where SubjectAccount contains '{ChangeMaker}'\r\n| where  '{MemberName:lable}' == \"All\" or MemberName in ({MemberName}) \r\n| project TimeGenerated, ChangeType, TargetGroup=TargetAccount, MemberName, ChangeMaker=SubjectAccount,DC=Computer\r\n| order by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Details",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "formatOptions": {
                      "linkTarget": "GenericDetails",
                      "linkIsContextBlade": true,
                      "customColumnWidthSetting": "20ch"
                    },
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "ChangeType",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Add",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Remove",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "DC",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "ChangeType",
                    "label": "Type"
                  }
                ]
              }
            },
            "customWidth": "70",
            "name": "query - 4",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "GroupChangesTab"
      },
      "name": "GroupChangesGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Group: User Auth",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### User Authentication Help\r\n#### Scenario\r\nThis tab will show which users are authenticating. This will give an overview on the authentication being performed by a specific user.\r\n\r\n#### Active Directory Advanced Audit Policy requirements\r\n*Group policy configuration - Computer Configuration\\Windows Settings\\Security Setting\\Advanced Audit Policy Configuration\\Audit Policies\\Audit DS Access*\r\n\t- Audit Directory Service Access – Success\r\n*Group policy configuration - Computer Configuration\\Policies\\Security Settings\\Advanced Audit Policy Configuration\\Account Logon*\r\n\t- Audit Credential Validation - Success, Failure\r\n\t- Audit Kerberos Authentication Service - Success, Failure\r\n\t- Audit Kerberos Service Ticket Operations - Success, Failure\r\n*Group policy configuration - Computer Configuration\\Policies\\Security Settings\\Advanced Audit Policy Configuration\\Logon/Logoff\r\n\t- Audit Logon - Success, Failure\r\n\t- Account Lockout - Success, Failure\r\n\t- Audit Other Logon/Logoff Events - Success, Failure\r\n#### Events audited\r\n\t4624 - An account was successfully logged on\r\n\t4625 - An account failed to log on\r\n\t4740 - A user account was locked out\r\n\t4768 - A Kerberos authentication ticket (TGT) was requested\r\n\t4769 - A Kerberos service ticket was requested\r\n\t4776 - The computer attempted to validate the credentials for an account\r\n\t4771 - Kerberos pre-authentication failed\r\n#### Data types\r\n\t- SecurityEvents\r\n#### KPIs\r\n\t- Total Authentication Events by Account (Top 20) with AuditStatus set to Failure. This will indicate then top accounts that have the most incorrect authentications.\r\n\t- Total Authentication Events by Locon Computer with the filter AuditStatus set to Success and Failure. A machine with relatively high number of authentications may show a wrongly configured application or an ongoing attack\r\n",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 4"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "9100deff-d490-4d75-8b18-302e38ebe35a",
                  "version": "KqlParameterItem/1.0",
                  "name": "AuditStatus",
                  "label": "Audit Status",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"Success\", \"label\": \"Success\"},\r\n {\"value\": \"Failure\", \"label\": \"Failure\" }\r\n]\r\n",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "3ce22325-411f-4550-a89d-b54ac380e76f",
                  "version": "KqlParameterItem/1.0",
                  "name": "EventId",
                  "label": "Event ID",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SecurityEvent\r\n| where EventID in (4624,4625,4740,4768,4769,4771,4776)\r\n| distinct EventID,Activity\r\n| project Value = EventID, Label = Activity\r\n| order by Value asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "0fa9e5d0-609f-421c-9b13-893a485261d1",
                  "version": "KqlParameterItem/1.0",
                  "name": "AccountName",
                  "label": "Account name",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let AuthenticationBinSize = 1d;\r\nlet computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\n//\r\nlet Login4624Kerb = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"Kerberos\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName)//, EventID, Account, IpAddress, WorkstationName, AuthenticationPackageName, TimeGenerated, TargetAccount \r\n| where first_letter !=\"\"   \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624Negotiate = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"Negotiate\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624NTLM = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"NTLM\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624Other = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName <> \"MICROSOFT_AUTHENTICATION_PACKAGE_V1_0\" and AuthenticationPackageName <> \"Kerberos\" and AuthenticationPackageName <> \"NTLM\" and AuthenticationPackageName <> \"Negotiate\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624v1 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"MICROSOFT_AUTHENTICATION_PACKAGE_V1_0\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4625 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4625\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level, Status=SubStatus;\r\n//\r\nlet Login4740 = SecurityEvent\r\n| where EventID == 4740\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), SubjectDomainName, Account=strcat(SubjectDomainName,\"\\\\\",TargetUserName), DC=Computer, WorkstationName=TargetDomainName, Level;\r\n//\r\nlet Login476816 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4768\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 16\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, TargetUserName, Account=TargetAccount, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login47688 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4768\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 8\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), DC=Computer//, TargetUserName, TargetAccount, ServiceName, TicketEncryptionType, Status, Level,EventID, IpAddress\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, TargetUserName, Account=TargetAccount, ServiceName, TicketEncryptionType, Status, Level\r\n;\r\n//\r\nlet Login476916 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4769\r\n| where Level == 16\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| parse EventData with * '\"IpAddress\">' IpAddress '<' *\r\n| parse EventData with * '\"TargetUserName\">' TargetUserName '<' *\r\n| parse EventData with * '\"ServiceName\">' ServiceName '<' *\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login47698 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4769\r\n| where Level == 8\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| parse EventData with * '\"IpAddress\">' IpAddress '<' *\r\n| parse EventData with * '\"TargetUserName\">' TargetUserName '<' *\r\n| parse EventData with * '\"ServiceName\">' ServiceName '<' *\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), DC=Computer//, EventID, TimeGenerated, IpAddress, TargetUserName, ServiceName, TicketEncryptionType, Status\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login477616 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4776\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 16\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Account=TargetUserName, Status, PackageName, WorkstationName=Workstation, Level;\r\n//\r\nlet Login47768 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4776\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 8\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), SourceWorkstation=Workstation, DC=Computer//, EventID, PackageName, Status, TargetAccount, TargetUserName \r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Account=TargetUserName, Status, PackageName, WorkstationName=Workstation, Level;\r\n//\r\nlet Login4771 = SecurityEvent\r\n| where EventID == 4771\r\n| where TargetUserName !contains \"window Manager\"\r\n| where TargetUserName !endswith \"$\"\r\n| extend first_letter=extract(\"(^[a-fA-F])\", 1, TargetUserName), DC=Computer//, EventID, TimeGenerated, IpAddress, TargetUserName, ServiceName, Status\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, Status, Level;\r\n//\r\nunion (Login4624Kerb),(Login4624Negotiate ),(Login4624NTLM ),(Login4624Other ),(Login4624v1),(Login4625),(Login4740),(Login47688),(Login476816),(Login476916),(Login47698),(Login477616),(Login47768),(Login4771)\r\n| extend AuditStatus = iif(Level==8,\"Success\",iif(Level==16,\"Failure\",\"Unknown\"))\r\n| where AuditStatus contains '{AuditStatus}'\r\n| where '{EventId:lable}'=='All' or EventID in ({EventId})\r\n| where Account contains '{AccountName:escapejson}'\r\n| extend Account = tolower(iff(Account==\"\",\"Unknown\",Account))\r\n| summarize Count=sum(Count) by Account\r\n| top 20 by Count\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Total Auth Events by Account (Top 20)",
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "Account",
              "exportParameterName": "AccountP",
              "exportDefaultValue": "All",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue",
                      "customColumnWidthSetting": "20ch"
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_Count_1",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "Count",
                    "label": "Total Auth Events"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_Count_1",
                  "sortOrder": 2
                }
              ],
              "chartSettings": {
                "group": "Account",
                "createOtherGroup": 21
              }
            },
            "customWidth": "30",
            "name": "query - 1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let AuthenticationBinSize = 1d;\r\nlet computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\n//\r\nlet Login4624Kerb = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"Kerberos\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName)//, EventID, Account, IpAddress, WorkstationName, AuthenticationPackageName, TimeGenerated, TargetAccount \r\n| where first_letter !=\"\"   \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624Negotiate = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"Negotiate\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624NTLM = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"NTLM\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624Other = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName <> \"MICROSOFT_AUTHENTICATION_PACKAGE_V1_0\" and AuthenticationPackageName <> \"Kerberos\" and AuthenticationPackageName <> \"NTLM\" and AuthenticationPackageName <> \"Negotiate\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624v1 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"MICROSOFT_AUTHENTICATION_PACKAGE_V1_0\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4625 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4625\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level, Status=SubStatus;\r\n//\r\nlet Login4740 = SecurityEvent\r\n| where EventID == 4740\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), SubjectDomainName, Account=strcat(SubjectDomainName,\"\\\\\",TargetUserName), DC=Computer, WorkstationName=TargetDomainName, Level;\r\n//\r\nlet Login476816 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4768\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 16\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, TargetUserName, Account=TargetAccount, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login47688 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4768\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 8\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), DC=Computer//, TargetUserName, TargetAccount, ServiceName, TicketEncryptionType, Status, Level,EventID, IpAddress\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, TargetUserName, Account=TargetAccount, ServiceName, TicketEncryptionType, Status, Level\r\n;\r\n//\r\nlet Login476916 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4769\r\n| where Level == 16\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| parse EventData with * '\"IpAddress\">' IpAddress '<' *\r\n| parse EventData with * '\"TargetUserName\">' TargetUserName '<' *\r\n| parse EventData with * '\"ServiceName\">' ServiceName '<' *\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login47698 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4769\r\n| where Level == 8\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| parse EventData with * '\"IpAddress\">' IpAddress '<' *\r\n| parse EventData with * '\"TargetUserName\">' TargetUserName '<' *\r\n| parse EventData with * '\"ServiceName\">' ServiceName '<' *\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), DC=Computer//, EventID, TimeGenerated, IpAddress, TargetUserName, ServiceName, TicketEncryptionType, Status\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login477616 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4776\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 16\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Account=TargetUserName, Status, PackageName, WorkstationName=Workstation, Level;\r\n//\r\nlet Login47768 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4776\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 8\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), SourceWorkstation=Workstation, DC=Computer//, EventID, PackageName, Status, TargetAccount, TargetUserName \r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Account=TargetUserName, Status, PackageName, WorkstationName=Workstation, Level;\r\n//\r\nlet Login4771 = SecurityEvent\r\n| where EventID == 4771\r\n| where TargetUserName !contains \"window Manager\"\r\n| where TargetUserName !endswith \"$\"\r\n| extend first_letter=extract(\"(^[a-fA-F])\", 1, TargetUserName), DC=Computer//, EventID, TimeGenerated, IpAddress, TargetUserName, ServiceName, Status\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, Status, Level;\r\n//\r\nunion (Login4624Kerb),(Login4624Negotiate ),(Login4624NTLM ),(Login4624Other ),(Login4624v1),(Login4625),(Login4740),(Login47688),(Login476816),(Login476916),(Login47698),(Login477616),(Login47768),(Login4771)\r\n| extend AuditStatus = iif(Level==8,\"Success\",iif(Level==16,\"Failure\",\"Unknown\"))\r\n| where AuditStatus contains '{AuditStatus}'\r\n| where '{EventId:lable}'=='All' or EventID in ({EventId})\r\n| extend Account = tolower(iff(Account==\"\",\"Unknown\",Account))\r\n| where  (Account == '{AccountP:escapejson}') or ('{AccountP:escapejson}' == \"All\")\r\n| summarize Count=sum(Count) by WorkstationName\r\n| extend WorkstationName=iff(WorkstationName ==\"\",\"Unknown\",WorkstationName)\r\n| top 10 by Count\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Total Auth Events by LogonComputer (Top 10). Filtered by \"{AccountP}\" account.",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "barchart",
              "chartSettings": {
                "createOtherGroup": 11,
                "showLegend": true
              }
            },
            "customWidth": "70",
            "name": "query - 2",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let AuthenticationBinSize = 1d;\r\nlet KerberosEType = datatable(Etype: string,TicketEncryptionType:string,Strength:string)\r\n[\r\n    \"DES_CBC_CRC\",\"0x1\",\"Weak\",\r\n    \"DES_CBC_MD4\",\"0x2\",\"Weak\",\r\n    \"DES_CBC_MD5\",\"0x3\",\"Weak\",\r\n    \"[reserved]\",\"0x4\",\"Unknown\",\r\n    \"DES3_CBC_MD5\",\"0x5\",\"Weak\",\r\n    \"[reserved]\",\"0x6\",\"Unknown\",\r\n    \"DES3_CBC_SHA1\",\"0x7\",\"Weak\",\r\n    \"DSAWithSHA1_CMSOID\",\"0x9\",\"Unknown\",\r\n    \"MD5WithRSAEncryption_CMSOID\",\"0xa\",\"Weak\",\r\n    \"SHA1WithRSAEncryption_CMSOID\",\"0xb\",\"Unknown\",\r\n    \"RC2CBC_EnvOID\",\"0xc\",\"Unknown\",\r\n    \"RSAEncryption_EnvOID\",\"0xd\",\"Unknown\",\r\n    \"RSAES_OAEP_ENV_OID\",\"0xe\",\"Unknown\",\r\n    \"DES_EDE3_CBC_ENV_OID\",\"0xf\",\"Weak\",\r\n    \"DES3_CBC_SHA1_KD\",\"0x10\",\"Weak\",\r\n    \"AES128_CTS_HMAC_SHA1_96\",\"0x11\",\"Strong\",\r\n    \"AES256_CTS_HMAC_SHA1_96\",\"0x12\",\"Strong\",\r\n    \"RC4_HMAC\",\"0x17\",\"Moderate\",\r\n    \"RC4_HMAC_EXP\",\"0x18\",\"Moderate\",\r\n    \"Subkey_Keymaterial\",\"0x41\",\"Unknown\"\r\n];\r\nlet LogonStatusCode = datatable(Status:string,StatusText:string)\r\n    [\r\n    \"0x0\",\"Success\",\r\n    \"0x1\",\"Client's entry in database has expired\",\r\n    \"0x2\",\"Server's entry in database has expired\",\r\n    \"0x3\",\"Requested protocol version # not supported\",\r\n    \"0x4\",\"Client's key encrypted in old master key\",\r\n    \"0x5\",\"Server's key encrypted in old master key\",\r\n    \"0x6\",\"Client not found in Kerberos database\",\r\n    \"0x7\",\"Server not found in Kerberos database\",\r\n    \"0x8\",\"Multiple principal entries in database\",\r\n    \"0x9\",\"The client or server has a null key\",\r\n    \"0xa\",\"TGT not eligible for postdating\",\r\n    \"0xb\",\"Requested start time is later than end time (time diff with KDC)\",\r\n    \"0xc\",\"Requested start time is later than end time (logon restriction)\",\r\n    \"0xd\",\"KDC cannot accommodate requested option\",\r\n    \"0xe\",\"KDC has no support for encryption type\",\r\n    \"0xf\",\"KDC has no support for checksum type\",\r\n    \"0x10\",\"KDC has no support for padata type\",\r\n    \"0x11\",\"KDC has no support for transited type\",\r\n    \"0x12\",\"Clients credentials have been revoked\",\r\n    \"0x13\",\"Credentials for server have been revoked\",\r\n    \"0x14\",\"TGT has been revoked\",\r\n    \"0x15\",\"Client not yet valid - try again later\",\r\n    \"0x16\",\"Server not yet valid - try again later\",\r\n    \"0x17\",\"Password has expired\",\r\n    \"0x18\",\"Pre-authentication information was invalid\",\r\n    \"0x19\",\"Additional pre-authentication required\",\r\n    \"0x1a\",\"KDC does not know about requested server\",\r\n    \"0x1b\",\"KDC unavailable\",\r\n    \"0x1f\",\"Integrity check on decrypted field failed\",\r\n    \"0x20\",\"Ticket expired\",\r\n    \"0x21\",\"Ticket not yet valid\",\r\n    \"0x22\",\"Request is a replay\",\r\n    \"0x23\",\"The ticket isn't for us\",\r\n    \"0x24\",\"Ticket and authenticator don't match\",\r\n    \"0x25\",\"Clock skew too great\",\r\n    \"0x26\",\"Incorrect net address\",\r\n    \"0x27\",\"Protocol version mismatch\",\r\n    \"0x28\",\"Invalid msg type\",\r\n    \"0x29\",\"Message stream modified\",\r\n    \"0x2a\",\"Message out of order\",\r\n    \"0x2c\",\"Specified version of key is not available\",\r\n    \"0x2d\",\"Service key not available\",\r\n    \"0x2e\",\"Mutual authentication failed\",\r\n    \"0x2f\",\"Incorrect message direction\",\r\n    \"0x30\",\"Alternative authentication method required\",\r\n    \"0x31\",\"Incorrect sequence number in message\",\r\n    \"0x32\",\"Inappropriate type of checksum in message\",\r\n    \"0x3c\",\"Generic error (description in e-text)\",\r\n    \"0x3d\",\"Field is too long for this implementation\",\r\n    \"0x3e\",\"KDC_ERR_CLIENT_NOT_TRUSTED\",\r\n    \"0x3f\",\"KDC_ERR_KDC_NOT_TRUSTED\",\r\n    \"0x40\",\"KDC_ERR_INVALID_SIG\",\r\n    \"0x41\",\"KDC_ERR_KEY_TOO_WEAK\",\r\n    \"0x42\",\"KRB_AP_ERR_USER_TO_USER_REQUIRED\",\r\n    \"0x43\",\"KRB_AP_ERR_NO_TGT\",\r\n    \"0x44\",\"KDC_ERR_WRONG_REALM\",\r\n    \"0xc0000064\",\"Username does not exist\",\r\n    \"0xc000006a\",\"Username is correct but the password is wrong\",\r\n    \"0xc0000234\",\"User is currently locked out\",\r\n    \"0xc0000072\",\"Account is currently disabled\",\r\n    \"0xc000006f\",\"User tried to logon outside his day of week or time of day restrictions\",\r\n    \"0xc0000070\",\"Workstation restriction, or Authentication Policy Silo violation (look for event ID 4820 on domain controller)\",\r\n    \"0xc0000193\",\"Account expiration\",\r\n    \"0xc0000071\",\"Expired password\",\r\n    \"0xc0000133\",\"Clocks between DC and other computer too far out of sync\",\r\n    \"0xc0000224\",\"User is required to change password at next logon\",\r\n    \"0xc0000225\",\"Unknown - Windows Error\",\r\n    \"0xc000015b\",\"The user has not been granted the requested logon type (aka logon right) at this machine\"];\r\nlet computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\n//\r\nlet Login4624Kerb = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"Kerberos\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName)//, EventID, Account, IpAddress, WorkstationName, AuthenticationPackageName, TimeGenerated, TargetAccount \r\n| where first_letter !=\"\"   \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624Negotiate = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"Negotiate\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624NTLM = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"NTLM\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624Other = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName <> \"MICROSOFT_AUTHENTICATION_PACKAGE_V1_0\" and AuthenticationPackageName <> \"Kerberos\" and AuthenticationPackageName <> \"NTLM\" and AuthenticationPackageName <> \"Negotiate\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624v1 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"MICROSOFT_AUTHENTICATION_PACKAGE_V1_0\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4625 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4625\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level, Status=SubStatus;\r\n//\r\nlet Login4740 = SecurityEvent\r\n| where EventID == 4740\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), SubjectDomainName, Account=strcat(SubjectDomainName,\"\\\\\",TargetUserName), DC=Computer, WorkstationName=TargetDomainName, Level;\r\n//\r\nlet Login476816 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4768\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 16\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, TargetUserName, Account=TargetAccount, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login47688 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4768\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 8\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), DC=Computer//, TargetUserName, TargetAccount, ServiceName, TicketEncryptionType, Status, Level,EventID, IpAddress\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, TargetUserName, Account=TargetAccount, ServiceName, TicketEncryptionType, Status, Level\r\n;\r\n//\r\nlet Login476916 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4769\r\n| where Level == 16\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| parse EventData with * '\"IpAddress\">' IpAddress '<' *\r\n| parse EventData with * '\"TargetUserName\">' TargetUserName '<' *\r\n| parse EventData with * '\"ServiceName\">' ServiceName '<' *\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login47698 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4769\r\n| where Level == 8\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| parse EventData with * '\"IpAddress\">' IpAddress '<' *\r\n| parse EventData with * '\"TargetUserName\">' TargetUserName '<' *\r\n| parse EventData with * '\"ServiceName\">' ServiceName '<' *\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), DC=Computer//, EventID, TimeGenerated, IpAddress, TargetUserName, ServiceName, TicketEncryptionType, Status\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login477616 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4776\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 16\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Account=TargetUserName, Status, PackageName, WorkstationName=Workstation, Level;\r\n//\r\nlet Login47768 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4776\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 8\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), SourceWorkstation=Workstation, DC=Computer//, EventID, PackageName, Status, TargetAccount, TargetUserName \r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Account=TargetUserName, Status, PackageName, WorkstationName=Workstation, Level;\r\n//\r\nlet Login4771 = SecurityEvent\r\n| where EventID == 4771\r\n| where TargetUserName !contains \"window Manager\"\r\n| where TargetUserName !endswith \"$\"\r\n| extend first_letter=extract(\"(^[a-fA-F])\", 1, TargetUserName), DC=Computer//, EventID, TimeGenerated, IpAddress, TargetUserName, ServiceName, Status\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, Status, Level;\r\n//\r\nunion (Login4624Kerb),(Login4624Negotiate ),(Login4624NTLM ),(Login4624Other ),(Login4624v1),(Login4625),(Login4740),(Login47688),(Login476816),(Login476916),(Login47698),(Login477616),(Login47768),(Login4771)\r\n| extend AuditStatus = iif(Level == 8, \"Success\", iif(Level == 16, \"Failure\", \"Unknown\"))\r\n| where AuditStatus contains '{AuditStatus}'\r\n| where '{EventId:lable}'=='All' or EventID in ({EventId})\r\n| where  (Account == '{AccountP:escapejson}') or ('{AccountP:escapejson}' == \"All\")\r\n| summarize Count=sum(Count) by Status\r\n| join kind=leftouter (LogonStatusCode) on Status\r\n| extend Status=iif(StatusText == \"\", iff(Status==\"\",\"Unknown\",Status), StatusText)\r\n| where Status<>\"Success\"\r\n| project-away Status1, StatusText\r\n| top 10 by Count\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Top 10 Status messages",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "redDark"
                    }
                  },
                  {
                    "columnMatch": "Account",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "24ch"
                    }
                  },
                  {
                    "columnMatch": "PackageName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "24ch"
                    }
                  },
                  {
                    "columnMatch": "AuditStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Success",
                          "representation": "blueDark",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Failure",
                          "representation": "redDark",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "gray",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isAdmin",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "True",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "False",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "30",
            "name": "query - 3 - Copy",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let AuthenticationBinSize = 1d;\r\nlet computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\n//\r\nlet Login4624Kerb = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"Kerberos\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName)//, EventID, Account, IpAddress, WorkstationName, AuthenticationPackageName, TimeGenerated, TargetAccount \r\n| where first_letter !=\"\"   \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624Negotiate = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"Negotiate\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624NTLM = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"NTLM\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624Other = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName <> \"MICROSOFT_AUTHENTICATION_PACKAGE_V1_0\" and AuthenticationPackageName <> \"Kerberos\" and AuthenticationPackageName <> \"NTLM\" and AuthenticationPackageName <> \"Negotiate\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624v1 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"MICROSOFT_AUTHENTICATION_PACKAGE_V1_0\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4625 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4625\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level, Status=SubStatus;\r\n//\r\nlet Login4740 = SecurityEvent\r\n| where EventID == 4740\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), SubjectDomainName, Account=strcat(SubjectDomainName,\"\\\\\",TargetUserName), DC=Computer, WorkstationName=TargetDomainName, Level;\r\n//\r\nlet Login476816 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4768\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 16\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, TargetUserName, Account=TargetAccount, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login47688 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4768\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 8\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), DC=Computer//, TargetUserName, TargetAccount, ServiceName, TicketEncryptionType, Status, Level,EventID, IpAddress\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, TargetUserName, Account=TargetAccount, ServiceName, TicketEncryptionType, Status, Level\r\n;\r\n//\r\nlet Login476916 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4769\r\n| where Level == 16\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| parse EventData with * '\"IpAddress\">' IpAddress '<' *\r\n| parse EventData with * '\"TargetUserName\">' TargetUserName '<' *\r\n| parse EventData with * '\"ServiceName\">' ServiceName '<' *\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login47698 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4769\r\n| where Level == 8\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| parse EventData with * '\"IpAddress\">' IpAddress '<' *\r\n| parse EventData with * '\"TargetUserName\">' TargetUserName '<' *\r\n| parse EventData with * '\"ServiceName\">' ServiceName '<' *\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), DC=Computer//, EventID, TimeGenerated, IpAddress, TargetUserName, ServiceName, TicketEncryptionType, Status\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login477616 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4776\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 16\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Account=TargetUserName, Status, PackageName, WorkstationName=Workstation, Level;\r\n//\r\nlet Login47768 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4776\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 8\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), SourceWorkstation=Workstation, DC=Computer//, EventID, PackageName, Status, TargetAccount, TargetUserName \r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Account=TargetUserName, Status, PackageName, WorkstationName=Workstation, Level;\r\n//\r\nlet Login4771 = SecurityEvent\r\n| where EventID == 4771\r\n| where TargetUserName !contains \"window Manager\"\r\n| where TargetUserName !endswith \"$\"\r\n| extend first_letter=extract(\"(^[a-fA-F])\", 1, TargetUserName), DC=Computer//, EventID, TimeGenerated, IpAddress, TargetUserName, ServiceName, Status\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, Status, Level;\r\n//\r\nunion (Login4624Kerb),(Login4624Negotiate ),(Login4624NTLM ),(Login4624Other ),(Login4624v1),(Login4625),(Login4740),(Login47688),(Login476816),(Login476916),(Login47698),(Login477616),(Login47768),(Login4771)\r\n| extend AuditStatus = iif(Level==8,\"Success\",iif(Level==16,\"Failure\",\"Unknown\"))\r\n| where AuditStatus contains '{AuditStatus}'\r\n| where '{EventId:lable}'=='All' or EventID in ({EventId})\r\n| extend Account = tolower(iff(Account==\"\",\"Unknown\",Account))\r\n| where  (Account == '{AccountP:escapejson}') or ('{AccountP:escapejson}' == \"All\")\r\n| summarize Count=sum(Count) by IpAddress\r\n| extend IpAddress=iff(IpAddress ==\"\",\"Unknown\",IpAddress)\r\n| top 10 by Count\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Total Auth Events by Source (Top 10). Filtered by \"{AccountP}\" account.",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "barchart",
              "chartSettings": {
                "createOtherGroup": 11,
                "showLegend": true
              }
            },
            "customWidth": "70",
            "name": "query - 2 - Copy",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let AuthenticationBinSize = 1d;\r\nlet KerberosEType = datatable(Etype: string,TicketEncryptionType:string,Strength:string)\r\n[\r\n    \"DES_CBC_CRC\",\"0x1\",\"Weak\",\r\n    \"DES_CBC_MD4\",\"0x2\",\"Weak\",\r\n    \"DES_CBC_MD5\",\"0x3\",\"Weak\",\r\n    \"[reserved]\",\"0x4\",\"Unknown\",\r\n    \"DES3_CBC_MD5\",\"0x5\",\"Weak\",\r\n    \"[reserved]\",\"0x6\",\"Unknown\",\r\n    \"DES3_CBC_SHA1\",\"0x7\",\"Weak\",\r\n    \"DSAWithSHA1_CMSOID\",\"0x9\",\"Unknown\",\r\n    \"MD5WithRSAEncryption_CMSOID\",\"0xa\",\"Weak\",\r\n    \"SHA1WithRSAEncryption_CMSOID\",\"0xb\",\"Unknown\",\r\n    \"RC2CBC_EnvOID\",\"0xc\",\"Unknown\",\r\n    \"RSAEncryption_EnvOID\",\"0xd\",\"Unknown\",\r\n    \"RSAES_OAEP_ENV_OID\",\"0xe\",\"Unknown\",\r\n    \"DES_EDE3_CBC_ENV_OID\",\"0xf\",\"Weak\",\r\n    \"DES3_CBC_SHA1_KD\",\"0x10\",\"Weak\",\r\n    \"AES128_CTS_HMAC_SHA1_96\",\"0x11\",\"Strong\",\r\n    \"AES256_CTS_HMAC_SHA1_96\",\"0x12\",\"Strong\",\r\n    \"RC4_HMAC\",\"0x17\",\"Moderate\",\r\n    \"RC4_HMAC_EXP\",\"0x18\",\"Moderate\",\r\n    \"Subkey_Keymaterial\",\"0x41\",\"Unknown\"\r\n];\r\nlet LogonStatusCode = datatable(Status:string,StatusText:string)\r\n    [\r\n    \"0x0\",\"Success\",\r\n    \"0x1\",\"Client's entry in database has expired\",\r\n    \"0x2\",\"Server's entry in database has expired\",\r\n    \"0x3\",\"Requested protocol version # not supported\",\r\n    \"0x4\",\"Client's key encrypted in old master key\",\r\n    \"0x5\",\"Server's key encrypted in old master key\",\r\n    \"0x6\",\"Client not found in Kerberos database\",\r\n    \"0x7\",\"Server not found in Kerberos database\",\r\n    \"0x8\",\"Multiple principal entries in database\",\r\n    \"0x9\",\"The client or server has a null key\",\r\n    \"0xa\",\"TGT not eligible for postdating\",\r\n    \"0xb\",\"Requested start time is later than end time (time diff with KDC)\",\r\n    \"0xc\",\"Requested start time is later than end time (logon restriction)\",\r\n    \"0xd\",\"KDC cannot accommodate requested option\",\r\n    \"0xe\",\"KDC has no support for encryption type\",\r\n    \"0xf\",\"KDC has no support for checksum type\",\r\n    \"0x10\",\"KDC has no support for padata type\",\r\n    \"0x11\",\"KDC has no support for transited type\",\r\n    \"0x12\",\"Clients credentials have been revoked\",\r\n    \"0x13\",\"Credentials for server have been revoked\",\r\n    \"0x14\",\"TGT has been revoked\",\r\n    \"0x15\",\"Client not yet valid - try again later\",\r\n    \"0x16\",\"Server not yet valid - try again later\",\r\n    \"0x17\",\"Password has expired\",\r\n    \"0x18\",\"Pre-authentication information was invalid\",\r\n    \"0x19\",\"Additional pre-authentication required\",\r\n    \"0x1a\",\"KDC does not know about requested server\",\r\n    \"0x1b\",\"KDC unavailable\",\r\n    \"0x1f\",\"Integrity check on decrypted field failed\",\r\n    \"0x20\",\"Ticket expired\",\r\n    \"0x21\",\"Ticket not yet valid\",\r\n    \"0x22\",\"Request is a replay\",\r\n    \"0x23\",\"The ticket isn't for us\",\r\n    \"0x24\",\"Ticket and authenticator don't match\",\r\n    \"0x25\",\"Clock skew too great\",\r\n    \"0x26\",\"Incorrect net address\",\r\n    \"0x27\",\"Protocol version mismatch\",\r\n    \"0x28\",\"Invalid msg type\",\r\n    \"0x29\",\"Message stream modified\",\r\n    \"0x2a\",\"Message out of order\",\r\n    \"0x2c\",\"Specified version of key is not available\",\r\n    \"0x2d\",\"Service key not available\",\r\n    \"0x2e\",\"Mutual authentication failed\",\r\n    \"0x2f\",\"Incorrect message direction\",\r\n    \"0x30\",\"Alternative authentication method required\",\r\n    \"0x31\",\"Incorrect sequence number in message\",\r\n    \"0x32\",\"Inappropriate type of checksum in message\",\r\n    \"0x3c\",\"Generic error (description in e-text)\",\r\n    \"0x3d\",\"Field is too long for this implementation\",\r\n    \"0x3e\",\"KDC_ERR_CLIENT_NOT_TRUSTED\",\r\n    \"0x3f\",\"KDC_ERR_KDC_NOT_TRUSTED\",\r\n    \"0x40\",\"KDC_ERR_INVALID_SIG\",\r\n    \"0x41\",\"KDC_ERR_KEY_TOO_WEAK\",\r\n    \"0x42\",\"KRB_AP_ERR_USER_TO_USER_REQUIRED\",\r\n    \"0x43\",\"KRB_AP_ERR_NO_TGT\",\r\n    \"0x44\",\"KDC_ERR_WRONG_REALM\",\r\n    \"0xc0000064\",\"Username does not exist\",\r\n    \"0xc000006a\",\"Username is correct but the password is wrong\",\r\n    \"0xc0000234\",\"User is currently locked out\",\r\n    \"0xc0000072\",\"Account is currently disabled\",\r\n    \"0xc000006f\",\"User tried to logon outside his day of week or time of day restrictions\",\r\n    \"0xc0000070\",\"Workstation restriction, or Authentication Policy Silo violation (look for event ID 4820 on domain controller)\",\r\n    \"0xc0000193\",\"Account expiration\",\r\n    \"0xc0000071\",\"Expired password\",\r\n    \"0xc0000133\",\"Clocks between DC and other computer too far out of sync\",\r\n    \"0xc0000224\",\"User is required to change password at next logon\",\r\n    \"0xc0000225\",\"Unknown - Windows Error\",\r\n    \"0xc000015b\",\"The user has not been granted the requested logon type (aka logon right) at this machine\"];\r\nlet computers = VASWComputersParser\r\n| where isDC == \"True\"\r\n| project Computer=DNSHostName_s;\r\n//\r\nlet Login4624Kerb = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"Kerberos\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName)//, EventID, Account, IpAddress, WorkstationName, AuthenticationPackageName, TimeGenerated, TargetAccount \r\n| where first_letter !=\"\"   \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624Negotiate = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"Negotiate\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624NTLM = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"NTLM\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624Other = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName <> \"MICROSOFT_AUTHENTICATION_PACKAGE_V1_0\" and AuthenticationPackageName <> \"Kerberos\" and AuthenticationPackageName <> \"NTLM\" and AuthenticationPackageName <> \"Negotiate\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4624v1 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4624\r\n| where AuthenticationPackageName == \"MICROSOFT_AUTHENTICATION_PACKAGE_V1_0\"\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level;\r\n//\r\nlet Login4625 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4625\r\n| where Account !endswith \"$\"\r\n| where Account !contains @\"-\\-\"  \r\n| where Account !contains \"window Manager\"\r\n| where Account !contains \"NT AUTHORITY\" \r\n| summarize Count = count(EventID) by EventID, Account, IpAddress, WorkstationName, PackageName=AuthenticationPackageName, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Level, Status=SubStatus;\r\n//\r\nlet Login4740 = SecurityEvent\r\n| where EventID == 4740\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), SubjectDomainName, Account=strcat(SubjectDomainName,\"\\\\\",TargetUserName), DC=Computer, WorkstationName=TargetDomainName, Level;\r\n//\r\nlet Login476816 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4768\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 16\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, TargetUserName, Account=TargetAccount, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login47688 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4768\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 8\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), DC=Computer//, TargetUserName, TargetAccount, ServiceName, TicketEncryptionType, Status, Level,EventID, IpAddress\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, TargetUserName, Account=TargetAccount, ServiceName, TicketEncryptionType, Status, Level\r\n;\r\n//\r\nlet Login476916 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4769\r\n| where Level == 16\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| parse EventData with * '\"IpAddress\">' IpAddress '<' *\r\n| parse EventData with * '\"TargetUserName\">' TargetUserName '<' *\r\n| parse EventData with * '\"ServiceName\">' ServiceName '<' *\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login47698 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4769\r\n| where Level == 8\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| parse EventData with * '\"IpAddress\">' IpAddress '<' *\r\n| parse EventData with * '\"TargetUserName\">' TargetUserName '<' *\r\n| parse EventData with * '\"ServiceName\">' ServiceName '<' *\r\n| parse EventData with * '\"TicketEncryptionType\">' TicketEncryptionType '<' *\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), DC=Computer//, EventID, TimeGenerated, IpAddress, TargetUserName, ServiceName, TicketEncryptionType, Status\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, TicketEncryptionType, Status, Level;\r\n//\r\nlet Login477616 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4776\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 16\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\" \r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Account=TargetUserName, Status, PackageName, WorkstationName=Workstation, Level;\r\n//\r\nlet Login47768 = SecurityEvent\r\n| where Computer in (computers)\r\n| where EventID == 4776\r\n| where TargetAccount !endswith \"$\"\r\n| where TargetAccount !contains \"window Manager\"\r\n| where Level == 8\r\n| parse EventData with * '\"Status\">' Status '<' *\r\n| where TargetUserName !contains \"$@\"\r\n| extend first_letter=extract(\"(^[a-aA-A])\", 1, TargetUserName), SourceWorkstation=Workstation, DC=Computer//, EventID, PackageName, Status, TargetAccount, TargetUserName \r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), DC=Computer, Account=TargetUserName, Status, PackageName, WorkstationName=Workstation, Level;\r\n//\r\nlet Login4771 = SecurityEvent\r\n| where EventID == 4771\r\n| where TargetUserName !contains \"window Manager\"\r\n| where TargetUserName !endswith \"$\"\r\n| extend first_letter=extract(\"(^[a-fA-F])\", 1, TargetUserName), DC=Computer//, EventID, TimeGenerated, IpAddress, TargetUserName, ServiceName, Status\r\n| where first_letter !=\"\"\r\n| summarize Count = count(EventID) by EventID, bin(TimeGenerated, AuthenticationBinSize), IpAddress, DC=Computer, Account=TargetUserName, ServiceName, Status, Level;\r\n//\r\nunion (Login4624Kerb),(Login4624Negotiate ),(Login4624NTLM ),(Login4624Other ),(Login4624v1),(Login4625),(Login4740),(Login47688),(Login476816),(Login476916),(Login47698),(Login477616),(Login47768),(Login4771)\r\n| extend AuditStatus = iif(Level == 8, \"Success\", iif(Level == 16, \"Failure\", \"Unknown\"))\r\n| where AuditStatus contains '{AuditStatus}'\r\n| where '{EventId:lable}'=='All' or EventID in ({EventId})\r\n| where  (Account == '{AccountP:escapejson}') or ('{AccountP:escapejson}' == \"All\")\r\n| extend Account = tolower(iff(Account==\"\",\"Unknown\",Account))\r\n| join kind=leftouter (VASWUsersParser | extend msDSPrincipalName=tolower(msDSPrincipalName)) on $left.Account == $right.msDSPrincipalName\r\n| extend WorkstationName = iff(WorkstationName==\"\",iff(IpAddress==\"\",\"Unknown\",IpAddress),WorkstationName)\r\n| summarize Count=sum(Count) by Account, DC, WorkstationName, PackageName, ServiceName, Status, TicketEncryptionType, AuditStatus, isAdmin\r\n| join kind=leftouter (KerberosEType) on TicketEncryptionType\r\n| join kind=leftouter (LogonStatusCode) on Status\r\n| extend Status=iif(StatusText==\"\",Status,StatusText)\r\n| extend Etype=iif(TicketEncryptionType1==\"\",TicketEncryptionType,Etype)\r\n| project-away TicketEncryptionType,TicketEncryptionType1,Strength,Status1,StatusText\r\n| order by Count desc \r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Details",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Account",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "24ch"
                    }
                  },
                  {
                    "columnMatch": "PackageName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "24ch"
                    }
                  },
                  {
                    "columnMatch": "AuditStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Success",
                          "representation": "blueDark",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Failure",
                          "representation": "redDark",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "gray",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "isAdmin",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "True",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "False",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "Status",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Status",
                  "sortOrder": 1
                }
              ]
            },
            "name": "query - 3",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "UserAuthTab"
      },
      "name": "UserAuthGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Group: SChannel",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "3f6dd2f4-f267-4e71-be6b-5336dae67050",
                  "version": "KqlParameterItem/1.0",
                  "name": "Computer",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "f207577a-ccae-4793-bb9e-43aa333e053f",
                  "version": "KqlParameterItem/1.0",
                  "name": "Protocol",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "Event\r\n| where EventID == 36880 \r\n| parse EventData with * \"<Protocol>\" Protocol \"</Protocol>\" *\r\n| distinct Protocol\r\n| order by Protocol asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "fd57c9fc-f96f-40ed-a3f1-607ecb61464d",
                  "version": "KqlParameterItem/1.0",
                  "name": "CipherSuite",
                  "label": "Cipher Suite",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "\r\nlet SChannelTypes = datatable (CipherSuite:string,CipherName:string)[\r\n\"0x0000\",\"TLS_NULL_WITH_NULL_NULL\",\r\n\"0x0001\",\"TLS_RSA_WITH_NULL_MD5\",\r\n\"0x0002\",\"TLS_RSA_WITH_NULL_SHA\",\r\n\"0x0003\",\"TLS_RSA_EXPORT_WITH_RC4_40_MD5\",\r\n\"0x0004\",\"TLS_RSA_WITH_RC4_128_MD5\",\r\n\"0x0005\",\"TLS_RSA_WITH_RC4_128_SHA\",\r\n\"0x0006\",\"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5\",\r\n\"0x0007\",\"TLS_RSA_WITH_IDEA_CBC_SHA\",\r\n\"0x0008\",\"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x0009\",\"TLS_RSA_WITH_DES_CBC_SHA\",\r\n\"0x000A\",\"TLS_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x000B\",\"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x000C\",\"TLS_DH_DSS_WITH_DES_CBC_SHA\",\r\n\"0x000D\",\"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x000E\",\"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x000F\",\"TLS_DH_RSA_WITH_DES_CBC_SHA\",\r\n\"0x0010\",\"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0011\",\"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x0012\",\"TLS_DHE_DSS_WITH_DES_CBC_SHA\",\r\n\"0x0013\",\"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0014\",\"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x0015\",\"TLS_DHE_RSA_WITH_DES_CBC_SHA\",\r\n\"0x0016\",\"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0017\",\"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5\",\r\n\"0x0018\",\"TLS_DH_anon_WITH_RC4_128_MD5\",\r\n\"0x0019\",\"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x001A\",\"TLS_DH_anon_WITH_DES_CBC_SHA\",\r\n\"0x001B\",\"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x001C\",\"Reserved to avoid conflicts with SSLv3\",\r\n\"0x001E\",\"TLS_KRB5_WITH_DES_CBC_SHA\",\r\n\"0x001F\",\"TLS_KRB5_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0020\",\"TLS_KRB5_WITH_RC4_128_SHA\",\r\n\"0x0021\",\"TLS_KRB5_WITH_IDEA_CBC_SHA\",\r\n\"0x0022\",\"TLS_KRB5_WITH_DES_CBC_MD5\",\r\n\"0x0023\",\"TLS_KRB5_WITH_3DES_EDE_CBC_MD5\",\r\n\"0x0024\",\"TLS_KRB5_WITH_RC4_128_MD5\",\r\n\"0x0025\",\"TLS_KRB5_WITH_IDEA_CBC_MD5\",\r\n\"0x0026\",\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA\",\r\n\"0x0027\",\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA\",\r\n\"0x0028\",\"TLS_KRB5_EXPORT_WITH_RC4_40_SHA\",\r\n\"0x0029\",\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5\",\r\n\"0x002A\",\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5\",\r\n\"0x002B\",\"TLS_KRB5_EXPORT_WITH_RC4_40_MD5\",\r\n\"0x002C\",\"TLS_PSK_WITH_NULL_SHA\",\r\n\"0x002D\",\"TLS_DHE_PSK_WITH_NULL_SHA\",\r\n\"0x002E\",\"TLS_RSA_PSK_WITH_NULL_SHA\",\r\n\"0x002F\",\"TLS_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0x0030\",\"TLS_DH_DSS_WITH_AES_128_CBC_SHA\",\r\n\"0x0031\",\"TLS_DH_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0x0032\",\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",\r\n\"0x0033\",\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0x0034\",\"TLS_DH_anon_WITH_AES_128_CBC_SHA\",\r\n\"0x0035\",\"TLS_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0x0036\",\"TLS_DH_DSS_WITH_AES_256_CBC_SHA\",\r\n\"0x0037\",\"TLS_DH_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0x0038\",\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",\r\n\"0x0039\",\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0x003A\",\"TLS_DH_anon_WITH_AES_256_CBC_SHA\",\r\n\"0x003B\",\"TLS_RSA_WITH_NULL_SHA256\",\r\n\"0x003C\",\"TLS_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0x003D\",\"TLS_RSA_WITH_AES_256_CBC_SHA256\",\r\n\"0x003E\",\"TLS_DH_DSS_WITH_AES_128_CBC_SHA256\",\r\n\"0x003F\",\"TLS_DH_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0x0040\",\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",\r\n\"0x0041\",\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0042\",\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0043\",\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0044\",\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0045\",\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0046\",\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0047\",\"Reserved to avoid conflicts with deployed implementations\",\r\n\"0x0050\",\"Reserved to avoid conflicts\",\r\n\"0x0059\",\"Reserved to avoid conflicts with deployed implementations\",\r\n\"0x005D\",\"Unassigned\",\r\n\"0x0060\",\"Reserved to avoid conflicts with widely deployed implementations\",\r\n\"0x0067\",\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0x0068\",\"TLS_DH_DSS_WITH_AES_256_CBC_SHA256\",\r\n\"0x0069\",\"TLS_DH_RSA_WITH_AES_256_CBC_SHA256\",\r\n\"0x006A\",\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",\r\n\"0x006B\",\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",\r\n\"0x006C\",\"TLS_DH_anon_WITH_AES_128_CBC_SHA256\",\r\n\"0x006D\",\"TLS_DH_anon_WITH_AES_256_CBC_SHA256\",\r\n\"0x006E\",\"Unassigned\",\r\n\"0x0084\",\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0085\",\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0086\",\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0087\",\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0088\",\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0089\",\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x008A\",\"TLS_PSK_WITH_RC4_128_SHA\",\r\n\"0x008B\",\"TLS_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x008C\",\"TLS_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0x008D\",\"TLS_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0x008E\",\"TLS_DHE_PSK_WITH_RC4_128_SHA\",\r\n\"0x008F\",\"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0090\",\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0x0091\",\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0x0092\",\"TLS_RSA_PSK_WITH_RC4_128_SHA\",\r\n\"0x0093\",\"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0094\",\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0x0095\",\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0x0096\",\"TLS_RSA_WITH_SEED_CBC_SHA\",\r\n\"0x0097\",\"TLS_DH_DSS_WITH_SEED_CBC_SHA\",\r\n\"0x0098\",\"TLS_DH_RSA_WITH_SEED_CBC_SHA\",\r\n\"0x0099\",\"TLS_DHE_DSS_WITH_SEED_CBC_SHA\",\r\n\"0x009A\",\"TLS_DHE_RSA_WITH_SEED_CBC_SHA\",\r\n\"0x009B\",\"TLS_DH_anon_WITH_SEED_CBC_SHA\",\r\n\"0x009C\",\"TLS_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0x009D\",\"TLS_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0x009E\",\"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0x009F\",\"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A0\",\"TLS_DH_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A1\",\"TLS_DH_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A2\",\"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A3\",\"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A4\",\"TLS_DH_DSS_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A5\",\"TLS_DH_DSS_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A6\",\"TLS_DH_anon_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A7\",\"TLS_DH_anon_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A8\",\"TLS_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A9\",\"TLS_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0x00AA\",\"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0x00AB\",\"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0x00AC\",\"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0x00AD\",\"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0x00AE\",\"TLS_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0x00AF\",\"TLS_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0x00B0\",\"TLS_PSK_WITH_NULL_SHA256\",\r\n\"0x00B1\",\"TLS_PSK_WITH_NULL_SHA384\",\r\n\"0x00B2\",\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0x00B3\",\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0x00B4\",\"TLS_DHE_PSK_WITH_NULL_SHA256\",\r\n\"0x00B5\",\"TLS_DHE_PSK_WITH_NULL_SHA384\",\r\n\"0x00B6\",\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0x00B7\",\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0x00B8\",\"TLS_RSA_PSK_WITH_NULL_SHA256\",\r\n\"0x00B9\",\"TLS_RSA_PSK_WITH_NULL_SHA384\",\r\n\"0x00BA\",\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BB\",\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BC\",\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BD\",\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BE\",\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BF\",\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00C0\",\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C1\",\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C2\",\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C3\",\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C4\",\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C5\",\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C6\",\"Unassigned\",\r\n\"0x00FF\",\"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\",\r\n\"0x01-55*\",\"Unassigned\",\r\n\"0x5600\",\"TLS_FALLBACK_SCSV\",\r\n\"0x5601\",\"Unassigned\",\r\n\"0xC001\",\"TLS_ECDH_ECDSA_WITH_NULL_SHA\",\r\n\"0xC002\",\"TLS_ECDH_ECDSA_WITH_RC4_128_SHA\",\r\n\"0xC003\",\"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC004\",\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC005\",\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC006\",\"TLS_ECDHE_ECDSA_WITH_NULL_SHA\",\r\n\"0xC007\",\"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\",\r\n\"0xC008\",\"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC009\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC00A\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC00B\",\"TLS_ECDH_RSA_WITH_NULL_SHA\",\r\n\"0xC00C\",\"TLS_ECDH_RSA_WITH_RC4_128_SHA\",\r\n\"0xC00D\",\"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC00E\",\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC00F\",\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC010\",\"TLS_ECDHE_RSA_WITH_NULL_SHA\",\r\n\"0xC011\",\"TLS_ECDHE_RSA_WITH_RC4_128_SHA\",\r\n\"0xC012\",\"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC013\",\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC014\",\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC015\",\"TLS_ECDH_anon_WITH_NULL_SHA\",\r\n\"0xC016\",\"TLS_ECDH_anon_WITH_RC4_128_SHA\",\r\n\"0xC017\",\"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC018\",\"TLS_ECDH_anon_WITH_AES_128_CBC_SHA\",\r\n\"0xC019\",\"TLS_ECDH_anon_WITH_AES_256_CBC_SHA\",\r\n\"0xC01A\",\"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC01B\",\"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC01C\",\"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC01D\",\"TLS_SRP_SHA_WITH_AES_128_CBC_SHA\",\r\n\"0xC01E\",\"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC01F\",\"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA\",\r\n\"0xC020\",\"TLS_SRP_SHA_WITH_AES_256_CBC_SHA\",\r\n\"0xC021\",\"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC022\",\"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA\",\r\n\"0xC023\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC024\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC025\",\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC026\",\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC027\",\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC028\",\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC029\",\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC02A\",\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC02B\",\"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC02C\",\"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC02D\",\"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC02E\",\"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC02F\",\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC030\",\"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC031\",\"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC032\",\"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC033\",\"TLS_ECDHE_PSK_WITH_RC4_128_SHA\",\r\n\"0xC034\",\"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC035\",\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0xC036\",\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0xC037\",\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0xC038\",\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0xC039\",\"TLS_ECDHE_PSK_WITH_NULL_SHA\",\r\n\"0xC03A\",\"TLS_ECDHE_PSK_WITH_NULL_SHA256\",\r\n\"0xC03B\",\"TLS_ECDHE_PSK_WITH_NULL_SHA384\",\r\n\"0xC03C\",\"TLS_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC03D\",\"TLS_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC03E\",\"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC03F\",\"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC040\",\"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC041\",\"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC042\",\"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC043\",\"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC044\",\"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC045\",\"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC046\",\"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC047\",\"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC048\",\"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC049\",\"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC04A\",\"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC04B\",\"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC04C\",\"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC04D\",\"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC04E\",\"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC04F\",\"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC050\",\"TLS_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC051\",\"TLS_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC052\",\"TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC053\",\"TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC054\",\"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC055\",\"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC056\",\"TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC057\",\"TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC058\",\"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC059\",\"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC05A\",\"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC05B\",\"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC05C\",\"TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC05D\",\"TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC05E\",\"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC05F\",\"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC060\",\"TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC061\",\"TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC062\",\"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC063\",\"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC064\",\"TLS_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC065\",\"TLS_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC066\",\"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC067\",\"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC068\",\"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC069\",\"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC06A\",\"TLS_PSK_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC06B\",\"TLS_PSK_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC06C\",\"TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC06D\",\"TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC06E\",\"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC06F\",\"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC070\",\"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC071\",\"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC072\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC073\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC074\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC075\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC076\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC077\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC078\",\"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC079\",\"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC07A\",\"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC07B\",\"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC07C\",\"TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC07D\",\"TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC07E\",\"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC07F\",\"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC080\",\"TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC081\",\"TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC082\",\"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC083\",\"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC084\",\"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC085\",\"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC086\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC087\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC088\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC089\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC08A\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC08B\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC08C\",\"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC08D\",\"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC08E\",\"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC08F\",\"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC090\",\"TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC091\",\"TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC092\",\"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC093\",\"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC094\",\"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC095\",\"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC096\",\"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC097\",\"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC098\",\"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC099\",\"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC09A\",\"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC09B\",\"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC09C\",\"TLS_RSA_WITH_AES_128_CCM\",\r\n\"0xC09D\",\"TLS_RSA_WITH_AES_256_CCM\",\r\n\"0xC09E\",\"TLS_DHE_RSA_WITH_AES_128_CCM\",\r\n\"0xC09F\",\"TLS_DHE_RSA_WITH_AES_256_CCM\",\r\n\"0xC0A0\",\"TLS_RSA_WITH_AES_128_CCM_8\",\r\n\"0xC0A1\",\"TLS_RSA_WITH_AES_256_CCM_8\",\r\n\"0xC0A2\",\"TLS_DHE_RSA_WITH_AES_128_CCM_8\",\r\n\"0xC0A3\",\"TLS_DHE_RSA_WITH_AES_256_CCM_8\",\r\n\"0xC0A4\",\"TLS_PSK_WITH_AES_128_CCM\",\r\n\"0xC0A5\",\"TLS_PSK_WITH_AES_256_CCM\",\r\n\"0xC0A6\",\"TLS_DHE_PSK_WITH_AES_128_CCM\",\r\n\"0xC0A7\",\"TLS_DHE_PSK_WITH_AES_256_CCM\",\r\n\"0xC0A8\",\"TLS_PSK_WITH_AES_128_CCM_8\",\r\n\"0xC0A9\",\"TLS_PSK_WITH_AES_256_CCM_8\",\r\n\"0xC0AA\",\"TLS_PSK_DHE_WITH_AES_128_CCM_8\",\r\n\"0xC0AB\",\"TLS_PSK_DHE_WITH_AES_256_CCM_8\",\r\n\"0xC0AC\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CCM\",\r\n\"0xC0AD\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CCM\",\r\n\"0xC0AE\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8\",\r\n\"0xC0AF\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8\",\r\n\"0xC0B0\",\"TLS_ECCPWD_WITH_AES_128_GCM_SHA256\",\r\n\"0xC0B1\",\"TLS_ECCPWD_WITH_AES_256_GCM_SHA384\",\r\n\"0xC0B2\",\"TLS_ECCPWD_WITH_AES_128_CCM_SHA256\",\r\n\"0xC0B3\",\"TLS_ECCPWD_WITH_AES_256_CCM_SHA384\",\r\n\"0xC0B4\",\"Unassigned\",\r\n\"0xC1-CB*\",\"Unassigned\",\r\n\"0xCC00\",\"Unassigned\",\r\n\"0xCCA8\",\"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCA9\",\"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAA\",\"TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAB\",\"TLS_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAC\",\"TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAD\",\"TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAE\",\"TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAF\",\"Unassigned\",\r\n\"0xCD-CF*\",\"Unassigned\",\r\n\"0xD000\",\"Unassigned\",\r\n\"0xD001\",\"TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0xD002\",\"TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0xD003\",\"TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256\",\r\n\"0xD004\",\"Unassigned\",\r\n\"0xD005\",\"TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256\",\r\n\"0xD006\",\"Unassigned\",\r\n\"0xD1-FD*\",\"Unassigned\",\r\n\"0xFE00\",\"Unassigned\",\r\n\"0xFEFE\",\"Reserved to avoid conflicts with widely deployed implementations\",\r\n\"0xFF00\",\"Reserved for Private Use\"];\r\nEvent\r\n| where EventID == 36880 \r\n| parse EventData with * \"<CipherSuite>\" CipherSuite \"</CipherSuite>\" *\r\n| extend CipherSuite=toupper(CipherSuite)\r\n| distinct tohex(tolong(CipherSuite),4)\r\n| join kind=leftouter (SChannelTypes | extend CipherSuite=tohex(tolong(CipherSuite),4)) on CipherSuite\r\n| project CipherName\r\n| order by CipherName asc\r\n",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "3f418684-9c70-4122-a34f-2f0a88b6c84d",
                  "version": "KqlParameterItem/1.0",
                  "name": "Type",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "Event\r\n| where EventID == 36880 \r\n| parse EventData with * \"<Type>\" Type \"</Type>\" *\r\n| distinct Type\r\n| order by Type asc\r\n",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "### SChannel Help\r\n#### Scenario\r\nThis tab will show where Schannel authentication is occurring.  It will show which computer that was initiating the Schannel authentication. You will need to temporarily install the MMA on the webserver or whatever server you suspect is using SSL or another deprecated method of encryption. Then you will be able to see the actual cipher suite used and remediate the deprecated ones in use.\r\n\r\n#### Registry requirements\r\n*HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\EventLogging* set to **7**\r\n#### Events audited\r\n\t36880 - An SSL (client or server) Handshake Completed Successfully\r\n#### Data types\r\n\t- Event\r\n#### KPIs\r\n\t- Schannel by Computer with the filter Cipher set to any of the legacy algorithms containing SHA, SHA265, MD5, DES (not 3DES) or RC4.\r\n\t- Schannel by Day with the filter Cipher set to any of the legacy algorithms containing SHA, SHA265, MD5, DES (not 3DES) or RC4.\r\n",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "\r\nlet SChannelTypes = datatable (CipherSuite:string,CipherName:string)[\r\n\"0x0000\",\"TLS_NULL_WITH_NULL_NULL\",\r\n\"0x0001\",\"TLS_RSA_WITH_NULL_MD5\",\r\n\"0x0002\",\"TLS_RSA_WITH_NULL_SHA\",\r\n\"0x0003\",\"TLS_RSA_EXPORT_WITH_RC4_40_MD5\",\r\n\"0x0004\",\"TLS_RSA_WITH_RC4_128_MD5\",\r\n\"0x0005\",\"TLS_RSA_WITH_RC4_128_SHA\",\r\n\"0x0006\",\"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5\",\r\n\"0x0007\",\"TLS_RSA_WITH_IDEA_CBC_SHA\",\r\n\"0x0008\",\"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x0009\",\"TLS_RSA_WITH_DES_CBC_SHA\",\r\n\"0x000A\",\"TLS_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x000B\",\"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x000C\",\"TLS_DH_DSS_WITH_DES_CBC_SHA\",\r\n\"0x000D\",\"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x000E\",\"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x000F\",\"TLS_DH_RSA_WITH_DES_CBC_SHA\",\r\n\"0x0010\",\"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0011\",\"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x0012\",\"TLS_DHE_DSS_WITH_DES_CBC_SHA\",\r\n\"0x0013\",\"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0014\",\"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x0015\",\"TLS_DHE_RSA_WITH_DES_CBC_SHA\",\r\n\"0x0016\",\"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0017\",\"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5\",\r\n\"0x0018\",\"TLS_DH_anon_WITH_RC4_128_MD5\",\r\n\"0x0019\",\"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x001A\",\"TLS_DH_anon_WITH_DES_CBC_SHA\",\r\n\"0x001B\",\"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x001C\",\"Reserved to avoid conflicts with SSLv3\",\r\n\"0x001E\",\"TLS_KRB5_WITH_DES_CBC_SHA\",\r\n\"0x001F\",\"TLS_KRB5_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0020\",\"TLS_KRB5_WITH_RC4_128_SHA\",\r\n\"0x0021\",\"TLS_KRB5_WITH_IDEA_CBC_SHA\",\r\n\"0x0022\",\"TLS_KRB5_WITH_DES_CBC_MD5\",\r\n\"0x0023\",\"TLS_KRB5_WITH_3DES_EDE_CBC_MD5\",\r\n\"0x0024\",\"TLS_KRB5_WITH_RC4_128_MD5\",\r\n\"0x0025\",\"TLS_KRB5_WITH_IDEA_CBC_MD5\",\r\n\"0x0026\",\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA\",\r\n\"0x0027\",\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA\",\r\n\"0x0028\",\"TLS_KRB5_EXPORT_WITH_RC4_40_SHA\",\r\n\"0x0029\",\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5\",\r\n\"0x002A\",\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5\",\r\n\"0x002B\",\"TLS_KRB5_EXPORT_WITH_RC4_40_MD5\",\r\n\"0x002C\",\"TLS_PSK_WITH_NULL_SHA\",\r\n\"0x002D\",\"TLS_DHE_PSK_WITH_NULL_SHA\",\r\n\"0x002E\",\"TLS_RSA_PSK_WITH_NULL_SHA\",\r\n\"0x002F\",\"TLS_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0x0030\",\"TLS_DH_DSS_WITH_AES_128_CBC_SHA\",\r\n\"0x0031\",\"TLS_DH_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0x0032\",\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",\r\n\"0x0033\",\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0x0034\",\"TLS_DH_anon_WITH_AES_128_CBC_SHA\",\r\n\"0x0035\",\"TLS_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0x0036\",\"TLS_DH_DSS_WITH_AES_256_CBC_SHA\",\r\n\"0x0037\",\"TLS_DH_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0x0038\",\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",\r\n\"0x0039\",\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0x003A\",\"TLS_DH_anon_WITH_AES_256_CBC_SHA\",\r\n\"0x003B\",\"TLS_RSA_WITH_NULL_SHA256\",\r\n\"0x003C\",\"TLS_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0x003D\",\"TLS_RSA_WITH_AES_256_CBC_SHA256\",\r\n\"0x003E\",\"TLS_DH_DSS_WITH_AES_128_CBC_SHA256\",\r\n\"0x003F\",\"TLS_DH_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0x0040\",\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",\r\n\"0x0041\",\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0042\",\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0043\",\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0044\",\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0045\",\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0046\",\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0047\",\"Reserved to avoid conflicts with deployed implementations\",\r\n\"0x0050\",\"Reserved to avoid conflicts\",\r\n\"0x0059\",\"Reserved to avoid conflicts with deployed implementations\",\r\n\"0x005D\",\"Unassigned\",\r\n\"0x0060\",\"Reserved to avoid conflicts with widely deployed implementations\",\r\n\"0x0067\",\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0x0068\",\"TLS_DH_DSS_WITH_AES_256_CBC_SHA256\",\r\n\"0x0069\",\"TLS_DH_RSA_WITH_AES_256_CBC_SHA256\",\r\n\"0x006A\",\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",\r\n\"0x006B\",\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",\r\n\"0x006C\",\"TLS_DH_anon_WITH_AES_128_CBC_SHA256\",\r\n\"0x006D\",\"TLS_DH_anon_WITH_AES_256_CBC_SHA256\",\r\n\"0x006E\",\"Unassigned\",\r\n\"0x0084\",\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0085\",\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0086\",\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0087\",\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0088\",\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0089\",\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x008A\",\"TLS_PSK_WITH_RC4_128_SHA\",\r\n\"0x008B\",\"TLS_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x008C\",\"TLS_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0x008D\",\"TLS_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0x008E\",\"TLS_DHE_PSK_WITH_RC4_128_SHA\",\r\n\"0x008F\",\"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0090\",\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0x0091\",\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0x0092\",\"TLS_RSA_PSK_WITH_RC4_128_SHA\",\r\n\"0x0093\",\"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0094\",\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0x0095\",\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0x0096\",\"TLS_RSA_WITH_SEED_CBC_SHA\",\r\n\"0x0097\",\"TLS_DH_DSS_WITH_SEED_CBC_SHA\",\r\n\"0x0098\",\"TLS_DH_RSA_WITH_SEED_CBC_SHA\",\r\n\"0x0099\",\"TLS_DHE_DSS_WITH_SEED_CBC_SHA\",\r\n\"0x009A\",\"TLS_DHE_RSA_WITH_SEED_CBC_SHA\",\r\n\"0x009B\",\"TLS_DH_anon_WITH_SEED_CBC_SHA\",\r\n\"0x009C\",\"TLS_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0x009D\",\"TLS_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0x009E\",\"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0x009F\",\"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A0\",\"TLS_DH_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A1\",\"TLS_DH_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A2\",\"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A3\",\"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A4\",\"TLS_DH_DSS_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A5\",\"TLS_DH_DSS_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A6\",\"TLS_DH_anon_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A7\",\"TLS_DH_anon_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A8\",\"TLS_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A9\",\"TLS_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0x00AA\",\"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0x00AB\",\"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0x00AC\",\"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0x00AD\",\"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0x00AE\",\"TLS_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0x00AF\",\"TLS_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0x00B0\",\"TLS_PSK_WITH_NULL_SHA256\",\r\n\"0x00B1\",\"TLS_PSK_WITH_NULL_SHA384\",\r\n\"0x00B2\",\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0x00B3\",\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0x00B4\",\"TLS_DHE_PSK_WITH_NULL_SHA256\",\r\n\"0x00B5\",\"TLS_DHE_PSK_WITH_NULL_SHA384\",\r\n\"0x00B6\",\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0x00B7\",\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0x00B8\",\"TLS_RSA_PSK_WITH_NULL_SHA256\",\r\n\"0x00B9\",\"TLS_RSA_PSK_WITH_NULL_SHA384\",\r\n\"0x00BA\",\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BB\",\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BC\",\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BD\",\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BE\",\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BF\",\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00C0\",\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C1\",\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C2\",\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C3\",\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C4\",\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C5\",\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C6\",\"Unassigned\",\r\n\"0x00FF\",\"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\",\r\n\"0x01-55*\",\"Unassigned\",\r\n\"0x5600\",\"TLS_FALLBACK_SCSV\",\r\n\"0x5601\",\"Unassigned\",\r\n\"0xC001\",\"TLS_ECDH_ECDSA_WITH_NULL_SHA\",\r\n\"0xC002\",\"TLS_ECDH_ECDSA_WITH_RC4_128_SHA\",\r\n\"0xC003\",\"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC004\",\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC005\",\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC006\",\"TLS_ECDHE_ECDSA_WITH_NULL_SHA\",\r\n\"0xC007\",\"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\",\r\n\"0xC008\",\"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC009\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC00A\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC00B\",\"TLS_ECDH_RSA_WITH_NULL_SHA\",\r\n\"0xC00C\",\"TLS_ECDH_RSA_WITH_RC4_128_SHA\",\r\n\"0xC00D\",\"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC00E\",\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC00F\",\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC010\",\"TLS_ECDHE_RSA_WITH_NULL_SHA\",\r\n\"0xC011\",\"TLS_ECDHE_RSA_WITH_RC4_128_SHA\",\r\n\"0xC012\",\"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC013\",\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC014\",\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC015\",\"TLS_ECDH_anon_WITH_NULL_SHA\",\r\n\"0xC016\",\"TLS_ECDH_anon_WITH_RC4_128_SHA\",\r\n\"0xC017\",\"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC018\",\"TLS_ECDH_anon_WITH_AES_128_CBC_SHA\",\r\n\"0xC019\",\"TLS_ECDH_anon_WITH_AES_256_CBC_SHA\",\r\n\"0xC01A\",\"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC01B\",\"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC01C\",\"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC01D\",\"TLS_SRP_SHA_WITH_AES_128_CBC_SHA\",\r\n\"0xC01E\",\"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC01F\",\"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA\",\r\n\"0xC020\",\"TLS_SRP_SHA_WITH_AES_256_CBC_SHA\",\r\n\"0xC021\",\"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC022\",\"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA\",\r\n\"0xC023\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC024\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC025\",\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC026\",\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC027\",\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC028\",\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC029\",\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC02A\",\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC02B\",\"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC02C\",\"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC02D\",\"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC02E\",\"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC02F\",\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC030\",\"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC031\",\"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC032\",\"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC033\",\"TLS_ECDHE_PSK_WITH_RC4_128_SHA\",\r\n\"0xC034\",\"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC035\",\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0xC036\",\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0xC037\",\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0xC038\",\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0xC039\",\"TLS_ECDHE_PSK_WITH_NULL_SHA\",\r\n\"0xC03A\",\"TLS_ECDHE_PSK_WITH_NULL_SHA256\",\r\n\"0xC03B\",\"TLS_ECDHE_PSK_WITH_NULL_SHA384\",\r\n\"0xC03C\",\"TLS_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC03D\",\"TLS_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC03E\",\"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC03F\",\"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC040\",\"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC041\",\"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC042\",\"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC043\",\"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC044\",\"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC045\",\"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC046\",\"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC047\",\"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC048\",\"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC049\",\"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC04A\",\"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC04B\",\"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC04C\",\"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC04D\",\"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC04E\",\"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC04F\",\"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC050\",\"TLS_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC051\",\"TLS_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC052\",\"TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC053\",\"TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC054\",\"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC055\",\"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC056\",\"TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC057\",\"TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC058\",\"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC059\",\"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC05A\",\"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC05B\",\"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC05C\",\"TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC05D\",\"TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC05E\",\"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC05F\",\"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC060\",\"TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC061\",\"TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC062\",\"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC063\",\"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC064\",\"TLS_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC065\",\"TLS_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC066\",\"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC067\",\"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC068\",\"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC069\",\"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC06A\",\"TLS_PSK_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC06B\",\"TLS_PSK_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC06C\",\"TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC06D\",\"TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC06E\",\"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC06F\",\"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC070\",\"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC071\",\"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC072\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC073\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC074\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC075\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC076\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC077\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC078\",\"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC079\",\"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC07A\",\"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC07B\",\"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC07C\",\"TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC07D\",\"TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC07E\",\"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC07F\",\"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC080\",\"TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC081\",\"TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC082\",\"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC083\",\"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC084\",\"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC085\",\"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC086\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC087\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC088\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC089\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC08A\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC08B\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC08C\",\"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC08D\",\"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC08E\",\"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC08F\",\"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC090\",\"TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC091\",\"TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC092\",\"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC093\",\"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC094\",\"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC095\",\"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC096\",\"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC097\",\"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC098\",\"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC099\",\"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC09A\",\"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC09B\",\"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC09C\",\"TLS_RSA_WITH_AES_128_CCM\",\r\n\"0xC09D\",\"TLS_RSA_WITH_AES_256_CCM\",\r\n\"0xC09E\",\"TLS_DHE_RSA_WITH_AES_128_CCM\",\r\n\"0xC09F\",\"TLS_DHE_RSA_WITH_AES_256_CCM\",\r\n\"0xC0A0\",\"TLS_RSA_WITH_AES_128_CCM_8\",\r\n\"0xC0A1\",\"TLS_RSA_WITH_AES_256_CCM_8\",\r\n\"0xC0A2\",\"TLS_DHE_RSA_WITH_AES_128_CCM_8\",\r\n\"0xC0A3\",\"TLS_DHE_RSA_WITH_AES_256_CCM_8\",\r\n\"0xC0A4\",\"TLS_PSK_WITH_AES_128_CCM\",\r\n\"0xC0A5\",\"TLS_PSK_WITH_AES_256_CCM\",\r\n\"0xC0A6\",\"TLS_DHE_PSK_WITH_AES_128_CCM\",\r\n\"0xC0A7\",\"TLS_DHE_PSK_WITH_AES_256_CCM\",\r\n\"0xC0A8\",\"TLS_PSK_WITH_AES_128_CCM_8\",\r\n\"0xC0A9\",\"TLS_PSK_WITH_AES_256_CCM_8\",\r\n\"0xC0AA\",\"TLS_PSK_DHE_WITH_AES_128_CCM_8\",\r\n\"0xC0AB\",\"TLS_PSK_DHE_WITH_AES_256_CCM_8\",\r\n\"0xC0AC\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CCM\",\r\n\"0xC0AD\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CCM\",\r\n\"0xC0AE\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8\",\r\n\"0xC0AF\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8\",\r\n\"0xC0B0\",\"TLS_ECCPWD_WITH_AES_128_GCM_SHA256\",\r\n\"0xC0B1\",\"TLS_ECCPWD_WITH_AES_256_GCM_SHA384\",\r\n\"0xC0B2\",\"TLS_ECCPWD_WITH_AES_128_CCM_SHA256\",\r\n\"0xC0B3\",\"TLS_ECCPWD_WITH_AES_256_CCM_SHA384\",\r\n\"0xC0B4\",\"Unassigned\",\r\n\"0xC1-CB*\",\"Unassigned\",\r\n\"0xCC00\",\"Unassigned\",\r\n\"0xCCA8\",\"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCA9\",\"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAA\",\"TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAB\",\"TLS_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAC\",\"TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAD\",\"TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAE\",\"TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAF\",\"Unassigned\",\r\n\"0xCD-CF*\",\"Unassigned\",\r\n\"0xD000\",\"Unassigned\",\r\n\"0xD001\",\"TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0xD002\",\"TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0xD003\",\"TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256\",\r\n\"0xD004\",\"Unassigned\",\r\n\"0xD005\",\"TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256\",\r\n\"0xD006\",\"Unassigned\",\r\n\"0xD1-FD*\",\"Unassigned\",\r\n\"0xFE00\",\"Unassigned\",\r\n\"0xFEFE\",\"Reserved to avoid conflicts with widely deployed implementations\",\r\n\"0xFF00\",\"Reserved for Private Use\"];\r\nEvent\r\n| where EventID == 36880 \r\n| parse EventData with * \"<Type>\" Type \"</Type>\" *\r\n| parse EventData with * \"<Protocol>\" Protocol \"</Protocol>\" *\r\n| parse EventData with * \"<CipherSuite>\" CipherSuite \"</CipherSuite>\" *\r\n| extend CipherSuite=tohex(tolong(CipherSuite),4)\r\n| where Computer contains '{Computer}'\r\n| where '{Protocol:lable}'=='All' or Protocol in ({Protocol})\r\n| where '{Type:lable}'==\"All\" or Type in ({Type})\r\n| join kind=leftouter (SChannelTypes | extend CipherSuite=tohex(tolong(CipherSuite),4)) on CipherSuite\r\n| where '{CipherSuite:lable}'==\"All\" or CipherName in ({CipherSuite})\r\n| summarize Count = count(EventID) by Computer, Protocol\r\n| top 15 by Count desc\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "SChannel by Computer (Top 15)",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Protocol",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "categorical"
                    }
                  },
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    }
                  }
                ]
              }
            },
            "customWidth": "30",
            "name": "query - 1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "\r\nlet SChannelTypes = datatable (CipherSuite:string,CipherName:string)[\r\n\"0x0000\",\"TLS_NULL_WITH_NULL_NULL\",\r\n\"0x0001\",\"TLS_RSA_WITH_NULL_MD5\",\r\n\"0x0002\",\"TLS_RSA_WITH_NULL_SHA\",\r\n\"0x0003\",\"TLS_RSA_EXPORT_WITH_RC4_40_MD5\",\r\n\"0x0004\",\"TLS_RSA_WITH_RC4_128_MD5\",\r\n\"0x0005\",\"TLS_RSA_WITH_RC4_128_SHA\",\r\n\"0x0006\",\"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5\",\r\n\"0x0007\",\"TLS_RSA_WITH_IDEA_CBC_SHA\",\r\n\"0x0008\",\"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x0009\",\"TLS_RSA_WITH_DES_CBC_SHA\",\r\n\"0x000A\",\"TLS_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x000B\",\"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x000C\",\"TLS_DH_DSS_WITH_DES_CBC_SHA\",\r\n\"0x000D\",\"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x000E\",\"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x000F\",\"TLS_DH_RSA_WITH_DES_CBC_SHA\",\r\n\"0x0010\",\"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0011\",\"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x0012\",\"TLS_DHE_DSS_WITH_DES_CBC_SHA\",\r\n\"0x0013\",\"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0014\",\"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x0015\",\"TLS_DHE_RSA_WITH_DES_CBC_SHA\",\r\n\"0x0016\",\"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0017\",\"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5\",\r\n\"0x0018\",\"TLS_DH_anon_WITH_RC4_128_MD5\",\r\n\"0x0019\",\"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x001A\",\"TLS_DH_anon_WITH_DES_CBC_SHA\",\r\n\"0x001B\",\"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x001C\",\"Reserved to avoid conflicts with SSLv3\",\r\n\"0x001E\",\"TLS_KRB5_WITH_DES_CBC_SHA\",\r\n\"0x001F\",\"TLS_KRB5_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0020\",\"TLS_KRB5_WITH_RC4_128_SHA\",\r\n\"0x0021\",\"TLS_KRB5_WITH_IDEA_CBC_SHA\",\r\n\"0x0022\",\"TLS_KRB5_WITH_DES_CBC_MD5\",\r\n\"0x0023\",\"TLS_KRB5_WITH_3DES_EDE_CBC_MD5\",\r\n\"0x0024\",\"TLS_KRB5_WITH_RC4_128_MD5\",\r\n\"0x0025\",\"TLS_KRB5_WITH_IDEA_CBC_MD5\",\r\n\"0x0026\",\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA\",\r\n\"0x0027\",\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA\",\r\n\"0x0028\",\"TLS_KRB5_EXPORT_WITH_RC4_40_SHA\",\r\n\"0x0029\",\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5\",\r\n\"0x002A\",\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5\",\r\n\"0x002B\",\"TLS_KRB5_EXPORT_WITH_RC4_40_MD5\",\r\n\"0x002C\",\"TLS_PSK_WITH_NULL_SHA\",\r\n\"0x002D\",\"TLS_DHE_PSK_WITH_NULL_SHA\",\r\n\"0x002E\",\"TLS_RSA_PSK_WITH_NULL_SHA\",\r\n\"0x002F\",\"TLS_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0x0030\",\"TLS_DH_DSS_WITH_AES_128_CBC_SHA\",\r\n\"0x0031\",\"TLS_DH_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0x0032\",\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",\r\n\"0x0033\",\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0x0034\",\"TLS_DH_anon_WITH_AES_128_CBC_SHA\",\r\n\"0x0035\",\"TLS_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0x0036\",\"TLS_DH_DSS_WITH_AES_256_CBC_SHA\",\r\n\"0x0037\",\"TLS_DH_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0x0038\",\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",\r\n\"0x0039\",\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0x003A\",\"TLS_DH_anon_WITH_AES_256_CBC_SHA\",\r\n\"0x003B\",\"TLS_RSA_WITH_NULL_SHA256\",\r\n\"0x003C\",\"TLS_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0x003D\",\"TLS_RSA_WITH_AES_256_CBC_SHA256\",\r\n\"0x003E\",\"TLS_DH_DSS_WITH_AES_128_CBC_SHA256\",\r\n\"0x003F\",\"TLS_DH_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0x0040\",\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",\r\n\"0x0041\",\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0042\",\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0043\",\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0044\",\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0045\",\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0046\",\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0047\",\"Reserved to avoid conflicts with deployed implementations\",\r\n\"0x0050\",\"Reserved to avoid conflicts\",\r\n\"0x0059\",\"Reserved to avoid conflicts with deployed implementations\",\r\n\"0x005D\",\"Unassigned\",\r\n\"0x0060\",\"Reserved to avoid conflicts with widely deployed implementations\",\r\n\"0x0067\",\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0x0068\",\"TLS_DH_DSS_WITH_AES_256_CBC_SHA256\",\r\n\"0x0069\",\"TLS_DH_RSA_WITH_AES_256_CBC_SHA256\",\r\n\"0x006A\",\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",\r\n\"0x006B\",\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",\r\n\"0x006C\",\"TLS_DH_anon_WITH_AES_128_CBC_SHA256\",\r\n\"0x006D\",\"TLS_DH_anon_WITH_AES_256_CBC_SHA256\",\r\n\"0x006E\",\"Unassigned\",\r\n\"0x0084\",\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0085\",\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0086\",\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0087\",\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0088\",\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0089\",\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x008A\",\"TLS_PSK_WITH_RC4_128_SHA\",\r\n\"0x008B\",\"TLS_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x008C\",\"TLS_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0x008D\",\"TLS_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0x008E\",\"TLS_DHE_PSK_WITH_RC4_128_SHA\",\r\n\"0x008F\",\"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0090\",\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0x0091\",\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0x0092\",\"TLS_RSA_PSK_WITH_RC4_128_SHA\",\r\n\"0x0093\",\"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0094\",\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0x0095\",\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0x0096\",\"TLS_RSA_WITH_SEED_CBC_SHA\",\r\n\"0x0097\",\"TLS_DH_DSS_WITH_SEED_CBC_SHA\",\r\n\"0x0098\",\"TLS_DH_RSA_WITH_SEED_CBC_SHA\",\r\n\"0x0099\",\"TLS_DHE_DSS_WITH_SEED_CBC_SHA\",\r\n\"0x009A\",\"TLS_DHE_RSA_WITH_SEED_CBC_SHA\",\r\n\"0x009B\",\"TLS_DH_anon_WITH_SEED_CBC_SHA\",\r\n\"0x009C\",\"TLS_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0x009D\",\"TLS_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0x009E\",\"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0x009F\",\"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A0\",\"TLS_DH_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A1\",\"TLS_DH_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A2\",\"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A3\",\"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A4\",\"TLS_DH_DSS_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A5\",\"TLS_DH_DSS_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A6\",\"TLS_DH_anon_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A7\",\"TLS_DH_anon_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A8\",\"TLS_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A9\",\"TLS_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0x00AA\",\"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0x00AB\",\"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0x00AC\",\"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0x00AD\",\"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0x00AE\",\"TLS_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0x00AF\",\"TLS_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0x00B0\",\"TLS_PSK_WITH_NULL_SHA256\",\r\n\"0x00B1\",\"TLS_PSK_WITH_NULL_SHA384\",\r\n\"0x00B2\",\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0x00B3\",\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0x00B4\",\"TLS_DHE_PSK_WITH_NULL_SHA256\",\r\n\"0x00B5\",\"TLS_DHE_PSK_WITH_NULL_SHA384\",\r\n\"0x00B6\",\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0x00B7\",\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0x00B8\",\"TLS_RSA_PSK_WITH_NULL_SHA256\",\r\n\"0x00B9\",\"TLS_RSA_PSK_WITH_NULL_SHA384\",\r\n\"0x00BA\",\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BB\",\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BC\",\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BD\",\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BE\",\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BF\",\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00C0\",\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C1\",\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C2\",\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C3\",\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C4\",\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C5\",\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C6\",\"Unassigned\",\r\n\"0x00FF\",\"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\",\r\n\"0x01-55*\",\"Unassigned\",\r\n\"0x5600\",\"TLS_FALLBACK_SCSV\",\r\n\"0x5601\",\"Unassigned\",\r\n\"0xC001\",\"TLS_ECDH_ECDSA_WITH_NULL_SHA\",\r\n\"0xC002\",\"TLS_ECDH_ECDSA_WITH_RC4_128_SHA\",\r\n\"0xC003\",\"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC004\",\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC005\",\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC006\",\"TLS_ECDHE_ECDSA_WITH_NULL_SHA\",\r\n\"0xC007\",\"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\",\r\n\"0xC008\",\"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC009\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC00A\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC00B\",\"TLS_ECDH_RSA_WITH_NULL_SHA\",\r\n\"0xC00C\",\"TLS_ECDH_RSA_WITH_RC4_128_SHA\",\r\n\"0xC00D\",\"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC00E\",\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC00F\",\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC010\",\"TLS_ECDHE_RSA_WITH_NULL_SHA\",\r\n\"0xC011\",\"TLS_ECDHE_RSA_WITH_RC4_128_SHA\",\r\n\"0xC012\",\"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC013\",\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC014\",\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC015\",\"TLS_ECDH_anon_WITH_NULL_SHA\",\r\n\"0xC016\",\"TLS_ECDH_anon_WITH_RC4_128_SHA\",\r\n\"0xC017\",\"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC018\",\"TLS_ECDH_anon_WITH_AES_128_CBC_SHA\",\r\n\"0xC019\",\"TLS_ECDH_anon_WITH_AES_256_CBC_SHA\",\r\n\"0xC01A\",\"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC01B\",\"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC01C\",\"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC01D\",\"TLS_SRP_SHA_WITH_AES_128_CBC_SHA\",\r\n\"0xC01E\",\"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC01F\",\"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA\",\r\n\"0xC020\",\"TLS_SRP_SHA_WITH_AES_256_CBC_SHA\",\r\n\"0xC021\",\"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC022\",\"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA\",\r\n\"0xC023\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC024\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC025\",\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC026\",\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC027\",\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC028\",\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC029\",\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC02A\",\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC02B\",\"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC02C\",\"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC02D\",\"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC02E\",\"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC02F\",\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC030\",\"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC031\",\"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC032\",\"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC033\",\"TLS_ECDHE_PSK_WITH_RC4_128_SHA\",\r\n\"0xC034\",\"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC035\",\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0xC036\",\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0xC037\",\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0xC038\",\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0xC039\",\"TLS_ECDHE_PSK_WITH_NULL_SHA\",\r\n\"0xC03A\",\"TLS_ECDHE_PSK_WITH_NULL_SHA256\",\r\n\"0xC03B\",\"TLS_ECDHE_PSK_WITH_NULL_SHA384\",\r\n\"0xC03C\",\"TLS_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC03D\",\"TLS_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC03E\",\"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC03F\",\"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC040\",\"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC041\",\"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC042\",\"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC043\",\"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC044\",\"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC045\",\"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC046\",\"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC047\",\"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC048\",\"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC049\",\"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC04A\",\"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC04B\",\"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC04C\",\"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC04D\",\"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC04E\",\"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC04F\",\"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC050\",\"TLS_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC051\",\"TLS_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC052\",\"TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC053\",\"TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC054\",\"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC055\",\"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC056\",\"TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC057\",\"TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC058\",\"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC059\",\"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC05A\",\"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC05B\",\"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC05C\",\"TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC05D\",\"TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC05E\",\"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC05F\",\"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC060\",\"TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC061\",\"TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC062\",\"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC063\",\"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC064\",\"TLS_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC065\",\"TLS_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC066\",\"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC067\",\"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC068\",\"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC069\",\"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC06A\",\"TLS_PSK_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC06B\",\"TLS_PSK_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC06C\",\"TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC06D\",\"TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC06E\",\"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC06F\",\"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC070\",\"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC071\",\"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC072\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC073\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC074\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC075\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC076\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC077\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC078\",\"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC079\",\"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC07A\",\"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC07B\",\"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC07C\",\"TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC07D\",\"TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC07E\",\"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC07F\",\"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC080\",\"TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC081\",\"TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC082\",\"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC083\",\"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC084\",\"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC085\",\"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC086\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC087\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC088\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC089\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC08A\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC08B\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC08C\",\"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC08D\",\"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC08E\",\"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC08F\",\"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC090\",\"TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC091\",\"TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC092\",\"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC093\",\"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC094\",\"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC095\",\"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC096\",\"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC097\",\"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC098\",\"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC099\",\"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC09A\",\"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC09B\",\"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC09C\",\"TLS_RSA_WITH_AES_128_CCM\",\r\n\"0xC09D\",\"TLS_RSA_WITH_AES_256_CCM\",\r\n\"0xC09E\",\"TLS_DHE_RSA_WITH_AES_128_CCM\",\r\n\"0xC09F\",\"TLS_DHE_RSA_WITH_AES_256_CCM\",\r\n\"0xC0A0\",\"TLS_RSA_WITH_AES_128_CCM_8\",\r\n\"0xC0A1\",\"TLS_RSA_WITH_AES_256_CCM_8\",\r\n\"0xC0A2\",\"TLS_DHE_RSA_WITH_AES_128_CCM_8\",\r\n\"0xC0A3\",\"TLS_DHE_RSA_WITH_AES_256_CCM_8\",\r\n\"0xC0A4\",\"TLS_PSK_WITH_AES_128_CCM\",\r\n\"0xC0A5\",\"TLS_PSK_WITH_AES_256_CCM\",\r\n\"0xC0A6\",\"TLS_DHE_PSK_WITH_AES_128_CCM\",\r\n\"0xC0A7\",\"TLS_DHE_PSK_WITH_AES_256_CCM\",\r\n\"0xC0A8\",\"TLS_PSK_WITH_AES_128_CCM_8\",\r\n\"0xC0A9\",\"TLS_PSK_WITH_AES_256_CCM_8\",\r\n\"0xC0AA\",\"TLS_PSK_DHE_WITH_AES_128_CCM_8\",\r\n\"0xC0AB\",\"TLS_PSK_DHE_WITH_AES_256_CCM_8\",\r\n\"0xC0AC\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CCM\",\r\n\"0xC0AD\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CCM\",\r\n\"0xC0AE\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8\",\r\n\"0xC0AF\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8\",\r\n\"0xC0B0\",\"TLS_ECCPWD_WITH_AES_128_GCM_SHA256\",\r\n\"0xC0B1\",\"TLS_ECCPWD_WITH_AES_256_GCM_SHA384\",\r\n\"0xC0B2\",\"TLS_ECCPWD_WITH_AES_128_CCM_SHA256\",\r\n\"0xC0B3\",\"TLS_ECCPWD_WITH_AES_256_CCM_SHA384\",\r\n\"0xC0B4\",\"Unassigned\",\r\n\"0xC1-CB*\",\"Unassigned\",\r\n\"0xCC00\",\"Unassigned\",\r\n\"0xCCA8\",\"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCA9\",\"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAA\",\"TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAB\",\"TLS_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAC\",\"TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAD\",\"TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAE\",\"TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAF\",\"Unassigned\",\r\n\"0xCD-CF*\",\"Unassigned\",\r\n\"0xD000\",\"Unassigned\",\r\n\"0xD001\",\"TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0xD002\",\"TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0xD003\",\"TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256\",\r\n\"0xD004\",\"Unassigned\",\r\n\"0xD005\",\"TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256\",\r\n\"0xD006\",\"Unassigned\",\r\n\"0xD1-FD*\",\"Unassigned\",\r\n\"0xFE00\",\"Unassigned\",\r\n\"0xFEFE\",\"Reserved to avoid conflicts with widely deployed implementations\",\r\n\"0xFF00\",\"Reserved for Private Use\"];\r\nEvent\r\n| where EventID == 36880 \r\n| parse EventData with * \"<Type>\" Type \"</Type>\" *\r\n| parse EventData with * \"<Protocol>\" Protocol \"</Protocol>\" *\r\n| parse EventData with * \"<CipherSuite>\" CipherSuite \"</CipherSuite>\" *\r\n| extend CipherSuite=tohex(tolong(CipherSuite),4)\r\n| where Computer contains '{Computer}'\r\n| where '{Protocol:lable}'=='All' or Protocol in ({Protocol})\r\n| where '{Type:lable}'==\"All\" or Type in ({Type})\r\n| join kind=leftouter (SChannelTypes | extend CipherSuite=tohex(tolong(CipherSuite),4)) on CipherSuite\r\n| where '{CipherSuite:lable}'==\"All\" or CipherName in ({CipherSuite})\r\n| summarize Count = count(EventID) by bin(TimeGenerated,1d),Protocol\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "SChannel by Day",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "categoricalbar",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Protocol",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "categorical"
                    }
                  },
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    }
                  }
                ]
              },
              "chartSettings": {
                "xAxis": "TimeGenerated",
                "yAxis": [
                  "Count"
                ],
                "group": "Protocol",
                "createOtherGroup": null,
                "showLegend": true
              }
            },
            "customWidth": "70",
            "name": "query - 1 - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "\r\nlet SChannelTypes = datatable (CipherSuite:string,CipherName:string)[\r\n\"0x0000\",\"TLS_NULL_WITH_NULL_NULL\",\r\n\"0x0001\",\"TLS_RSA_WITH_NULL_MD5\",\r\n\"0x0002\",\"TLS_RSA_WITH_NULL_SHA\",\r\n\"0x0003\",\"TLS_RSA_EXPORT_WITH_RC4_40_MD5\",\r\n\"0x0004\",\"TLS_RSA_WITH_RC4_128_MD5\",\r\n\"0x0005\",\"TLS_RSA_WITH_RC4_128_SHA\",\r\n\"0x0006\",\"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5\",\r\n\"0x0007\",\"TLS_RSA_WITH_IDEA_CBC_SHA\",\r\n\"0x0008\",\"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x0009\",\"TLS_RSA_WITH_DES_CBC_SHA\",\r\n\"0x000A\",\"TLS_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x000B\",\"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x000C\",\"TLS_DH_DSS_WITH_DES_CBC_SHA\",\r\n\"0x000D\",\"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x000E\",\"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x000F\",\"TLS_DH_RSA_WITH_DES_CBC_SHA\",\r\n\"0x0010\",\"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0011\",\"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x0012\",\"TLS_DHE_DSS_WITH_DES_CBC_SHA\",\r\n\"0x0013\",\"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0014\",\"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x0015\",\"TLS_DHE_RSA_WITH_DES_CBC_SHA\",\r\n\"0x0016\",\"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0017\",\"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5\",\r\n\"0x0018\",\"TLS_DH_anon_WITH_RC4_128_MD5\",\r\n\"0x0019\",\"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA\",\r\n\"0x001A\",\"TLS_DH_anon_WITH_DES_CBC_SHA\",\r\n\"0x001B\",\"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x001C\",\"Reserved to avoid conflicts with SSLv3\",\r\n\"0x001E\",\"TLS_KRB5_WITH_DES_CBC_SHA\",\r\n\"0x001F\",\"TLS_KRB5_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0020\",\"TLS_KRB5_WITH_RC4_128_SHA\",\r\n\"0x0021\",\"TLS_KRB5_WITH_IDEA_CBC_SHA\",\r\n\"0x0022\",\"TLS_KRB5_WITH_DES_CBC_MD5\",\r\n\"0x0023\",\"TLS_KRB5_WITH_3DES_EDE_CBC_MD5\",\r\n\"0x0024\",\"TLS_KRB5_WITH_RC4_128_MD5\",\r\n\"0x0025\",\"TLS_KRB5_WITH_IDEA_CBC_MD5\",\r\n\"0x0026\",\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA\",\r\n\"0x0027\",\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA\",\r\n\"0x0028\",\"TLS_KRB5_EXPORT_WITH_RC4_40_SHA\",\r\n\"0x0029\",\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5\",\r\n\"0x002A\",\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5\",\r\n\"0x002B\",\"TLS_KRB5_EXPORT_WITH_RC4_40_MD5\",\r\n\"0x002C\",\"TLS_PSK_WITH_NULL_SHA\",\r\n\"0x002D\",\"TLS_DHE_PSK_WITH_NULL_SHA\",\r\n\"0x002E\",\"TLS_RSA_PSK_WITH_NULL_SHA\",\r\n\"0x002F\",\"TLS_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0x0030\",\"TLS_DH_DSS_WITH_AES_128_CBC_SHA\",\r\n\"0x0031\",\"TLS_DH_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0x0032\",\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",\r\n\"0x0033\",\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0x0034\",\"TLS_DH_anon_WITH_AES_128_CBC_SHA\",\r\n\"0x0035\",\"TLS_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0x0036\",\"TLS_DH_DSS_WITH_AES_256_CBC_SHA\",\r\n\"0x0037\",\"TLS_DH_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0x0038\",\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",\r\n\"0x0039\",\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0x003A\",\"TLS_DH_anon_WITH_AES_256_CBC_SHA\",\r\n\"0x003B\",\"TLS_RSA_WITH_NULL_SHA256\",\r\n\"0x003C\",\"TLS_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0x003D\",\"TLS_RSA_WITH_AES_256_CBC_SHA256\",\r\n\"0x003E\",\"TLS_DH_DSS_WITH_AES_128_CBC_SHA256\",\r\n\"0x003F\",\"TLS_DH_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0x0040\",\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",\r\n\"0x0041\",\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0042\",\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0043\",\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0044\",\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0045\",\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0046\",\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA\",\r\n\"0x0047\",\"Reserved to avoid conflicts with deployed implementations\",\r\n\"0x0050\",\"Reserved to avoid conflicts\",\r\n\"0x0059\",\"Reserved to avoid conflicts with deployed implementations\",\r\n\"0x005D\",\"Unassigned\",\r\n\"0x0060\",\"Reserved to avoid conflicts with widely deployed implementations\",\r\n\"0x0067\",\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0x0068\",\"TLS_DH_DSS_WITH_AES_256_CBC_SHA256\",\r\n\"0x0069\",\"TLS_DH_RSA_WITH_AES_256_CBC_SHA256\",\r\n\"0x006A\",\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",\r\n\"0x006B\",\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",\r\n\"0x006C\",\"TLS_DH_anon_WITH_AES_128_CBC_SHA256\",\r\n\"0x006D\",\"TLS_DH_anon_WITH_AES_256_CBC_SHA256\",\r\n\"0x006E\",\"Unassigned\",\r\n\"0x0084\",\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0085\",\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0086\",\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0087\",\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0088\",\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x0089\",\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA\",\r\n\"0x008A\",\"TLS_PSK_WITH_RC4_128_SHA\",\r\n\"0x008B\",\"TLS_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x008C\",\"TLS_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0x008D\",\"TLS_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0x008E\",\"TLS_DHE_PSK_WITH_RC4_128_SHA\",\r\n\"0x008F\",\"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0090\",\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0x0091\",\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0x0092\",\"TLS_RSA_PSK_WITH_RC4_128_SHA\",\r\n\"0x0093\",\"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0x0094\",\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0x0095\",\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0x0096\",\"TLS_RSA_WITH_SEED_CBC_SHA\",\r\n\"0x0097\",\"TLS_DH_DSS_WITH_SEED_CBC_SHA\",\r\n\"0x0098\",\"TLS_DH_RSA_WITH_SEED_CBC_SHA\",\r\n\"0x0099\",\"TLS_DHE_DSS_WITH_SEED_CBC_SHA\",\r\n\"0x009A\",\"TLS_DHE_RSA_WITH_SEED_CBC_SHA\",\r\n\"0x009B\",\"TLS_DH_anon_WITH_SEED_CBC_SHA\",\r\n\"0x009C\",\"TLS_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0x009D\",\"TLS_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0x009E\",\"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0x009F\",\"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A0\",\"TLS_DH_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A1\",\"TLS_DH_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A2\",\"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A3\",\"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A4\",\"TLS_DH_DSS_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A5\",\"TLS_DH_DSS_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A6\",\"TLS_DH_anon_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A7\",\"TLS_DH_anon_WITH_AES_256_GCM_SHA384\",\r\n\"0x00A8\",\"TLS_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0x00A9\",\"TLS_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0x00AA\",\"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0x00AB\",\"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0x00AC\",\"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0x00AD\",\"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0x00AE\",\"TLS_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0x00AF\",\"TLS_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0x00B0\",\"TLS_PSK_WITH_NULL_SHA256\",\r\n\"0x00B1\",\"TLS_PSK_WITH_NULL_SHA384\",\r\n\"0x00B2\",\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0x00B3\",\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0x00B4\",\"TLS_DHE_PSK_WITH_NULL_SHA256\",\r\n\"0x00B5\",\"TLS_DHE_PSK_WITH_NULL_SHA384\",\r\n\"0x00B6\",\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0x00B7\",\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0x00B8\",\"TLS_RSA_PSK_WITH_NULL_SHA256\",\r\n\"0x00B9\",\"TLS_RSA_PSK_WITH_NULL_SHA384\",\r\n\"0x00BA\",\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BB\",\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BC\",\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BD\",\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BE\",\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00BF\",\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0x00C0\",\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C1\",\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C2\",\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C3\",\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C4\",\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C5\",\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256\",\r\n\"0x00C6\",\"Unassigned\",\r\n\"0x00FF\",\"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\",\r\n\"0x01-55*\",\"Unassigned\",\r\n\"0x5600\",\"TLS_FALLBACK_SCSV\",\r\n\"0x5601\",\"Unassigned\",\r\n\"0xC001\",\"TLS_ECDH_ECDSA_WITH_NULL_SHA\",\r\n\"0xC002\",\"TLS_ECDH_ECDSA_WITH_RC4_128_SHA\",\r\n\"0xC003\",\"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC004\",\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC005\",\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC006\",\"TLS_ECDHE_ECDSA_WITH_NULL_SHA\",\r\n\"0xC007\",\"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\",\r\n\"0xC008\",\"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC009\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC00A\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC00B\",\"TLS_ECDH_RSA_WITH_NULL_SHA\",\r\n\"0xC00C\",\"TLS_ECDH_RSA_WITH_RC4_128_SHA\",\r\n\"0xC00D\",\"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC00E\",\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC00F\",\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC010\",\"TLS_ECDHE_RSA_WITH_NULL_SHA\",\r\n\"0xC011\",\"TLS_ECDHE_RSA_WITH_RC4_128_SHA\",\r\n\"0xC012\",\"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC013\",\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC014\",\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC015\",\"TLS_ECDH_anon_WITH_NULL_SHA\",\r\n\"0xC016\",\"TLS_ECDH_anon_WITH_RC4_128_SHA\",\r\n\"0xC017\",\"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC018\",\"TLS_ECDH_anon_WITH_AES_128_CBC_SHA\",\r\n\"0xC019\",\"TLS_ECDH_anon_WITH_AES_256_CBC_SHA\",\r\n\"0xC01A\",\"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC01B\",\"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC01C\",\"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC01D\",\"TLS_SRP_SHA_WITH_AES_128_CBC_SHA\",\r\n\"0xC01E\",\"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA\",\r\n\"0xC01F\",\"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA\",\r\n\"0xC020\",\"TLS_SRP_SHA_WITH_AES_256_CBC_SHA\",\r\n\"0xC021\",\"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA\",\r\n\"0xC022\",\"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA\",\r\n\"0xC023\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC024\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC025\",\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC026\",\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC027\",\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC028\",\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC029\",\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",\r\n\"0xC02A\",\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",\r\n\"0xC02B\",\"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC02C\",\"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC02D\",\"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC02E\",\"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC02F\",\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC030\",\"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC031\",\"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",\r\n\"0xC032\",\"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",\r\n\"0xC033\",\"TLS_ECDHE_PSK_WITH_RC4_128_SHA\",\r\n\"0xC034\",\"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA\",\r\n\"0xC035\",\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA\",\r\n\"0xC036\",\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA\",\r\n\"0xC037\",\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256\",\r\n\"0xC038\",\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384\",\r\n\"0xC039\",\"TLS_ECDHE_PSK_WITH_NULL_SHA\",\r\n\"0xC03A\",\"TLS_ECDHE_PSK_WITH_NULL_SHA256\",\r\n\"0xC03B\",\"TLS_ECDHE_PSK_WITH_NULL_SHA384\",\r\n\"0xC03C\",\"TLS_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC03D\",\"TLS_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC03E\",\"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC03F\",\"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC040\",\"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC041\",\"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC042\",\"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC043\",\"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC044\",\"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC045\",\"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC046\",\"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC047\",\"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC048\",\"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC049\",\"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC04A\",\"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC04B\",\"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC04C\",\"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC04D\",\"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC04E\",\"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC04F\",\"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC050\",\"TLS_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC051\",\"TLS_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC052\",\"TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC053\",\"TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC054\",\"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC055\",\"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC056\",\"TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC057\",\"TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC058\",\"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC059\",\"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC05A\",\"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC05B\",\"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC05C\",\"TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC05D\",\"TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC05E\",\"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC05F\",\"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC060\",\"TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC061\",\"TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC062\",\"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC063\",\"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC064\",\"TLS_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC065\",\"TLS_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC066\",\"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC067\",\"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC068\",\"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC069\",\"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC06A\",\"TLS_PSK_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC06B\",\"TLS_PSK_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC06C\",\"TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC06D\",\"TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC06E\",\"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256\",\r\n\"0xC06F\",\"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384\",\r\n\"0xC070\",\"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256\",\r\n\"0xC071\",\"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384\",\r\n\"0xC072\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC073\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC074\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC075\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC076\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC077\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC078\",\"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC079\",\"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC07A\",\"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC07B\",\"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC07C\",\"TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC07D\",\"TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC07E\",\"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC07F\",\"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC080\",\"TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC081\",\"TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC082\",\"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC083\",\"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC084\",\"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC085\",\"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC086\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC087\",\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC088\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC089\",\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC08A\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC08B\",\"TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC08C\",\"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC08D\",\"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC08E\",\"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC08F\",\"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC090\",\"TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC091\",\"TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC092\",\"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\r\n\"0xC093\",\"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\r\n\"0xC094\",\"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC095\",\"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC096\",\"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC097\",\"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC098\",\"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC099\",\"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC09A\",\"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\r\n\"0xC09B\",\"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\r\n\"0xC09C\",\"TLS_RSA_WITH_AES_128_CCM\",\r\n\"0xC09D\",\"TLS_RSA_WITH_AES_256_CCM\",\r\n\"0xC09E\",\"TLS_DHE_RSA_WITH_AES_128_CCM\",\r\n\"0xC09F\",\"TLS_DHE_RSA_WITH_AES_256_CCM\",\r\n\"0xC0A0\",\"TLS_RSA_WITH_AES_128_CCM_8\",\r\n\"0xC0A1\",\"TLS_RSA_WITH_AES_256_CCM_8\",\r\n\"0xC0A2\",\"TLS_DHE_RSA_WITH_AES_128_CCM_8\",\r\n\"0xC0A3\",\"TLS_DHE_RSA_WITH_AES_256_CCM_8\",\r\n\"0xC0A4\",\"TLS_PSK_WITH_AES_128_CCM\",\r\n\"0xC0A5\",\"TLS_PSK_WITH_AES_256_CCM\",\r\n\"0xC0A6\",\"TLS_DHE_PSK_WITH_AES_128_CCM\",\r\n\"0xC0A7\",\"TLS_DHE_PSK_WITH_AES_256_CCM\",\r\n\"0xC0A8\",\"TLS_PSK_WITH_AES_128_CCM_8\",\r\n\"0xC0A9\",\"TLS_PSK_WITH_AES_256_CCM_8\",\r\n\"0xC0AA\",\"TLS_PSK_DHE_WITH_AES_128_CCM_8\",\r\n\"0xC0AB\",\"TLS_PSK_DHE_WITH_AES_256_CCM_8\",\r\n\"0xC0AC\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CCM\",\r\n\"0xC0AD\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CCM\",\r\n\"0xC0AE\",\"TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8\",\r\n\"0xC0AF\",\"TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8\",\r\n\"0xC0B0\",\"TLS_ECCPWD_WITH_AES_128_GCM_SHA256\",\r\n\"0xC0B1\",\"TLS_ECCPWD_WITH_AES_256_GCM_SHA384\",\r\n\"0xC0B2\",\"TLS_ECCPWD_WITH_AES_128_CCM_SHA256\",\r\n\"0xC0B3\",\"TLS_ECCPWD_WITH_AES_256_CCM_SHA384\",\r\n\"0xC0B4\",\"Unassigned\",\r\n\"0xC1-CB*\",\"Unassigned\",\r\n\"0xCC00\",\"Unassigned\",\r\n\"0xCCA8\",\"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCA9\",\"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAA\",\"TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAB\",\"TLS_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAC\",\"TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAD\",\"TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAE\",\"TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256\",\r\n\"0xCCAF\",\"Unassigned\",\r\n\"0xCD-CF*\",\"Unassigned\",\r\n\"0xD000\",\"Unassigned\",\r\n\"0xD001\",\"TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256\",\r\n\"0xD002\",\"TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384\",\r\n\"0xD003\",\"TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256\",\r\n\"0xD004\",\"Unassigned\",\r\n\"0xD005\",\"TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256\",\r\n\"0xD006\",\"Unassigned\",\r\n\"0xD1-FD*\",\"Unassigned\",\r\n\"0xFE00\",\"Unassigned\",\r\n\"0xFEFE\",\"Reserved to avoid conflicts with widely deployed implementations\",\r\n\"0xFF00\",\"Reserved for Private Use\"];\r\nEvent\r\n| where EventID == 36880 \r\n| parse EventData with * \"<Type>\" Type \"</Type>\" *\r\n| parse EventData with * \"<Protocol>\" Protocol \"</Protocol>\" *\r\n| parse EventData with * \"<CipherSuite>\" CipherSuite \"</CipherSuite>\" *\r\n| parse EventData with * \"<ExchangeStrength>\" Strength \"</ExchangeStrength>\" *\r\n| parse EventData with * \"<TargetName>\" TargetName \"</TargetName>\" *\r\n| parse EventData with * \"<RemoteCertSubjectName>\" ServerCert \"</RemoteCertSubjectName>\" *\r\n| extend CipherSuite=tohex(tolong(CipherSuite),4)\r\n| where Computer contains '{Computer}'\r\n| where '{Protocol:lable}'=='All' or Protocol in ({Protocol})\r\n| where '{Type:lable}'==\"All\" or Type in ({Type})\r\n| join kind=leftouter (SChannelTypes | extend CipherSuite=tohex(tolong(CipherSuite),4)) on CipherSuite\r\n| where '{CipherSuite:lable}'==\"All\" or CipherName in ({CipherSuite})\r\n| summarize Count = count(EventID) by bin(TimeGenerated, 1d), Protocol,Type, CipherName, [\"ServerCert (2016 only)\"]=ServerCert, [\"TargetName (2016 only)\"]=TargetName,Strength,Computer\r\n| order by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Details",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "formatOptions": {
                      "linkTarget": "GenericDetails",
                      "linkIsContextBlade": true,
                      "customColumnWidthSetting": "20ch"
                    },
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "Protocol",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "categorical",
                      "customColumnWidthSetting": "13ch"
                    }
                  },
                  {
                    "columnMatch": "Type",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "server",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "client",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "gray",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "CipherName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "40ch"
                    }
                  },
                  {
                    "columnMatch": "ServerCert (2016 only)",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "48ch"
                    }
                  },
                  {
                    "columnMatch": "TargetName (2016 only)",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "48ch"
                    }
                  },
                  {
                    "columnMatch": "Strength",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "14ch"
                    }
                  },
                  {
                    "columnMatch": "Computer",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "28ch"
                    }
                  },
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blue"
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "$gen_date_TimeGenerated_0",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_date_TimeGenerated_0",
                  "sortOrder": 2
                }
              ]
            },
            "name": "query - 3",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "SChannelTab"
      },
      "name": "SChannelGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Group: Security Log Clear",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### Security Log Clear Help\r\n#### Scenario\r\nThis tab shows where the security log has been cleared and by which user.\r\n\r\n#### Active Directory Advanced Audit Policy requirements\r\nAudit the event *1102(S): The audit log was cleared.*\r\n\r\n#### Events audited\r\n\t1102 - Security Log was cleared.\r\n\r\n#### Data types\r\n\t- SecurityEvents\r\n#### KPIs\r\n\t- Security Log Clears by DC.\r\n\t- Security Log Clears by Day.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 5"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "16384183-bac7-4cf1-ba8c-8efd544528fb",
                  "version": "KqlParameterItem/1.0",
                  "name": "Computer",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "0151c188-12f9-4274-b6c1-329fde3bf9d1",
                  "version": "KqlParameterItem/1.0",
                  "name": "Account",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityEvent\r\n| where EventID == 1102\r\n| where EventSourceName == \"Microsoft-Windows-Eventlog\"\r\n| parse EventData with * \"<SubjectUserName>\" Username '</S' *\r\n| parse EventData with * \"<SubjectDomainName>\" Domain '</S' *\r\n| project EventID, Domain, Username, TimeGenerated, DC=Computer\r\n| summarize Count=count() by Metric=\"Total of Log Clear Events detected.\"",
              "size": 3,
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Metric",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "showBorder": false,
                "size": "auto"
              }
            },
            "name": "query - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityEvent\r\n| where EventID == 1102\r\n| where EventSourceName == \"Microsoft-Windows-Eventlog\"\r\n| parse EventData with * \"<SubjectUserName>\" Username '</S' *\r\n| parse EventData with * \"<SubjectDomainName>\" Domain '</S' *\r\n| project Account=strcat(Domain,\"\\\\\",Username), TimeGenerated, Computer\r\n| where Computer contains '{Computer:lable}'\r\n| where Account contains '{Account:lable}'\r\n| summarize Count=count() by DC=Computer\r\n| order by Count desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Security Log Clears by DC",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red"
                    }
                  }
                ]
              }
            },
            "customWidth": "20",
            "name": "query - 2",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityEvent\r\n| where EventID == 1102\r\n| where EventSourceName == \"Microsoft-Windows-Eventlog\"\r\n| parse EventData with * \"<SubjectUserName>\" Username '</S' *\r\n| parse EventData with * \"<SubjectDomainName>\" Domain '</S' *\r\n| project Account=strcat(Domain,\"\\\\\",Username), TimeGenerated, Computer\r\n| where Computer contains '{Computer:lable}'\r\n| where Account contains '{Account:lable}'\r\n| summarize Count=count() by bin(TimeGenerated,1d)\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Security Log Clears by Day",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "barchart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red"
                    }
                  }
                ]
              },
              "chartSettings": {
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Count",
                    "color": "redBright"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "query - 2 - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityEvent\r\n| where EventID == 1102\r\n| where EventSourceName == \"Microsoft-Windows-Eventlog\"\r\n| parse EventData with * \"<SubjectUserName>\" Username '</S' *\r\n| parse EventData with * \"<SubjectDomainName>\" Domain '</S' *\r\n| project Account=strcat(Domain,\"\\\\\",Username), TimeGenerated, Computer\r\n| where Computer contains '{Computer:lable}'\r\n| where Account contains '{Account:lable}'\r\n| project TimeGenerated, DC=Computer, Account\r\n| order by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Details",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "DC",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "28ch"
                    }
                  },
                  {
                    "columnMatch": "Account",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "23ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "30",
            "name": "query - 4",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "SecurityLogClearTab"
      },
      "name": "SecurityLogClearGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Group: Audit Policy Change",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "8869b3a1-76a4-4238-9238-8d063401dc3f",
                  "version": "KqlParameterItem/1.0",
                  "name": "Computer",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "3ac61d17-dd8a-41bc-a9e2-f8f4c8681e4c",
                  "version": "KqlParameterItem/1.0",
                  "name": "Account",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "1cb40dbc-c1f5-46e4-b31f-1ef0390cefa1",
                  "version": "KqlParameterItem/1.0",
                  "name": "Category",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "let AuditCategories = datatable(Category:string,Subcategory:string,GUID:guid)[\r\n\"System\",\"None\",\"69979848-797A-11D9-BED3-505054503030\",\r\n\"System\",\"Security State Change\",\"0CCE9210-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"Security System Extension\",\"0CCE9211-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"System Integrity\",\"0CCE9212-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"IPsec Driver\",\"0CCE9213-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"Other System Events\",\"0CCE9214-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"None\",\"69979849-797A-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Logon\",\"0CCE9215-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Logoff\",\"0CCE9216-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Account Lockout\",\"0CCE9217-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Main Mode\",\"0CCE9218-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Quick Mode\",\"0CCE9219-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Extended Mode\",\"0CCE921A-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Special Logon\",\"0CCE921B-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Other Logon/Logoff Events\",\"0CCE921C-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Network Policy Server\",\"0CCE9243-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"User / Device Claims\",\"0CCE9247-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"None\",\"6997984A-797A-11D9-BED3-505054503030\",\r\n\"Object Access\",\"File System\",\"0CCE921D-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Registry\",\"0CCE921E-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Kernel Object\",\"0CCE921F-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"SAM\",\"0CCE9220-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Certification Services\",\"0CCE9221-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Application Generated\",\"0CCE9222-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Handle Manipulation\",\"0CCE9223-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"File Share\",\"0CCE9224-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Filtering Platform Packet Drop\",\"0CCE9225-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Filtering Platform Connection\",\"0CCE9226-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Other Object Access Events\",\"0CCE9227-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Detailed File Share\",\"0CCE9244-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Removable Storage\",\"0CCE9245-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Central Policy Staging\",\"0CCE9246-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"None\",\"6997984B-797A-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Sensitive Privilege Use\",\"0CCE9228-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Non Sensitive Privilege Use\",\"0CCE9229-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Other Privilege Use Events\",\"0CCE922A-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"None\",\"6997984C-797A-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Process Creation\",\"0CCE922B-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Process Termination\",\"0CCE922C-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"DPAPI Activity\",\"0CCE922D-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"RPC Events\",\"0CCE922E-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Plug and Play Events\",\"0CCE9248-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"None\",\"6997984D-797A-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Audit Policy Change\",\"0CCE922F-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Authentication Policy Change\",\"0CCE9230-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Authorization Policy Change\",\"0CCE9231-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"MPSSVC Rule-Level Policy Change\",\"0CCE9232-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Filtering Platform Policy Change\",\"0CCE9233-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Other Policy Change Events\",\"0CCE9234-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"None\",\"6997984E-797A-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"User Account Mangement\",\"0CCE9235-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Computer Account Mangement\",\"0CCE9236-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Security Group Mangement\",\"0CCE9237-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Distribution Group Mangement\",\"0CCE9238-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Application Group Mangement\",\"0CCE9239-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Other Account Management Events\",\"0CCE923A-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"None\",\"6997984F-797A-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Access\",\"0CCE923B-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Changes\",\"0CCE923C-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Replication\",\"0CCE923D-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Detailed Directory Service Replicaiton\",\"0CCE923E-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"None\",\"69979850-797A-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Credential Valication\",\"0CCE923F-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Kerberos Service Ticket Operations\",\"0CCE9240-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Other Account Logon Events\",\"0CCE9241-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Kerberos Authentication Service\",\"0CCE9242-69AE-11D9-BED3-505054503030\"];\r\nSecurityEvent\r\n| where EventID == 4719\r\n| project EventID, Account, toguid(SubcategoryGuid), Computer, TimeGenerated, AuditPolicyChanges\r\n| join kind=leftouter (AuditCategories) on $left.SubcategoryGuid==$right.GUID\r\n| distinct Category\r\n| order by Category asc\r\n\r\n",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "b8bc8e06-e789-483a-84d6-7eb2e4409c25",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subcategory",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "let AuditCategories = datatable(Category:string,Subcategory:string,GUID:guid)[\r\n\"System\",\"None\",\"69979848-797A-11D9-BED3-505054503030\",\r\n\"System\",\"Security State Change\",\"0CCE9210-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"Security System Extension\",\"0CCE9211-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"System Integrity\",\"0CCE9212-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"IPsec Driver\",\"0CCE9213-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"Other System Events\",\"0CCE9214-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"None\",\"69979849-797A-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Logon\",\"0CCE9215-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Logoff\",\"0CCE9216-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Account Lockout\",\"0CCE9217-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Main Mode\",\"0CCE9218-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Quick Mode\",\"0CCE9219-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Extended Mode\",\"0CCE921A-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Special Logon\",\"0CCE921B-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Other Logon/Logoff Events\",\"0CCE921C-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Network Policy Server\",\"0CCE9243-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"User / Device Claims\",\"0CCE9247-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"None\",\"6997984A-797A-11D9-BED3-505054503030\",\r\n\"Object Access\",\"File System\",\"0CCE921D-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Registry\",\"0CCE921E-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Kernel Object\",\"0CCE921F-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"SAM\",\"0CCE9220-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Certification Services\",\"0CCE9221-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Application Generated\",\"0CCE9222-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Handle Manipulation\",\"0CCE9223-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"File Share\",\"0CCE9224-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Filtering Platform Packet Drop\",\"0CCE9225-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Filtering Platform Connection\",\"0CCE9226-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Other Object Access Events\",\"0CCE9227-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Detailed File Share\",\"0CCE9244-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Removable Storage\",\"0CCE9245-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Central Policy Staging\",\"0CCE9246-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"None\",\"6997984B-797A-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Sensitive Privilege Use\",\"0CCE9228-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Non Sensitive Privilege Use\",\"0CCE9229-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Other Privilege Use Events\",\"0CCE922A-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"None\",\"6997984C-797A-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Process Creation\",\"0CCE922B-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Process Termination\",\"0CCE922C-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"DPAPI Activity\",\"0CCE922D-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"RPC Events\",\"0CCE922E-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Plug and Play Events\",\"0CCE9248-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"None\",\"6997984D-797A-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Audit Policy Change\",\"0CCE922F-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Authentication Policy Change\",\"0CCE9230-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Authorization Policy Change\",\"0CCE9231-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"MPSSVC Rule-Level Policy Change\",\"0CCE9232-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Filtering Platform Policy Change\",\"0CCE9233-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Other Policy Change Events\",\"0CCE9234-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"None\",\"6997984E-797A-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"User Account Mangement\",\"0CCE9235-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Computer Account Mangement\",\"0CCE9236-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Security Group Mangement\",\"0CCE9237-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Distribution Group Mangement\",\"0CCE9238-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Application Group Mangement\",\"0CCE9239-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Other Account Management Events\",\"0CCE923A-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"None\",\"6997984F-797A-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Access\",\"0CCE923B-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Changes\",\"0CCE923C-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Replication\",\"0CCE923D-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Detailed Directory Service Replicaiton\",\"0CCE923E-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"None\",\"69979850-797A-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Credential Valication\",\"0CCE923F-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Kerberos Service Ticket Operations\",\"0CCE9240-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Other Account Logon Events\",\"0CCE9241-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Kerberos Authentication Service\",\"0CCE9242-69AE-11D9-BED3-505054503030\"];\r\nSecurityEvent\r\n| where EventID == 4719\r\n| project EventID, Account, toguid(SubcategoryGuid), Computer, TimeGenerated, AuditPolicyChanges\r\n| join kind=leftouter (AuditCategories) on $left.SubcategoryGuid==$right.GUID\r\n| distinct Subcategory\r\n| order by Subcategory asc\r\n\r\n",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "4884f01a-7f7b-4c54-9c86-e0aef66b72d7",
                  "version": "KqlParameterItem/1.0",
                  "name": "Change",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SecurityEvent\r\n| where EventID == 4719\r\n| extend Change = replace_string(AuditPolicyChanges,\"%%8448\",\"Success Removed\") \r\n| extend Change = replace_string(Change,\"%%8449\", \"Success Added\") \r\n| extend Change = replace_string(Change,\"%%8450\", \"Failure Removed\") \r\n| extend Change = replace_string(Change,\"%%8451\", \"Failure Added\") \r\n| extend Change = split(Change,\",\")\r\n| project EventID, Account, toguid(SubcategoryGuid), Computer, TimeGenerated, AuditPolicyChanges, Change\r\n| mv-expand Change\r\n| distinct tostring(Change)\r\n| order by Change asc\r\n",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "df78758f-041d-4e0b-bb9a-eff3984a628f",
                  "version": "KqlParameterItem/1.0",
                  "name": "isComputer",
                  "label": "Is maker a Computer?",
                  "type": 10,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n {\"value\": \"True\", \"label\": \"True\"},\r\n {\"value\": \"False\", \"label\": \"False\" }\r\n]\r\n",
                  "value": "True"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 5"
          },
          {
            "type": 1,
            "content": {
              "json": "### Audit Policy Change Help\r\n#### Scenario\r\nThis tab shows an attacker’s attempts to cover his tracks as he potentially has created environmental persistence.\r\n\r\n#### Active Directory Advanced Audit Policy requirements\r\nAudit the event *4719(S): System audit policy was changed.*\r\n\r\n#### Events audited\r\n\t4719 - The audit log was cleared\r\n\r\n#### Data types\r\n\t- SecurityEvents\r\n#### KPIs\r\n\t- Audit Policy Change by Category.\r\n\t- Audit Policy Change by Day.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 6"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityEvent\r\n| where EventID == 4719\r\n| extend isComputer = iif(Account endswith \"$\",\"True\",\"False\")\r\n| where isComputer contains '{isComputer}'\r\n| summarize Count=count() by Metric=\"Total of Audit Policy Change Events detected.\"\r\n\r\n\r\n",
              "size": 3,
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Metric",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal"
                    }
                  }
                },
                "showBorder": false,
                "size": "auto"
              }
            },
            "name": "query - 2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let AuditCategories = datatable(Category:string,Subcategory:string,GUID:guid)[\r\n\"System\",\"None\",\"69979848-797A-11D9-BED3-505054503030\",\r\n\"System\",\"Security State Change\",\"0CCE9210-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"Security System Extension\",\"0CCE9211-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"System Integrity\",\"0CCE9212-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"IPsec Driver\",\"0CCE9213-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"Other System Events\",\"0CCE9214-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"None\",\"69979849-797A-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Logon\",\"0CCE9215-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Logoff\",\"0CCE9216-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Account Lockout\",\"0CCE9217-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Main Mode\",\"0CCE9218-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Quick Mode\",\"0CCE9219-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Extended Mode\",\"0CCE921A-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Special Logon\",\"0CCE921B-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Other Logon/Logoff Events\",\"0CCE921C-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Network Policy Server\",\"0CCE9243-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"User / Device Claims\",\"0CCE9247-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"None\",\"6997984A-797A-11D9-BED3-505054503030\",\r\n\"Object Access\",\"File System\",\"0CCE921D-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Registry\",\"0CCE921E-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Kernel Object\",\"0CCE921F-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"SAM\",\"0CCE9220-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Certification Services\",\"0CCE9221-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Application Generated\",\"0CCE9222-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Handle Manipulation\",\"0CCE9223-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"File Share\",\"0CCE9224-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Filtering Platform Packet Drop\",\"0CCE9225-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Filtering Platform Connection\",\"0CCE9226-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Other Object Access Events\",\"0CCE9227-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Detailed File Share\",\"0CCE9244-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Removable Storage\",\"0CCE9245-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Central Policy Staging\",\"0CCE9246-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"None\",\"6997984B-797A-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Sensitive Privilege Use\",\"0CCE9228-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Non Sensitive Privilege Use\",\"0CCE9229-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Other Privilege Use Events\",\"0CCE922A-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"None\",\"6997984C-797A-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Process Creation\",\"0CCE922B-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Process Termination\",\"0CCE922C-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"DPAPI Activity\",\"0CCE922D-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"RPC Events\",\"0CCE922E-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Plug and Play Events\",\"0CCE9248-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"None\",\"6997984D-797A-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Audit Policy Change\",\"0CCE922F-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Authentication Policy Change\",\"0CCE9230-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Authorization Policy Change\",\"0CCE9231-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"MPSSVC Rule-Level Policy Change\",\"0CCE9232-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Filtering Platform Policy Change\",\"0CCE9233-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Other Policy Change Events\",\"0CCE9234-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"None\",\"6997984E-797A-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"User Account Mangement\",\"0CCE9235-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Computer Account Mangement\",\"0CCE9236-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Security Group Mangement\",\"0CCE9237-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Distribution Group Mangement\",\"0CCE9238-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Application Group Mangement\",\"0CCE9239-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Other Account Management Events\",\"0CCE923A-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"None\",\"6997984F-797A-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Access\",\"0CCE923B-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Changes\",\"0CCE923C-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Replication\",\"0CCE923D-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Detailed Directory Service Replicaiton\",\"0CCE923E-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"None\",\"69979850-797A-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Credential Valication\",\"0CCE923F-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Kerberos Service Ticket Operations\",\"0CCE9240-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Other Account Logon Events\",\"0CCE9241-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Kerberos Authentication Service\",\"0CCE9242-69AE-11D9-BED3-505054503030\"];\r\nSecurityEvent\r\n| where EventID == 4719\r\n| where Computer contains '{Computer:lable}'\r\n| where Account contains '{Account:lable}'\r\n| extend isComputer = iif(Account endswith \"$\",\"True\",\"False\")\r\n| where isComputer contains '{isComputer}'\r\n| project EventID, Account, toguid(SubcategoryGuid), Computer, TimeGenerated,AuditPolicyChanges\r\n| join kind=leftouter (AuditCategories) on $left.SubcategoryGuid==$right.GUID\r\n| where '{Category:lable}'==\"All\" or Category in ({Category})\r\n| where '{Subcategory:lable}'==\"All\" or Subcategory in ({Subcategory})\r\n| extend Change = replace_string(AuditPolicyChanges,\"%%8448\",\"Success Removed\") \r\n| extend Change = replace_string(Change,\"%%8449\", \"Success Added\") \r\n| extend Change = replace_string(Change,\"%%8450\", \"Failure Removed\") \r\n| extend Change = replace_string(Change,\"%%8451\", \"Failure Added\") \r\n| extend Change = split(Change,\",\")\r\n| project EventID, Account, Category, Subcategory,SubcategoryGuid, Computer, TimeGenerated, AuditPolicyChanges, Change\r\n| mv-expand Change\r\n| where '{Change:lable}'==\"All\" or Change in ({Change})\r\n| summarize Count=count() by Category, Subcategory\r\n| order by Count desc\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Audit Policy Change by Category",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "redBright"
                    }
                  }
                ]
              }
            },
            "customWidth": "30",
            "name": "query - 0",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let AuditCategories = datatable(Category:string,Subcategory:string,GUID:guid)[\r\n\"System\",\"None\",\"69979848-797A-11D9-BED3-505054503030\",\r\n\"System\",\"Security State Change\",\"0CCE9210-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"Security System Extension\",\"0CCE9211-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"System Integrity\",\"0CCE9212-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"IPsec Driver\",\"0CCE9213-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"Other System Events\",\"0CCE9214-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"None\",\"69979849-797A-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Logon\",\"0CCE9215-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Logoff\",\"0CCE9216-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Account Lockout\",\"0CCE9217-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Main Mode\",\"0CCE9218-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Quick Mode\",\"0CCE9219-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Extended Mode\",\"0CCE921A-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Special Logon\",\"0CCE921B-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Other Logon/Logoff Events\",\"0CCE921C-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Network Policy Server\",\"0CCE9243-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"User / Device Claims\",\"0CCE9247-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"None\",\"6997984A-797A-11D9-BED3-505054503030\",\r\n\"Object Access\",\"File System\",\"0CCE921D-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Registry\",\"0CCE921E-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Kernel Object\",\"0CCE921F-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"SAM\",\"0CCE9220-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Certification Services\",\"0CCE9221-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Application Generated\",\"0CCE9222-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Handle Manipulation\",\"0CCE9223-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"File Share\",\"0CCE9224-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Filtering Platform Packet Drop\",\"0CCE9225-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Filtering Platform Connection\",\"0CCE9226-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Other Object Access Events\",\"0CCE9227-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Detailed File Share\",\"0CCE9244-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Removable Storage\",\"0CCE9245-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Central Policy Staging\",\"0CCE9246-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"None\",\"6997984B-797A-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Sensitive Privilege Use\",\"0CCE9228-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Non Sensitive Privilege Use\",\"0CCE9229-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Other Privilege Use Events\",\"0CCE922A-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"None\",\"6997984C-797A-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Process Creation\",\"0CCE922B-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Process Termination\",\"0CCE922C-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"DPAPI Activity\",\"0CCE922D-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"RPC Events\",\"0CCE922E-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Plug and Play Events\",\"0CCE9248-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"None\",\"6997984D-797A-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Audit Policy Change\",\"0CCE922F-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Authentication Policy Change\",\"0CCE9230-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Authorization Policy Change\",\"0CCE9231-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"MPSSVC Rule-Level Policy Change\",\"0CCE9232-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Filtering Platform Policy Change\",\"0CCE9233-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Other Policy Change Events\",\"0CCE9234-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"None\",\"6997984E-797A-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"User Account Mangement\",\"0CCE9235-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Computer Account Mangement\",\"0CCE9236-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Security Group Mangement\",\"0CCE9237-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Distribution Group Mangement\",\"0CCE9238-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Application Group Mangement\",\"0CCE9239-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Other Account Management Events\",\"0CCE923A-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"None\",\"6997984F-797A-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Access\",\"0CCE923B-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Changes\",\"0CCE923C-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Replication\",\"0CCE923D-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Detailed Directory Service Replicaiton\",\"0CCE923E-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"None\",\"69979850-797A-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Credential Valication\",\"0CCE923F-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Kerberos Service Ticket Operations\",\"0CCE9240-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Other Account Logon Events\",\"0CCE9241-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Kerberos Authentication Service\",\"0CCE9242-69AE-11D9-BED3-505054503030\"];\r\nSecurityEvent\r\n| where EventID == 4719\r\n| where Computer contains '{Computer:lable}'\r\n| where Account contains '{Account:lable}'\r\n| extend isComputer = iif(Account endswith \"$\",\"True\",\"False\")\r\n| where isComputer contains '{isComputer}'\r\n| project EventID, Account, toguid(SubcategoryGuid), Computer, TimeGenerated,AuditPolicyChanges\r\n| join kind=leftouter (AuditCategories) on $left.SubcategoryGuid==$right.GUID\r\n| where '{Category:lable}'==\"All\" or Category in ({Category})\r\n| where '{Subcategory:lable}'==\"All\" or Subcategory in ({Subcategory})\r\n| extend Change = replace_string(AuditPolicyChanges,\"%%8448\",\"Success Removed\") \r\n| extend Change = replace_string(Change,\"%%8449\", \"Success Added\") \r\n| extend Change = replace_string(Change,\"%%8450\", \"Failure Removed\") \r\n| extend Change = replace_string(Change,\"%%8451\", \"Failure Added\") \r\n| extend Change = split(Change,\",\")\r\n| project EventID, Account, Category, Subcategory,SubcategoryGuid, Computer, TimeGenerated, AuditPolicyChanges, Change\r\n| mv-expand Change\r\n| where '{Change:lable}'==\"All\" or Change in ({Change})\r\n| summarize ['Total Policy Changes']=count() by bin(TimeGenerated,1d)\r\n\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Audit Policy Changes by Day",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "barchart",
              "chartSettings": {
                "showLegend": true
              }
            },
            "customWidth": "70",
            "name": "query - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let AuditCategories = datatable(Category:string,Subcategory:string,GUID:guid)[\r\n\"System\",\"None\",\"69979848-797A-11D9-BED3-505054503030\",\r\n\"System\",\"Security State Change\",\"0CCE9210-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"Security System Extension\",\"0CCE9211-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"System Integrity\",\"0CCE9212-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"IPsec Driver\",\"0CCE9213-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"Other System Events\",\"0CCE9214-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"None\",\"69979849-797A-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Logon\",\"0CCE9215-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Logoff\",\"0CCE9216-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Account Lockout\",\"0CCE9217-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Main Mode\",\"0CCE9218-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Quick Mode\",\"0CCE9219-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Extended Mode\",\"0CCE921A-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Special Logon\",\"0CCE921B-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Other Logon/Logoff Events\",\"0CCE921C-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Network Policy Server\",\"0CCE9243-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"User / Device Claims\",\"0CCE9247-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"None\",\"6997984A-797A-11D9-BED3-505054503030\",\r\n\"Object Access\",\"File System\",\"0CCE921D-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Registry\",\"0CCE921E-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Kernel Object\",\"0CCE921F-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"SAM\",\"0CCE9220-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Certification Services\",\"0CCE9221-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Application Generated\",\"0CCE9222-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Handle Manipulation\",\"0CCE9223-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"File Share\",\"0CCE9224-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Filtering Platform Packet Drop\",\"0CCE9225-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Filtering Platform Connection\",\"0CCE9226-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Other Object Access Events\",\"0CCE9227-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Detailed File Share\",\"0CCE9244-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Removable Storage\",\"0CCE9245-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Central Policy Staging\",\"0CCE9246-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"None\",\"6997984B-797A-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Sensitive Privilege Use\",\"0CCE9228-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Non Sensitive Privilege Use\",\"0CCE9229-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Other Privilege Use Events\",\"0CCE922A-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"None\",\"6997984C-797A-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Process Creation\",\"0CCE922B-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Process Termination\",\"0CCE922C-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"DPAPI Activity\",\"0CCE922D-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"RPC Events\",\"0CCE922E-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Plug and Play Events\",\"0CCE9248-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"None\",\"6997984D-797A-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Audit Policy Change\",\"0CCE922F-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Authentication Policy Change\",\"0CCE9230-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Authorization Policy Change\",\"0CCE9231-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"MPSSVC Rule-Level Policy Change\",\"0CCE9232-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Filtering Platform Policy Change\",\"0CCE9233-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Other Policy Change Events\",\"0CCE9234-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"None\",\"6997984E-797A-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"User Account Mangement\",\"0CCE9235-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Computer Account Mangement\",\"0CCE9236-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Security Group Mangement\",\"0CCE9237-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Distribution Group Mangement\",\"0CCE9238-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Application Group Mangement\",\"0CCE9239-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Other Account Management Events\",\"0CCE923A-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"None\",\"6997984F-797A-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Access\",\"0CCE923B-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Changes\",\"0CCE923C-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Replication\",\"0CCE923D-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Detailed Directory Service Replicaiton\",\"0CCE923E-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"None\",\"69979850-797A-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Credential Valication\",\"0CCE923F-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Kerberos Service Ticket Operations\",\"0CCE9240-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Other Account Logon Events\",\"0CCE9241-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Kerberos Authentication Service\",\"0CCE9242-69AE-11D9-BED3-505054503030\"];\r\nSecurityEvent\r\n| where EventID == 4719\r\n| where Computer contains '{Computer:lable}'\r\n| where Account contains '{Account:lable}'\r\n| extend isComputer = iif(Account endswith \"$\",\"True\",\"False\")\r\n| where isComputer contains '{isComputer}'\r\n| project EventID, Account, toguid(SubcategoryGuid), Computer, TimeGenerated,AuditPolicyChanges\r\n| join kind=leftouter (AuditCategories) on $left.SubcategoryGuid==$right.GUID\r\n| where '{Category:lable}'==\"All\" or Category in ({Category})\r\n| where '{Subcategory:lable}'==\"All\" or Subcategory in ({Subcategory})\r\n| extend Change = replace_string(AuditPolicyChanges,\"%%8448\",\"Success Removed\") \r\n| extend Change = replace_string(Change,\"%%8449\", \"Success Added\") \r\n| extend Change = replace_string(Change,\"%%8450\", \"Failure Removed\") \r\n| extend Change = replace_string(Change,\"%%8451\", \"Failure Added\") \r\n| extend Change = split(Change,\",\")\r\n| project EventID, Account, Category, Subcategory,SubcategoryGuid, Computer, TimeGenerated, AuditPolicyChanges, Change\r\n| mv-expand Change\r\n| where '{Change:lable}'==\"All\" or Change in ({Change})\r\n| summarize ['Total Policy Changes']=count() by tostring(Change)\r\n| order by ['Total Policy Changes'] desc\r\n\r\n\r\n\r\n",
              "size": 3,
              "showAnalytics": true,
              "title": "Audit Policy Changes by Day",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "piechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Total Policy Changes",
                    "formatter": 3,
                    "formatOptions": {
                      "palette": "blue"
                    }
                  }
                ]
              }
            },
            "customWidth": "30",
            "name": "query - 1 - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let AuditCategories = datatable(Category:string,Subcategory:string,GUID:guid)[\r\n\"System\",\"None\",\"69979848-797A-11D9-BED3-505054503030\",\r\n\"System\",\"Security State Change\",\"0CCE9210-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"Security System Extension\",\"0CCE9211-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"System Integrity\",\"0CCE9212-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"IPsec Driver\",\"0CCE9213-69AE-11D9-BED3-505054503030\",\r\n\"System\",\"Other System Events\",\"0CCE9214-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"None\",\"69979849-797A-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Logon\",\"0CCE9215-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Logoff\",\"0CCE9216-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Account Lockout\",\"0CCE9217-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Main Mode\",\"0CCE9218-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Quick Mode\",\"0CCE9219-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"IPsec Extended Mode\",\"0CCE921A-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Special Logon\",\"0CCE921B-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Other Logon/Logoff Events\",\"0CCE921C-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"Network Policy Server\",\"0CCE9243-69AE-11D9-BED3-505054503030\",\r\n\"Logon/Logoff\",\"User / Device Claims\",\"0CCE9247-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"None\",\"6997984A-797A-11D9-BED3-505054503030\",\r\n\"Object Access\",\"File System\",\"0CCE921D-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Registry\",\"0CCE921E-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Kernel Object\",\"0CCE921F-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"SAM\",\"0CCE9220-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Certification Services\",\"0CCE9221-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Application Generated\",\"0CCE9222-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Handle Manipulation\",\"0CCE9223-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"File Share\",\"0CCE9224-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Filtering Platform Packet Drop\",\"0CCE9225-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Filtering Platform Connection\",\"0CCE9226-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Other Object Access Events\",\"0CCE9227-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Detailed File Share\",\"0CCE9244-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Removable Storage\",\"0CCE9245-69AE-11D9-BED3-505054503030\",\r\n\"Object Access\",\"Central Policy Staging\",\"0CCE9246-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"None\",\"6997984B-797A-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Sensitive Privilege Use\",\"0CCE9228-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Non Sensitive Privilege Use\",\"0CCE9229-69AE-11D9-BED3-505054503030\",\r\n\"Privilege Use\",\"Other Privilege Use Events\",\"0CCE922A-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"None\",\"6997984C-797A-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Process Creation\",\"0CCE922B-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Process Termination\",\"0CCE922C-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"DPAPI Activity\",\"0CCE922D-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"RPC Events\",\"0CCE922E-69AE-11D9-BED3-505054503030\",\r\n\"Detailed Tracking\",\"Plug and Play Events\",\"0CCE9248-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"None\",\"6997984D-797A-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Audit Policy Change\",\"0CCE922F-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Authentication Policy Change\",\"0CCE9230-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Authorization Policy Change\",\"0CCE9231-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"MPSSVC Rule-Level Policy Change\",\"0CCE9232-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Filtering Platform Policy Change\",\"0CCE9233-69AE-11D9-BED3-505054503030\",\r\n\"Policy Change\",\"Other Policy Change Events\",\"0CCE9234-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"None\",\"6997984E-797A-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"User Account Mangement\",\"0CCE9235-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Computer Account Mangement\",\"0CCE9236-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Security Group Mangement\",\"0CCE9237-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Distribution Group Mangement\",\"0CCE9238-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Application Group Mangement\",\"0CCE9239-69AE-11D9-BED3-505054503030\",\r\n\"Account Mangement\",\"Other Account Management Events\",\"0CCE923A-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"None\",\"6997984F-797A-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Access\",\"0CCE923B-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Changes\",\"0CCE923C-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Directory Service Replication\",\"0CCE923D-69AE-11D9-BED3-505054503030\",\r\n\"DS Access\",\"Detailed Directory Service Replicaiton\",\"0CCE923E-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"None\",\"69979850-797A-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Credential Valication\",\"0CCE923F-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Kerberos Service Ticket Operations\",\"0CCE9240-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Other Account Logon Events\",\"0CCE9241-69AE-11D9-BED3-505054503030\",\r\n\"Account Logon\",\"Kerberos Authentication Service\",\"0CCE9242-69AE-11D9-BED3-505054503030\"];\r\nSecurityEvent\r\n| where EventID == 4719\r\n| where Computer contains '{Computer:lable}'\r\n| where Account contains '{Account:lable}'\r\n| extend isComputer = iif(Account endswith \"$\",\"True\",\"False\")\r\n| where isComputer contains '{isComputer}'\r\n| project EventID, Account, toguid(SubcategoryGuid), Computer, TimeGenerated,AuditPolicyChanges\r\n| join kind=leftouter (AuditCategories) on $left.SubcategoryGuid==$right.GUID\r\n| where '{Category:lable}'==\"All\" or Category in ({Category})\r\n| where '{Subcategory:lable}'==\"All\" or Subcategory in ({Subcategory})\r\n| extend Change = replace_string(AuditPolicyChanges,\"%%8448\",\"Success Removed\") \r\n| extend Change = replace_string(Change,\"%%8449\", \"Success Added\") \r\n| extend Change = replace_string(Change,\"%%8450\", \"Failure Removed\") \r\n| extend Change = replace_string(Change,\"%%8451\", \"Failure Added\") \r\n| extend Change = split(Change,\",\")\r\n| mv-expand Change\r\n| project EventID, Account, Category, Subcategory,SubcategoryGuid, Computer, TimeGenerated, AuditPolicyChanges, Change\r\n| where '{Change:lable}'==\"All\" or Change in ({Change})\r\n| project TimeGenerated, Computer, Account, Change, Category, Subcategory\r\n| order by TimeGenerated desc\r\n\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Details",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "TimeGenerated",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "TimeGenerated",
                  "sortOrder": 2
                }
              ]
            },
            "customWidth": "70",
            "name": "query - 4",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "AuditPolicyChangeTab"
      },
      "name": "AuditPolicyChangeGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Group: User Management",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "04ce246a-49f6-4518-ae7f-36b5c93c4452",
                  "version": "KqlParameterItem/1.0",
                  "name": "ChangeType",
                  "label": "Change type",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "// 4720 - a user account was created\r\n// 4722 - a user account was enabled\r\n// 4724 - an attempt was made to reset an account's password\r\n// 4725 - a user account was disabled\r\n// 4726 - a user account was deleted\r\n// 4765 - SID History was added to an account\r\n// 4766 - An attempt to add SID History to an account failed\r\n// 4794 - An attempt was made to set the Directory Services Restore Mode administrator password\r\nSecurityEvent\r\n| where EventID in (4720, 4722, 4724, 4725, 4726, 4765, 4766, 4794)\r\n| project TimeGenerated, Computer, Level, EventID, ChangeMaker=SubjectAccount, TargetAccount , Activity\r\n| extend AuditStatus = iif(Level==8,\"Success\",iif(Level==16,\"Failure\",\"Unknown\"))\r\n| distinct AuditStatus\r\n| order by AuditStatus asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "65fcc65e-3f75-4ddf-b8f1-71b8f332b8e6",
                  "version": "KqlParameterItem/1.0",
                  "name": "isAdminTarget",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SecurityEvent\r\n| where EventID in (4720, 4722, 4724, 4725, 4726, 4765, 4766, 4794)\r\n| project TimeGenerated, Computer, Level, EventID, ChangeMaker=SubjectAccount, TargetAccount , Activity\r\n| extend AuditStatus = iif(Level==8,\"Success\",iif(Level==16,\"Failure\",\"Unknown\"))\r\n| join kind=leftouter (VASWUsersParser) on $left.TargetAccount==$right.msDSPrincipalName\r\n| extend isAdminTarget = iif(isAdmin==\"\",\"Unknown\",iif(isAdmin==\"True\",\"True\",\"False\"))\r\n| distinct isAdminTarget\r\n| order by isAdminTarget asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": null,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "ba78d35f-3c90-420d-8d56-92c663f2de21",
                  "version": "KqlParameterItem/1.0",
                  "name": "Activity",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SecurityEvent\r\n| where EventID in (4720, 4722, 4724, 4725, 4726, 4765, 4766, 4794)\r\n| project TimeGenerated, Computer, Level, EventID, ChangeMaker=SubjectAccount, TargetAccount , Activity=replace_string(Activity,'\\'','')\r\n| extend AuditStatus = iif(Level==8,\"Success\",iif(Level==16,\"Failure\",\"Unknown\"))\r\n| join kind=leftouter (VASWUsersParser) on $left.TargetAccount==$right.msDSPrincipalName\r\n| extend isAdminTarget = iif(isAdmin==\"\",\"Unknown\",iif(isAdmin==\"True\",\"True\",\"False\"))\r\n| distinct Activity \r\n| order by Activity asc",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": null,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "All",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "67f756f9-44b3-45ae-8b81-b184fd94e25b",
                  "version": "KqlParameterItem/1.0",
                  "name": "TargetAccount",
                  "label": "Target Account",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "e7714524-c3eb-4964-aa5d-cf7efe7d5e09",
                  "version": "KqlParameterItem/1.0",
                  "name": "ChangeMaker",
                  "label": "Change Maker",
                  "type": 1,
                  "value": "",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "### User Management Help\r\n#### Scenario\r\nThis tab shows the most common user management activities related within the forest. User Management in a normal environment are fairly static and do not change much unless something is altered.\r\n\r\n#### Active Directory Advanced Audit Policy requirements\r\n*Group policy configuration - Computer Configuration\\Policies\\Security Settings\\Advanced Audit Policy Configuration\\Account Management*\r\n\t- User Account Management\r\n\r\n#### Events audited\r\n\t4720 - a user account was created\r\n\t4722 - a user account was enabled\r\n\t4724 - an attempt was made to reset an account's password\r\n\t4725 - a user account was disabled\r\n\t4726 - a user account was deleted\r\n\t4765 - SID History was added to an account\r\n\t4766 - An attempt to add SID History to an account failed\r\n\t4794 - An attempt was made to set the Directory Services Restore Mode administrator password\r\n\r\n#### Data types\r\n\t- SecurityEvents\r\n#### KPIs\r\n\t- User Management by Date\r\n\t- User Management by ChangeMaker.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityEvent\r\n| where EventID in (4720, 4722, 4724, 4725, 4726, 4765, 4766, 4794)\r\n| project TimeGenerated, Computer, Level, EventID, ChangeMaker=SubjectAccount, TargetAccount , Activity=replace_string(Activity,'\\'','')\r\n| where ChangeMaker contains '{ChangeMaker}'\r\n| where TargetAccount contains '{TargetAccount}'\r\n| where '{Activity:label}'==\"All\" or Activity in ({Activity})\r\n| extend AuditStatus = iif(Level==8,\"Success\",iif(Level==16,\"Failure\",\"Unknown\"))\r\n| where '{ChangeType:lable}'==\"All\" or AuditStatus in ({ChangeType})\r\n| join kind=leftouter (VASWUsersParser) on $left.TargetAccount==$right.msDSPrincipalName\r\n| extend isAdminTarget = iif(isAdmin==\"\",\"Unknown\",iif(isAdmin==\"True\",\"True\",\"False\"))\r\n| where '{isAdminTarget:lable}'==\"All\" or isAdminTarget in ({isAdminTarget})\r\n| summarize ['Total changes']=count() by Activity\r\n| order by ['Total changes'] desc",
              "size": 0,
              "showAnalytics": true,
              "title": "User Management by Change Type",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Activity",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "52ch"
                    }
                  },
                  {
                    "columnMatch": "Total changes",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blueDark",
                      "customColumnWidthSetting": "17ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "30",
            "name": "query - 1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityEvent\r\n| where EventID in (4720, 4722, 4724, 4725, 4726, 4765, 4766, 4794)\r\n| project TimeGenerated, Computer, Level, EventID, ChangeMaker=SubjectAccount, TargetAccount , Activity=replace_string(Activity,'\\'','')\r\n| where ChangeMaker contains '{ChangeMaker}'\r\n| where TargetAccount contains '{TargetAccount}'\r\n| where '{Activity:lable}'==\"All\" or Activity in ({Activity})\r\n| extend AuditStatus = iif(Level==8,\"Success\",iif(Level==16,\"Failure\",\"Unknown\"))\r\n| where '{ChangeType:lable}'==\"All\" or AuditStatus in ({ChangeType})\r\n| join kind=leftouter (VASWUsersParser) on $left.TargetAccount==$right.msDSPrincipalName\r\n| extend isAdminTarget = iif(isAdmin==\"\",\"Unknown\",iif(isAdmin==\"True\",\"True\",\"False\"))\r\n| where '{isAdminTarget:lable}'==\"All\" or isAdminTarget in ({isAdminTarget})\r\n| summarize ['Total changes']=count() by bin(TimeGenerated,1d),Activity\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "User Management by Date",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "categoricalbar",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Activity",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "52ch"
                    }
                  },
                  {
                    "columnMatch": "Total changes",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blueDark",
                      "customColumnWidthSetting": "17ch"
                    }
                  }
                ]
              },
              "chartSettings": {
                "group": "Activity",
                "createOtherGroup": null,
                "showLegend": true
              }
            },
            "customWidth": "70",
            "name": "query - 1 - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//Group 1 (Id). Count y serialize -- ChangeMaker\r\nlet ChangeMakers = SecurityEvent\r\n| where EventID in (4720, 4722, 4724, 4725, 4726, 4765, 4766, 4794)\r\n| project TimeGenerated, Computer, Level, EventID, ChangeMaker=SubjectAccount, TargetAccount, Activity=replace_string(Activity, \"\\'\", \"\")\r\n| where ChangeMaker contains '{ChangeMaker}'\r\n| where TargetAccount contains '{TargetAccount}'\r\n| where '{Activity:lable}'==\"All\" or Activity in ({Activity})\r\n| extend AuditStatus = iif(Level == 8, \"Success\", iif(Level == 16, \"Failure\", \"Unknown\"))\r\n| where '{ChangeType:lable}'==\"All\" or AuditStatus in ({ChangeType})\r\n| join kind=leftouter (VASWUsersParser) on $left.TargetAccount == $right.msDSPrincipalName\r\n| extend isAdminTarget = iif(isAdmin == \"\", \"Unknown\", iif(isAdmin == \"True\", \"True\", \"False\"))\r\n| where '{isAdminTarget:lable}'==\"All\" or isAdminTarget in ({isAdminTarget})\r\n| summarize ['Total changes']=count() by ChangeMaker\r\n| order by ['Total changes'] desc\r\n| serialize Id = row_number();\r\n//\r\n//Group 2 (ParentId). Count, serialize, join and union - ChangeMaker and Activity\r\nSecurityEvent\r\n| where EventID in (4720, 4722, 4724, 4725, 4726, 4765, 4766, 4794)\r\n| project TimeGenerated, Computer, Level, EventID, ChangeMaker=SubjectAccount, TargetAccount, Activity=replace_string(Activity, \"\\'\", \"\")\r\n| where ChangeMaker contains '{ChangeMaker}'\r\n| where TargetAccount contains '{TargetAccount}'\r\n| where '{Activity:lable}'==\"All\" or Activity in ({Activity})\r\n| extend AuditStatus = iif(Level == 8, \"Success\", iif(Level == 16, \"Failure\", \"Unknown\"))\r\n| where '{ChangeType:lable}'==\"All\" or AuditStatus in ({ChangeType})\r\n| join kind=leftouter (VASWUsersParser) on $left.TargetAccount == $right.msDSPrincipalName\r\n| extend isAdminTarget = iif(isAdmin == \"\", \"Unknown\", iif(isAdmin == \"True\", \"True\", \"False\"))\r\n| where '{isAdminTarget:lable}'==\"All\" or isAdminTarget in ({isAdminTarget})\r\n| summarize ['Total changes']=count() by ChangeMaker, Activity\r\n| order by ['Total changes'] desc, ChangeMaker asc \r\n| project ChangeMaker, ['Total changes'], Activity\r\n| order by ['Total changes'] asc\r\n| serialize Id = row_number(1000000)\r\n| join kind=inner (ChangeMakers) on ChangeMaker\r\n| project Id, Activity, ['Total changes'] , ParentId=Id1\r\n| union (ChangeMakers | project Id, ChangeMaker, ['Total changes'] )",
              "size": 0,
              "showAnalytics": true,
              "title": "User Management by ChangeMaker",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Activity",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "52ch"
                    }
                  },
                  {
                    "columnMatch": "Total changes",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "blueDark",
                      "customColumnWidthSetting": "17ch"
                    }
                  },
                  {
                    "columnMatch": "ParentId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ChangeMaker",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "30ch"
                    }
                  }
                ],
                "hierarchySettings": {
                  "idColumn": "Id",
                  "parentColumn": "ParentId",
                  "treeType": 0,
                  "expanderColumn": "ChangeMaker"
                }
              },
              "chartSettings": {
                "xAxis": "ChangeMaker",
                "group": "Activity",
                "createOtherGroup": null,
                "showLegend": true
              }
            },
            "name": "query - 1 - Copy - Copy",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SecurityEvent\r\n| where EventID in (4720, 4722, 4724, 4725, 4726, 4765, 4766, 4794)\r\n| project TimeGenerated, Computer, Level, EventID, ChangeMaker=SubjectAccount, TargetAccount , Activity=replace_string(Activity,\"\\'\",\"\")\r\n| where ChangeMaker contains '{ChangeMaker}'\r\n| where TargetAccount contains '{TargetAccount}'\r\n| where '{Activity:lable}'==\"All\" or Activity in ({Activity})\r\n| extend AuditStatus = iif(Level==8,\"Success\",iif(Level==16,\"Failure\",\"Unknown\"))\r\n| where '{ChangeType:lable}'==\"All\" or AuditStatus in ({ChangeType})\r\n| join kind=leftouter (VASWUsersParser) on $left.TargetAccount==$right.msDSPrincipalName\r\n| extend isAdminTarget = iif(isAdmin==\"\",\"Unknown\",iif(isAdmin==\"True\",\"True\",\"False\"))\r\n| where '{isAdminTarget:lable}'==\"All\" or isAdminTarget in ({isAdminTarget})\r\n| project TimeGenerated, Computer, AuditStatus, Activity, TargetAccount, isAdminTarget,ChangeMaker\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Details",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "isAdminTarget",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "False",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "True",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "gray",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "name": "query - 4",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "UserManagementTab"
      },
      "name": "UserManagementGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "About",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### Welcome to Visual Auditing Security Workbook\r\nThis workbook will assist you in auditing your Active Directory security events and configurations.\r\n\r\nInspired by the Visual Auditing Security Toolkit (VAST) service from Microsoft Support (now retired), developed by Brian Delaney and Jon Shectman, this workbook covers the following areas:\r\n1. Hygiene of Active Directory accounts (Users and Computers).\r\n2. LAPS deployment status and audit.\r\n3. Activity of non-existent users.\r\n4. Changes to Active Directory groups (additions and removals).\r\n5. User authentication activity.\r\n6. Schannel use.\r\n7. Clearing of security event logs on Domain Controllers.\r\n8. Changes to advanced Active Directory audit policies.\r\n9. User management activity.\r\n\r\nTo audit and remove Insecure Protocols from your Active Directory and Azure Active Directory, we recommend using the **Microsoft Sentinel Insecure Protocols Workbook**. It can be found in *Microsoft Sentinel > Threat Management > Workbooks*.\r\n\r\nTo fully utilize all tabs in this workbook, the following high-level requirements must be configured:\r\n\r\n1. Advanced audit policies and registry keys configuration in Domain Controllers.\r\n2. Audit LAPS password retrievals: Configure SACL\r\n3. Data Collection Rules: Events and SecurityEvents\r\n4. Setup the Custom HTTP Data Collector API (PowerShell script) to populate Custom Logs.\r\n5. Create the Log Analytics Parser functions in your Microsoft Sentinel.\r\n6. Connect your Domain Controllers to Microsoft Sentinel.\r\n7. Import the Visual Auditing Security Workbook\r\n\r\nThe Visual Auditing Security Workbook has been developed by **Diego Martínez Rellán (dmrellan) - Microsoft**",
              "style": "info"
            },
            "customWidth": "70",
            "name": "text - 14"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "AboutTab"
      },
      "name": "AboutGroup"
    }
  ],
  "defaultResourceIds": [
    "/subscriptions/{subscriptionid}/resourcegroups/{resourcegroupname}/providers/microsoft.operationalinsights/workspaces/{workspacename}"
  ],
  "fromTemplateId": "sentinel-UserWorkbook",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
